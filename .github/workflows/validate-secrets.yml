name: 🔐 Validate Secrets Configuration

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '.github/workflows/**'

jobs:
  validate-secrets:
    name: 🔍 Validate Required Secrets
    runs-on: ubuntu-latest

    steps:
      - name: 📝 Check Required Secrets
        run: |
          echo "🔍 Validating required secrets configuration..."

          # AWS 설정 검증
          if [ -z "${{ secrets.AWS_ROLE_ARN }}" ]; then
            echo "❌ AWS_ROLE_ARN is not set"
            exit 1
          else
            echo "✅ AWS_ROLE_ARN is configured"
          fi

          # Docker 설정 검증
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "❌ DOCKER_USERNAME is not set"
            exit 1
          else
            echo "✅ DOCKER_USERNAME is configured"
          fi

          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "❌ DOCKER_PASSWORD is not set"
            exit 1
          else
            echo "✅ DOCKER_PASSWORD is configured"
          fi

          # Slack 설정 검증
          if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            echo "❌ SLACK_WEBHOOK_URL is not set"
            exit 1
          else
            echo "✅ SLACK_WEBHOOK_URL is configured"
          fi

          # 데이터베이스 설정 검증
          if [ -z "${{ secrets.PROD_DB_HOST }}" ]; then
            echo "❌ PROD_DB_HOST is not set"
            exit 1
          else
            echo "✅ PROD_DB_HOST is configured"
          fi

          if [ -z "${{ secrets.STAGING_DB_HOST }}" ]; then
            echo "❌ STAGING_DB_HOST is not set"
            exit 1
          else
            echo "✅ STAGING_DB_HOST is configured"
          fi

          # Redis 설정 검증
          if [ -z "${{ secrets.PROD_REDIS_HOST }}" ]; then
            echo "❌ PROD_REDIS_HOST is not set"
            exit 1
          else
            echo "✅ PROD_REDIS_HOST is configured"
          fi

          if [ -z "${{ secrets.STAGING_REDIS_HOST }}" ]; then
            echo "❌ STAGING_REDIS_HOST is not set"
            exit 1
          else
            echo "✅ STAGING_REDIS_HOST is configured"
          fi

          echo "🎉 All required secrets are properly configured!"

  test-aws-connection:
    name: 🔗 Test AWS Connection
    runs-on: ubuntu-latest
    needs: validate-secrets

    permissions:
      id-token: write
      contents: read

    steps:
      - name: 🔧 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-2

      - name: 🧪 Test AWS Access
        run: |
          echo "🔍 Testing AWS access..."
          aws sts get-caller-identity
          echo "✅ AWS connection successful!"

  test-docker-connection:
    name: 🐳 Test Docker Hub Connection
    runs-on: ubuntu-latest
    needs: validate-secrets

    steps:
      - name: 🔑 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🧪 Test Docker Hub Access
        run: |
          echo "🔍 Testing Docker Hub access..."
          docker pull hello-world
          echo "✅ Docker Hub connection successful!"

  test-slack-notification:
    name: 📢 Test Slack Notification
    runs-on: ubuntu-latest
    needs: validate-secrets

    steps:
      - name: 📨 Send Test Notification
        run: |
          curl -X POST "${{ secrets.SLACK_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "text": "🧪 CarGoro CI/CD Secrets 설정 테스트 완료!",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*CarGoro CI/CD Pipeline*\n✅ 모든 GitHub Secrets이 정상적으로 설정되었습니다!"
                  }
                },
                {
                  "type": "context",
                  "elements": [
                    {
                      "type": "mrkdwn",
                      "text": "테스트 시간: $(date '+%Y-%m-%d %H:%M:%S')"
                    }
                  ]
                }
              ]
            }'
          echo "✅ Slack notification sent successfully!"
