{
  "name": "cargoro",
  "version": "0.1.0",
  "private": true,
  "workspaces": [
    "eslint-config-custom",
    "apps/*",
    "packages/*",
    "backend/*",
    "backend/services/*",
    "scripts"
  ],
  "scripts": {
    "build": "turbo run build",
    "build:force": "turbo run build --force",
    "build:packages": "turbo run build --filter='./packages/*'",
    "build:apps": "turbo run build --filter='./apps/*'",
    "build:backend": "turbo run build --filter='./backend/*'",
    "cli": "tsx scripts/cli.ts",
    "cli:component": "tsx scripts/cli.ts generate:component",
    "cli:feature": "tsx scripts/cli.ts generate:feature",
    "setup:env": "tsx scripts/setup-env.ts",
    "sync:env": "tsx scripts/sync-env.ts",
    "generate:types": "tsx scripts/generate-types.ts",
    "deploy": "tsx scripts/deploy.ts",
    "format:all": "tsx scripts/format-all.ts",
    "build:workshop": "turbo run build --filter=@cargoro/workshop-web",
    "build:fleet": "turbo run build --filter=@cargoro/fleet-manager-web",
    "build:parts": "turbo run build --filter=@cargoro/parts-web",
    "build:admin": "turbo run build --filter=@cargoro/superadmin-web",
    "build:docker": "docker build -f infra/docker/Dockerfile.multi-stage -t cargoro:latest .",
    "dev": "turbo run dev --concurrency=15",
    "# 개별 앱 실행 스크립트": "==================================",
    "dev:workshop": "turbo run dev --filter=@cargoro/workshop-web",
    "dev:fleet": "turbo run dev --filter=@cargoro/fleet-manager-web",
    "dev:parts": "turbo run dev --filter=@cargoro/parts-web",
    "dev:admin": "turbo run dev --filter=@cargoro/superadmin-web",
    "dev:delivery": "turbo run start --filter=@cargoro/delivery-driver",
    "dev:smart-car": "turbo run start --filter=@cargoro/smart-car-assistant",
    "dev:mobile": "turbo run start --filter=@cargoro/workshop-mobile",
    "dev:customer-mobile": "turbo run start --filter=@cargoro/customer-mobile",
    "dev:technician-mobile": "turbo run start --filter=@cargoro/technician-mobile",
    "# 그룹별 실행 스크립트": "==================================",
    "dev:web": "turbo run dev --filter='@cargoro/workshop-web' --filter='@cargoro/fleet-manager-web' --filter='@cargoro/parts-web' --filter='@cargoro/superadmin-web'",
    "dev:mobile-apps": "turbo run start --filter='@cargoro/delivery-driver' --filter='@cargoro/smart-car-assistant' --filter='@cargoro/workshop-mobile' --filter='@cargoro/customer-mobile' --filter='@cargoro/technician-mobile'",
    "dev:all-frontends": "./start_all_frontends.sh",
    "stop:all-frontends": "./stop_all_frontends.sh",
    "# 테스트 스크립트": "==================================",
    "test": "vitest",
    "test:browser": "vitest run --config vitest.config.browser.ts",
    "test:unit": "vitest run tests/unit",
    "test:integration": "vitest run tests/integration",
    "test:watch": "vitest watch",
    "test:coverage": "vitest run --coverage",
    "test:coverage:browser": "vitest run --coverage --config vitest.config.browser.ts",
    "test:coverage:all": "pnpm test:coverage && pnpm test:coverage:browser && node scripts/merge-coverage.js",
    "test:coverage:merged": "nyc report --reporter=html --reporter=text --temp-dir=./coverage-merged",
    "test:ui": "vitest --ui",
    "test:all": "turbo run test",
    "test:root": "vitest run --project root",
    "test:workspace": "vitest workspace",
    "test:changed": "vitest run --changed",
    "test:ci": "vitest run --reporter=json --reporter=default --coverage.reporter=lcov",
    "# 린트 및 타입 검사 스크립트": "==================================",
    "lint": "turbo run lint",
    "lint:except-ui": "turbo run lint --filter=!./packages/ui",
    "lint:fix": "turbo run lint -- --fix",
    "lint:check": "turbo run lint --continue",
    "types:fix": "./auto-fix-types.sh",
    "types:check": "turbo run typecheck",
    "fix:all": "./fix-types-and-lint.sh",
    "typecheck": "turbo run typecheck",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,json,md,css}\"",
    "format:check": "prettier --check \"**/*.{ts,tsx,js,jsx,json,md,css}\"",
    "clean": "turbo run clean && rm -rf node_modules .turbo coverage",
    "clean:deps": "find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +",
    "clean:dist": "find . -name 'dist' -type d -prune -exec rm -rf '{}' +",
    "clean:build": "find . -name '.next' -type d -prune -exec rm -rf '{}' +",
    "clean:turbo": "rm -rf .turbo",
    "clean:all": "pnpm clean:deps && pnpm clean:dist && pnpm clean:build && pnpm clean:turbo",
    "fix:build": "bash scripts/fix-build.sh",
    "clean:locks": "bash scripts/clean-locks.sh",
    "build:ui": "pnpm --filter @cargoro/ui build",
    "reinstall": "pnpm clean:all && pnpm install",
    "prepare": "husky install",
    "start": "turbo run start",
    "prisma:generate": "cd backend/database/prisma && npx prisma generate",
    "prisma:migrate": "cd backend/database/prisma && npx prisma migrate dev",
    "prisma:deploy": "cd backend/database/prisma && npx prisma migrate deploy",
    "prisma:studio": "cd backend/database/prisma && npx prisma studio",
    "db:seed": "cd backend/database/prisma && ts-node seed.ts",
    "storybook": "turbo run storybook",
    "build-storybook": "turbo run build-storybook",
    "e2e": "turbo run e2e",
    "analyze": "ANALYZE=true turbo run build",
    "preinstall": "echo 'Installing dependencies...'",
    "create:package": "node scripts/cli.ts create-package",
    "create:app": "node scripts/cli.ts create-app",
    "env:sync": "node scripts/sync-env.ts",
    "ci:install": "pnpm install --frozen-lockfile",
    "ci:build": "pnpm build:packages && pnpm build:apps && pnpm build:backend",
    "ci:lint": "pnpm lint && pnpm format:check && pnpm typecheck",
    "ci:validate": "pnpm ci:lint",
    "deploy:staging": "cd infra/k8s && helm upgrade --install cargoro-staging . --values values-staging.yaml",
    "deploy:production": "cd infra/k8s && helm upgrade --install cargoro-production . --values values-production.yaml",
    "deploy:canary": "cd infra/k8s && helm upgrade --install cargoro-canary . --values values-production.yaml --values values-canary.yaml",
    "deploy:blue-green": "cd infra/k8s && helm upgrade --install cargoro-green . --values values-production.yaml --values values-blue-green.yaml",
    "docker:build": "docker build -f infra/docker/Dockerfile.multi-stage --target api-gateway -t cargoro/api-gateway .",
    "docker:build:worker": "docker build -f infra/docker/Dockerfile.multi-stage --target worker -t cargoro/worker .",
    "docker:build:web": "docker build -f infra/docker/Dockerfile.multi-stage --target web-apps -t cargoro/web-apps .",
    "docker:build:mobile": "docker build -f infra/docker/Dockerfile.multi-stage --target mobile-apps -t cargoro/mobile-apps .",
    "docker:build:all": "pnpm docker:build && pnpm docker:build:worker && pnpm docker:build:web && pnpm docker:build:mobile",
    "infra:validate": "cd infra/terraform && terraform validate && cd ../k8s && helm lint .",
    "infra:plan": "cd infra/terraform && terraform plan",
    "infra:apply": "cd infra/terraform && terraform apply",
    "health:check": "curl -f http://localhost:3000/health || exit 1",
    "health:db": "curl -f http://localhost:3000/health/db || exit 1",
    "health:redis": "curl -f http://localhost:3000/health/redis || exit 1",
    "deps:update": "pnpm update -r -L",
    "deps:dedupe": "pnpm dedupe",
    "deps:check": "pnpm audit",
    "validate": "turbo run lint typecheck",
    "validate:ci": "turbo run lint typecheck",
    "check-types": "tsc --noEmit",
    "setup": "pnpm prepare && pnpm env:sync && pnpm prisma:generate",
    "# 구조 정리 명령어": "==================================",
    "restructure": "node scripts/cli/restructure.cjs",
    "restructure:app": "node scripts/cli/restructure.cjs --app",
    "restructure:package": "node scripts/cli/restructure.cjs --package",
    "restructure:backend": "node scripts/cli/restructure.cjs --backend",
    "restructure:dry-run": "node scripts/cli/restructure.cjs --dry-run --verbose",
    "# 기타 명령어": "==================================",
    "generate:graphql": "graphql-codegen --config codegen.yml"
  },
  "devDependencies": {
    "@axe-core/react": "^4.10.1",
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3",
    "@eslint/eslintrc": "^3.1.0",
    "@eslint/js": "^9.0.0",
    "@next/eslint-plugin-next": "^15.0.0",
    "@prisma/client": "^5.12.2",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.0.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.0.2",
    "@radix-ui/react-toast": "^1.2.14",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/react-hooks": "^8.0.1",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcrypt": "^5.0.2",
    "@types/crypto-js": "^4.2.2",
    "@types/file-saver": "^2.0.7",
    "@types/node": "^22.15.30",
    "@types/pg": "^8.15.2",
    "@types/testing-library__jest-dom": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "@vitejs/plugin-react": "^4.4.1",
    "@vitest/coverage-v8": "^1.6.1",
    "@vitest/ui": "^1.6.1",
    "axe-core": "^4.10.3",
    "babel-loader": "^10.0.0",
    "chalk": "^5.4.1",
    "commander": "^14.0.0",
    "cross-env": "^7.0.3",
    "dedent": "^1.5.1",
    "diff-sequences": "^29.6.3",
    "dotenv": "^16.5.0",
    "dotenv-cli": "^7.4.1",
    "eslint": "^8.57.1",
    "eslint-config-next": "^15.1.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.8.0",
    "eslint-plugin-react": "^7.34.0",
    "eslint-plugin-tailwindcss": "^3.15.1",
    "glob": "^10.4.5",
    "husky": "^8.0.3",
    "ignore-loader": "^0.1.2",
    "inquirer": "^12.6.3",
    "istanbul-lib-coverage": "^3.2.2",
    "istanbul-lib-report": "^3.0.1",
    "istanbul-reports": "^3.1.7",
    "jest-environment-jsdom": "^29.7.0",
    "jsdom": "^26.1.0",
    "lint-staged": "^15.2.0",
    "lodash-es": "^4.17.21",
    "msw": "^2.9.0",
    "prettier": "^3.1.1",
    "prettier-plugin-tailwindcss": "^0.5.9",
    "prisma": "^5.12.2",
    "tailwindcss-animate": "^1.0.7",
    "ts-node": "^10.9.2",
    "tsx": "^4.19.4",
    "turbo": "^2.5.3",
    "typescript": "5.4.5",
    "vitest": "^1.6.1"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "packageManager": "pnpm@8.12.0",
  "pnpm": {
    "overrides": {
      "react": "18.2.0",
      "react-dom": "18.2.0",
      "react-test-renderer": "18.2.0",
      "use-sync-external-store": "1.2.0",
      "react-is": "18.2.0",
      "scheduler": "0.23.0",
      "@types/scheduler": "< 0.23.0",
      "@types/react": "18.2.47",
      "@types/react-dom": "18.2.18",
      "@typescript-eslint/eslint-plugin": "^8.32.1",
      "@typescript-eslint/parser": "^8.32.1",
      "@testing-library/react": "^16.3.0",
      "react-native": "0.71.3",
      "react-native-safe-area-context": "4.5.0",
      "react-native-screens": "3.20.0",
      "react-native-gesture-handler": "2.9.0",
      "@react-navigation/native": "6.1.10",
      "@react-navigation/bottom-tabs": "6.5.11",
      "@react-navigation/native-stack": "6.9.17",
      "@react-navigation/stack": "6.3.21",
      "@react-navigation/elements": "1.3.31",
      "lucide-react": "0.263.1",
      "@clerk/clerk-react": "5.31.8",
      "next": "14.2.25",
      "@clerk/nextjs": "6.20.2"
    }
  },
  "exports": {
    "./components": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "require": "./dist/index.js"
    },
    "./hooks": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "require": "./dist/index.js"
    }
  },
  "dependencies": {
    "@babel/plugin-transform-runtime": "^7.27.1",
    "@babel/runtime": "^7.27.6",
    "@cargoro/auth": "workspace:^",
    "@cargoro/ui": "workspace:^",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-tabs": "^1.1.12",
    "@react-native-async-storage/async-storage": "^2.1.2",
    "clsx": "^2.1.1",
    "date-fns": "2.30.0",
    "file-saver": "^2.0.5",
    "lucide-react": "0.263.1",
    "next": "14.2.25",
    "sonner": "^2.0.3"
  }
}
