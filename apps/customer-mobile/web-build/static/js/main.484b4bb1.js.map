{"version":3,"file":"static/js/main.484b4bb1.js","mappings":"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","sources":["src/providers/auth-provider.tsx","src/screens/auth/welcome-screen.tsx","src/screens/auth/login-screen.tsx","src/screens/auth/signup-screen.tsx","src/screens/vehicles/vehicles-screen.tsx","src/screens/profile/profile-screen.tsx","src/screens/vehicles/vehicle-detail-screen.tsx","src/screens/vehicles/add-vehicle-screen.tsx","src/screens/booking/workshop-list-screen.tsx","src/screens/booking/booking-detail-screen.tsx","src/screens/history/service-history-screen.tsx","src/screens/notifications/notifications-screen.tsx","src/screens/tracking/live-tracking-screen.tsx","src/config/app-config.ts","src/services/integrated-navigation-service.ts","src/screens/navigation/integrated-navigation-screen.tsx","src/utils/obd-connector.ts","src/screens/service/service-hub-screen.tsx","src/screens/service/emergency-service-screen.tsx","src/screens/navigation/map-detail-screen.tsx","src/screens/service/smart-diagnosis-screen.tsx","src/screens/service/maintenance-booking-screen.tsx","src/screens/service/workshop-search-screen.tsx","src/screens/service/maintenance-history-screen.tsx","src/screens/home/smart-home-screen.tsx","App.tsx","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  PropsWithChildren,\n  useEffect,\n  useCallback,\n  useReducer,\n} from 'react';\nimport * as SecureStore from 'expo-secure-store';\nimport { Platform } from 'react-native';\nimport { apiClient } from '@cargoro/api-client';\n\n// Auth Context 타입 정의\ninterface AuthContextType {\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (data: SignUpData) => Promise<void>;\n  signOut: () => Promise<void>;\n  session: string | null;\n  user: CustomerUser | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\ninterface CustomerUser {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  profileImage?: string;\n  vehicles?: Vehicle[];\n  memberSince: string;\n  totalServices: number;\n  activeBookings: number;\n}\n\ninterface Vehicle {\n  id: string;\n  make: string;\n  model: string;\n  year: number;\n  licensePlate: string;\n  vin?: string;\n  color?: string;\n  mileage?: number;\n}\n\ninterface SignUpData {\n  name: string;\n  email: string;\n  password: string;\n  phone: string;\n  [key: string]: string; // 인덱스 시그니처 추가\n}\n\n// Auth Context 생성\nconst AuthContext = createContext<AuthContextType>({\n  signIn: async () => {},\n  signUp: async () => {},\n  signOut: async () => {},\n  session: null,\n  user: null,\n  isLoading: true,\n  error: null,\n});\n\n// Custom Hook for Auth\nexport function useSession(): AuthContextType {\n  const context = useContext(AuthContext);\n  return context;\n}\n\n// Async State Hook 타입\ntype UseStateHook<T> = [[boolean, T | null], (value: T | null) => void];\n\n// Async State Hook\nfunction useAsyncState<T>(initialValue: [boolean, T | null] = [true, null]): UseStateHook<T> {\n  return useReducer(\n    (state: [boolean, T | null], action: T | null = null): [boolean, T | null] => [false, action],\n    initialValue\n  ) as UseStateHook<T>;\n}\n\n// Storage Helper Functions\nexport async function setStorageItemAsync(key: string, value: string | null) {\n  if (Platform.OS === 'web') {\n    try {\n      // Web 환경에서 localStorage 사용\n      const storage = (globalThis as unknown as Window & { localStorage?: Storage }).localStorage;\n      if (storage) {\n        if (value === null) {\n          storage.removeItem(key);\n        } else {\n          storage.setItem(key, value);\n        }\n      }\n    } catch (e) {\n      console.error('Local storage is unavailable:', e);\n    }\n  } else {\n    if (value == null) {\n      await SecureStore.deleteItemAsync(key);\n    } else {\n      await SecureStore.setItemAsync(key, value);\n    }\n  }\n}\n\nexport async function getStorageItemAsync(key: string): Promise<string | null> {\n  if (Platform.OS === 'web') {\n    try {\n      const storage = (globalThis as unknown as Window & { localStorage?: Storage }).localStorage;\n      if (storage) {\n        return storage.getItem(key);\n      }\n    } catch (e) {\n      console.error('Local storage is unavailable:', e);\n    }\n  } else {\n    return await SecureStore.getItemAsync(key);\n  }\n  return null;\n}\n\n// Storage State Hook\nexport function useStorageState(key: string): UseStateHook<string> {\n  const [state, setState] = useAsyncState<string>();\n\n  // 초기 값 로드\n  useEffect(() => {\n    (async () => {\n      const value = await getStorageItemAsync(key);\n      setState(value);\n    })();\n  }, [key]);\n\n  // 값 설정 함수\n  const setValue = useCallback(\n    async (value: string | null) => {\n      setState(value);\n      await setStorageItemAsync(key, value);\n    },\n    [key]\n  );\n\n  return [state, setValue];\n}\n\n// Session Provider Component\nexport function SessionProvider({ children }: PropsWithChildren) {\n  const [[isStorageLoading, session], setSession] = useStorageState('customer-auth-session');\n  const [user, setUser] = React.useState<CustomerUser | null>(null);\n  const [error, setError] = React.useState<string | null>(null);\n  const [isInitialized, setIsInitialized] = React.useState(false); // 사용자 정보 로드\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        if (session) {\n          const userStr = await getStorageItemAsync('customer-user-info');\n          if (userStr) {\n            setUser(JSON.parse(userStr));\n          }\n        } else {\n          // 세션이 없어도 기본 사용자 정보 설정 (게스트 모드)\n          const guestUser: CustomerUser = {\n            id: 'guest',\n            name: '게스트 사용자',\n            email: 'guest@example.com',\n            phone: '',\n            memberSince: new Date().toISOString(),\n            totalServices: 0,\n            activeBookings: 0,\n          };\n          setUser(guestUser);\n        }\n      } catch (error) {\n        console.error('Error loading user:', error);\n        setUser(null);\n      } finally {\n        setIsInitialized(true);\n      }\n    };\n\n    if (!isStorageLoading) {\n      loadUser();\n    }\n  }, [session, isStorageLoading]);\n\n  // API 클라이언트에 토큰 설정\n  useEffect(() => {\n    if (session) {\n      apiClient.setAuthToken(session);\n    } else {\n      apiClient.clearAuthToken();\n    }\n  }, [session]);\n\n  const signIn = useCallback(\n    async (email: string, password: string) => {\n      try {\n        setError(null);\n\n        // API 호출하여 로그인\n        const response = await apiClient.post<{ token: string; user: CustomerUser }>(\n          '/auth/customer/login',\n          {\n            email,\n            password,\n          }\n        );\n\n        const { token, user } = response;\n\n        // 토큰 및 사용자 정보 저장\n        await setSession(token);\n        await setStorageItemAsync('customer-user-info', JSON.stringify(user));\n        setUser(user);\n      } catch (err: unknown) {\n        const error = err as { response?: { data?: { message?: string } } };\n        console.error('Sign in error:', error);\n\n        // 개발 모드에서는 더미 데이터 사용\n        if (__DEV__) {\n          console.warn('개발 모드: 더미 인증 데이터 사용');\n          const dummyUser: CustomerUser = {\n            id: '1',\n            name: '홍길동',\n            email: email,\n            phone: '010-1234-5678',\n            vehicles: [\n              {\n                id: 'v1',\n                make: '현대',\n                model: '아반떼',\n                year: 2022,\n                licensePlate: '12가 3456',\n                color: '흰색',\n                mileage: 15000,\n              },\n              {\n                id: 'v2',\n                make: '기아',\n                model: 'K5',\n                year: 2021,\n                licensePlate: '34나 5678',\n                color: '검정색',\n                mileage: 32000,\n              },\n            ],\n            memberSince: '2023-01-15',\n            totalServices: 12,\n            activeBookings: 1,\n          };\n\n          await setSession('dev-customer-token-12345');\n          await setStorageItemAsync('customer-user-info', JSON.stringify(dummyUser));\n          setUser(dummyUser);\n          return;\n        }\n\n        setError(error.response?.data?.message || '로그인에 실패했습니다.');\n        throw error;\n      }\n    },\n    [setSession]\n  );\n\n  const signUp = useCallback(\n    async (data: SignUpData) => {\n      try {\n        setError(null);\n\n        // API 호출하여 회원가입\n        const response = await apiClient.post<{ token: string; user: CustomerUser }>(\n          '/auth/customer/signup',\n          data\n        );\n\n        const { token, user } = response;\n\n        // 토큰 및 사용자 정보 저장\n        await setSession(token);\n        await setStorageItemAsync('customer-user-info', JSON.stringify(user));\n        setUser(user);\n      } catch (err: unknown) {\n        const error = err as { response?: { data?: { message?: string } } };\n        console.error('Sign up error:', error);\n\n        // 개발 모드에서는 더미 데이터로 회원가입 성공 처리\n        if (__DEV__) {\n          console.warn('개발 모드: 더미 회원가입 처리');\n          const dummyUser: CustomerUser = {\n            id: '1',\n            name: data.name,\n            email: data.email,\n            phone: data.phone,\n            vehicles: [],\n            memberSince: new Date().toISOString(),\n            totalServices: 0,\n            activeBookings: 0,\n          };\n\n          await setSession('dev-customer-token-12345');\n          await setStorageItemAsync('customer-user-info', JSON.stringify(dummyUser));\n          setUser(dummyUser);\n          return;\n        }\n\n        setError(error.response?.data?.message || '회원가입에 실패했습니다.');\n        throw error;\n      }\n    },\n    [setSession]\n  );\n\n  const signOut = useCallback(async () => {\n    try {\n      // API 호출하여 로그아웃 (옵션)\n      if (session) {\n        try {\n          await apiClient.post('/auth/logout');\n        } catch (err) {\n          console.warn('Logout API failed:', err);\n        }\n      }\n\n      // 로컬 데이터 제거\n      await setSession(null);\n      await setStorageItemAsync('customer-user-info', null);\n      setUser(null);\n    } catch (err) {\n      console.error('Sign out error:', err);\n      // 로그아웃은 항상 성공하도록 처리\n      await setSession(null);\n      await setStorageItemAsync('customer-user-info', null);\n      setUser(null);\n    }\n  }, [session, setSession]);\n\n  // isLoading은 스토리지 로딩 중이거나 초기화되지 않은 상태\n  const isLoading = isStorageLoading || !isInitialized;\n\n  return (\n    <AuthContext.Provider\n      value={{\n        signIn,\n        signUp,\n        signOut,\n        session,\n        user,\n        isLoading,\n        error,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n}\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Dimensions } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/Feather';\nimport type { AuthScreenNavigationProp } from '../../types/navigation';\n\nconst { width: _width } = Dimensions.get('window');\n\nexport default function WelcomeScreen() {\n  const navigation = useNavigation<AuthScreenNavigationProp>();\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.content}>\n        {/* 로고 및 애니메이션 */}\n        <View style={styles.logoSection}>\n          <View style={styles.logoContainer}>\n            <Icon name=\"truck\" size={60} color=\"#6366F1\" />\n          </View>\n          <Text style={styles.appName}>CarGoro</Text>\n          <Text style={styles.tagline}>스마트한 차량 관리의 시작</Text>\n        </View>\n\n        {/* 특징 소개 */}\n        <View style={styles.featuresSection}>\n          <View style={styles.featureItem}>\n            <View style={styles.featureIcon}>\n              <Icon name=\"calendar\" size={24} color=\"#6366F1\" />\n            </View>\n            <View style={styles.featureContent}>\n              <Text style={styles.featureTitle}>간편한 정비 예약</Text>\n              <Text style={styles.featureDescription}>\n                언제 어디서나 쉽고 빠르게 정비소를 예약하세요\n              </Text>\n            </View>\n          </View>\n\n          <View style={styles.featureItem}>\n            <View style={styles.featureIcon}>\n              <Icon name=\"map-pin\" size={24} color=\"#10B981\" />\n            </View>\n            <View style={styles.featureContent}>\n              <Text style={styles.featureTitle}>실시간 위치 추적</Text>\n              <Text style={styles.featureDescription}>\n                차량의 정비 진행 상황을 실시간으로 확인하세요\n              </Text>\n            </View>\n          </View>\n\n          <View style={styles.featureItem}>\n            <View style={styles.featureIcon}>\n              <Icon name=\"clock\" size={24} color=\"#F59E0B\" />\n            </View>\n            <View style={styles.featureContent}>\n              <Text style={styles.featureTitle}>정비 이력 관리</Text>\n              <Text style={styles.featureDescription}>\n                모든 정비 기록을 한눈에 확인하고 관리하세요\n              </Text>\n            </View>\n          </View>\n        </View>\n\n        {/* 버튼 섹션 */}\n        <View style={styles.buttonSection}>\n          <TouchableOpacity\n            style={styles.primaryButton}\n            onPress={() => navigation.navigate('Signup')}\n          >\n            <Text style={styles.primaryButtonText}>시작하기</Text>\n            <Icon name=\"arrow-right\" size={20} color=\"#FFFFFF\" />\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={styles.secondaryButton}\n            onPress={() => navigation.navigate('Login')}\n          >\n            <Text style={styles.secondaryButtonText}>이미 계정이 있으신가요?</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  content: {\n    flex: 1,\n    paddingHorizontal: 24,\n    justifyContent: 'space-between',\n  },\n  logoSection: {\n    alignItems: 'center',\n    marginTop: 60,\n  },\n  logoContainer: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    backgroundColor: '#EEF2FF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  appName: {\n    fontSize: 36,\n    fontWeight: '800',\n    color: '#1F2937',\n    marginBottom: 8,\n  },\n  tagline: {\n    fontSize: 16,\n    color: '#6B7280',\n    textAlign: 'center',\n  },\n  featuresSection: {\n    marginTop: 40,\n  },\n  featureItem: {\n    flexDirection: 'row',\n    marginBottom: 24,\n  },\n  featureIcon: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    backgroundColor: '#F3F4F6',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  featureContent: {\n    flex: 1,\n  },\n  featureTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginBottom: 4,\n  },\n  featureDescription: {\n    fontSize: 14,\n    color: '#6B7280',\n    lineHeight: 20,\n  },\n  buttonSection: {\n    marginBottom: 40,\n  },\n  primaryButton: {\n    backgroundColor: '#6366F1',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 16,\n    borderRadius: 12,\n    marginBottom: 16,\n  },\n  primaryButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginRight: 8,\n  },\n  secondaryButton: {\n    alignItems: 'center',\n    paddingVertical: 12,\n  },\n  secondaryButtonText: {\n    fontSize: 14,\n    color: '#6366F1',\n    fontWeight: '500',\n  },\n});\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Alert,\n  ActivityIndicator,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/Feather';\nimport { useSession } from '../../providers/auth-provider';\nimport type { AuthScreenNavigationProp } from '../../types/navigation';\n\nexport default function LoginScreen() {\n  const navigation = useNavigation<AuthScreenNavigationProp>();\n  const { signIn, error: authError } = useSession();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState<{ email?: string; password?: string }>({});\n\n  const validateForm = () => {\n    const newErrors: { email?: string; password?: string } = {};\n\n    if (!email) {\n      newErrors.email = '이메일을 입력해주세요.';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      newErrors.email = '올바른 이메일 형식이 아닙니다.';\n    }\n\n    if (!password) {\n      newErrors.password = '비밀번호를 입력해주세요.';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleLogin = async () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await signIn(email.toLowerCase().trim(), password);\n      // 성공 시 자동으로 메인 화면으로 이동\n    } catch (error) {\n      Alert.alert('로그인 실패', authError || '이메일 또는 비밀번호가 올바르지 않습니다.', [\n        { text: '확인' },\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleForgotPassword = () => {\n    Alert.alert('비밀번호 찾기', '등록된 이메일로 비밀번호 재설정 링크가 전송됩니다.', [\n      { text: '취소', style: 'cancel' },\n      {\n        text: '전송',\n        onPress: () => {\n          Alert.alert('전송 완료', '비밀번호 재설정 링크가 이메일로 전송되었습니다.');\n        },\n      },\n    ]);\n  };\n\n  const handleSocialLogin = (provider: string) => {\n    Alert.alert(`${provider} 로그인`, `${provider} 로그인 기능은 준비 중입니다.`);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={styles.keyboardView}\n      >\n        <ScrollView\n          contentContainerStyle={styles.scrollContent}\n          showsVerticalScrollIndicator={false}\n          keyboardShouldPersistTaps=\"handled\"\n        >\n          {/* 헤더 */}\n          <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n            <Icon name=\"arrow-left\" size={24} color=\"#1F2937\" />\n          </TouchableOpacity>\n\n          {/* 타이틀 */}\n          <View style={styles.titleSection}>\n            <Text style={styles.title}>다시 만나서 반가워요!</Text>\n            <Text style={styles.subtitle}>계정에 로그인하여 서비스를 이용해보세요</Text>\n          </View>\n\n          {/* 로그인 폼 */}\n          <View style={styles.formSection}>\n            {/* 이메일 입력 */}\n            <View style={styles.inputContainer}>\n              <Text style={styles.inputLabel}>이메일</Text>\n              <View style={[styles.inputWrapper, errors.email ? styles.inputError : null]}>\n                <Icon name=\"mail\" size={20} color=\"#6B7280\" style={styles.inputIcon} />\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"example@email.com\"\n                  placeholderTextColor=\"#9CA3AF\"\n                  value={email}\n                  onChangeText={setEmail}\n                  keyboardType=\"email-address\"\n                  autoCapitalize=\"none\"\n                  autoCorrect={false}\n                  editable={!isLoading}\n                />\n              </View>\n              {errors.email && <Text style={styles.errorText}>{errors.email}</Text>}\n            </View>\n\n            {/* 비밀번호 입력 */}\n            <View style={styles.inputContainer}>\n              <Text style={styles.inputLabel}>비밀번호</Text>\n              <View style={[styles.inputWrapper, errors.password ? styles.inputError : null]}>\n                <Icon name=\"lock\" size={20} color=\"#6B7280\" style={styles.inputIcon} />\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"••••••••\"\n                  placeholderTextColor=\"#9CA3AF\"\n                  value={password}\n                  onChangeText={setPassword}\n                  secureTextEntry={!showPassword}\n                  editable={!isLoading}\n                />\n                <TouchableOpacity\n                  onPress={() => setShowPassword(!showPassword)}\n                  style={styles.eyeButton}\n                >\n                  <Icon name={showPassword ? 'eye' : 'eye-off'} size={20} color=\"#6B7280\" />\n                </TouchableOpacity>\n              </View>\n              {errors.password && <Text style={styles.errorText}>{errors.password}</Text>}\n            </View>\n\n            {/* 비밀번호 찾기 */}\n            <TouchableOpacity\n              style={styles.forgotPasswordButton}\n              onPress={handleForgotPassword}\n              disabled={isLoading}\n            >\n              <Text style={styles.forgotPasswordText}>비밀번호를 잊으셨나요?</Text>\n            </TouchableOpacity>\n\n            {/* 로그인 버튼 */}\n            <TouchableOpacity\n              style={[styles.loginButton, isLoading && styles.disabledButton]}\n              onPress={handleLogin}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\n              ) : (\n                <Text style={styles.loginButtonText}>로그인</Text>\n              )}\n            </TouchableOpacity>\n\n            {/* 소셜 로그인 */}\n            <View style={styles.dividerContainer}>\n              <View style={styles.divider} />\n              <Text style={styles.dividerText}>또는</Text>\n              <View style={styles.divider} />\n            </View>\n\n            <View style={styles.socialButtons}>\n              <TouchableOpacity\n                style={styles.socialButton}\n                onPress={() => handleSocialLogin('Google')}\n                disabled={isLoading}\n              >\n                <Icon name=\"mail\" size={20} color=\"#EA4335\" />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.socialButton}\n                onPress={() => handleSocialLogin('Apple')}\n                disabled={isLoading}\n              >\n                <Icon name=\"smartphone\" size={20} color=\"#000000\" />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.socialButton}\n                onPress={() => handleSocialLogin('Kakao')}\n                disabled={isLoading}\n              >\n                <Icon name=\"message-circle\" size={20} color=\"#FEE500\" />\n              </TouchableOpacity>\n            </View>\n\n            {/* 회원가입 링크 */}\n            <View style={styles.signupContainer}>\n              <Text style={styles.signupText}>아직 계정이 없으신가요?</Text>\n              <TouchableOpacity onPress={() => navigation.navigate('Signup')} disabled={isLoading}>\n                <Text style={styles.signupLink}>회원가입</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  keyboardView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n    paddingHorizontal: 24,\n  },\n  backButton: {\n    marginTop: 16,\n    marginBottom: 24,\n  },\n  titleSection: {\n    marginBottom: 32,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: '700',\n    color: '#1F2937',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6B7280',\n  },\n  formSection: {\n    flex: 1,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  inputLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#374151',\n    marginBottom: 8,\n  },\n  inputWrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#E5E7EB',\n    paddingHorizontal: 16,\n    height: 56,\n  },\n  inputError: {\n    borderColor: '#EF4444',\n  },\n  inputIcon: {\n    marginRight: 12,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    color: '#1F2937',\n  },\n  eyeButton: {\n    padding: 4,\n  },\n  errorText: {\n    fontSize: 12,\n    color: '#EF4444',\n    marginTop: 4,\n    marginLeft: 4,\n  },\n  forgotPasswordButton: {\n    alignSelf: 'flex-end',\n    marginBottom: 24,\n  },\n  forgotPasswordText: {\n    fontSize: 14,\n    color: '#6366F1',\n    fontWeight: '500',\n  },\n  loginButton: {\n    backgroundColor: '#6366F1',\n    borderRadius: 12,\n    paddingVertical: 16,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  loginButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#FFFFFF',\n  },\n  disabledButton: {\n    opacity: 0.6,\n  },\n  dividerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  divider: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#E5E7EB',\n  },\n  dividerText: {\n    fontSize: 14,\n    color: '#6B7280',\n    marginHorizontal: 16,\n  },\n  socialButtons: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 32,\n  },\n  socialButton: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    backgroundColor: '#F3F4F6',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginHorizontal: 8,\n  },\n  signupContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  signupText: {\n    fontSize: 14,\n    color: '#6B7280',\n  },\n  signupLink: {\n    fontSize: 14,\n    color: '#6366F1',\n    fontWeight: '600',\n    marginLeft: 4,\n  },\n});\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Alert,\n  ActivityIndicator,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/Feather';\nimport { useSession } from '../../providers/auth-provider';\nimport type { AuthScreenNavigationProp } from '../../types/navigation';\n\nexport default function SignupScreen() {\n  const navigation = useNavigation<AuthScreenNavigationProp>();\n  const { signUp, error: authError } = useSession();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [agreedToTerms, setAgreedToTerms] = useState(false);\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.name) {\n      newErrors.name = '이름을 입력해주세요.';\n    }\n\n    if (!formData.email) {\n      newErrors.email = '이메일을 입력해주세요.';\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      newErrors.email = '올바른 이메일 형식이 아닙니다.';\n    }\n\n    if (!formData.phone) {\n      newErrors.phone = '전화번호를 입력해주세요.';\n    } else if (!/^01[0-9]-?[0-9]{3,4}-?[0-9]{4}$/.test(formData.phone.replace(/-/g, ''))) {\n      newErrors.phone = '올바른 전화번호 형식이 아닙니다.';\n    }\n\n    if (!formData.password) {\n      newErrors.password = '비밀번호를 입력해주세요.';\n    } else if (formData.password.length < 8) {\n      newErrors.password = '비밀번호는 8자 이상이어야 합니다.';\n    }\n\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = '비밀번호 확인을 입력해주세요.';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = '비밀번호가 일치하지 않습니다.';\n    }\n\n    if (!agreedToTerms) {\n      newErrors.terms = '서비스 이용약관에 동의해주세요.';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSignup = async () => {\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      await signUp({\n        name: formData.name,\n        email: formData.email.toLowerCase().trim(),\n        password: formData.password,\n        phone: formData.phone.replace(/-/g, ''),\n      });\n      // 성공 시 자동으로 메인 화면으로 이동\n    } catch (error) {\n      Alert.alert('회원가입 실패', authError || '회원가입 중 오류가 발생했습니다.', [\n        { text: '확인' },\n      ]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const formatPhoneNumber = (value: string) => {\n    const numbers = value.replace(/[^\\d]/g, '');\n    if (numbers.length <= 3) {\n      return numbers;\n    } else if (numbers.length <= 7) {\n      return `${numbers.slice(0, 3)}-${numbers.slice(3)}`;\n    } else if (numbers.length <= 11) {\n      return `${numbers.slice(0, 3)}-${numbers.slice(3, 7)}-${numbers.slice(7, 11)}`;\n    }\n    return formData.phone;\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={styles.keyboardView}\n      >\n        <ScrollView\n          contentContainerStyle={styles.scrollContent}\n          showsVerticalScrollIndicator={false}\n          keyboardShouldPersistTaps=\"handled\"\n        >\n          {/* 헤더 */}\n          <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n            <Icon name=\"arrow-left\" size={24} color=\"#1F2937\" />\n          </TouchableOpacity>\n\n          {/* 타이틀 */}\n          <View style={styles.titleSection}>\n            <Text style={styles.title}>회원가입</Text>\n            <Text style={styles.subtitle}>CarGoro와 함께 스마트한 차량 관리를 시작하세요</Text>\n          </View>\n\n          {/* 회원가입 폼 */}\n          <View style={styles.formSection}>\n            {/* 이름 입력 */}\n            <View style={styles.inputContainer}>\n              <Text style={styles.inputLabel}>이름</Text>\n              <View style={[styles.inputWrapper, errors.name ? styles.inputError : null]}>\n                <Icon name=\"user\" size={20} color=\"#6B7280\" style={styles.inputIcon} />\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"홍길동\"\n                  placeholderTextColor=\"#9CA3AF\"\n                  value={formData.name}\n                  onChangeText={text => setFormData({ ...formData, name: text })}\n                  editable={!isLoading}\n                />\n              </View>\n              {errors.name && <Text style={styles.errorText}>{errors.name}</Text>}\n            </View>\n\n            {/* 이메일 입력 */}\n            <View style={styles.inputContainer}>\n              <Text style={styles.inputLabel}>이메일</Text>\n              <View style={[styles.inputWrapper, errors.email ? styles.inputError : null]}>\n                <Icon name=\"mail\" size={20} color=\"#6B7280\" style={styles.inputIcon} />\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"example@email.com\"\n                  placeholderTextColor=\"#9CA3AF\"\n                  value={formData.email}\n                  onChangeText={text => setFormData({ ...formData, email: text })}\n                  keyboardType=\"email-address\"\n                  autoCapitalize=\"none\"\n                  autoCorrect={false}\n                  editable={!isLoading}\n                />\n              </View>\n              {errors.email && <Text style={styles.errorText}>{errors.email}</Text>}\n            </View>\n\n            {/* 전화번호 입력 */}\n            <View style={styles.inputContainer}>\n              <Text style={styles.inputLabel}>전화번호</Text>\n              <View style={[styles.inputWrapper, errors.phone ? styles.inputError : null]}>\n                <Icon name=\"phone\" size={20} color=\"#6B7280\" style={styles.inputIcon} />\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"010-1234-5678\"\n                  placeholderTextColor=\"#9CA3AF\"\n                  value={formData.phone}\n                  onChangeText={text =>\n                    setFormData({ ...formData, phone: formatPhoneNumber(text) })\n                  }\n                  keyboardType=\"phone-pad\"\n                  editable={!isLoading}\n                />\n              </View>\n              {errors.phone && <Text style={styles.errorText}>{errors.phone}</Text>}\n            </View>\n\n            {/* 비밀번호 입력 */}\n            <View style={styles.inputContainer}>\n              <Text style={styles.inputLabel}>비밀번호</Text>\n              <View style={[styles.inputWrapper, errors.password ? styles.inputError : null]}>\n                <Icon name=\"lock\" size={20} color=\"#6B7280\" style={styles.inputIcon} />\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"8자 이상 입력\"\n                  placeholderTextColor=\"#9CA3AF\"\n                  value={formData.password}\n                  onChangeText={text => setFormData({ ...formData, password: text })}\n                  secureTextEntry={!showPassword}\n                  editable={!isLoading}\n                />\n                <TouchableOpacity\n                  onPress={() => setShowPassword(!showPassword)}\n                  style={styles.eyeButton}\n                >\n                  <Icon name={showPassword ? 'eye' : 'eye-off'} size={20} color=\"#6B7280\" />\n                </TouchableOpacity>\n              </View>\n              {errors.password && <Text style={styles.errorText}>{errors.password}</Text>}\n            </View>\n\n            {/* 비밀번호 확인 */}\n            <View style={styles.inputContainer}>\n              <Text style={styles.inputLabel}>비밀번호 확인</Text>\n              <View\n                style={[styles.inputWrapper, errors.confirmPassword ? styles.inputError : null]}\n              >\n                <Icon name=\"lock\" size={20} color=\"#6B7280\" style={styles.inputIcon} />\n                <TextInput\n                  style={styles.input}\n                  placeholder=\"비밀번호 재입력\"\n                  placeholderTextColor=\"#9CA3AF\"\n                  value={formData.confirmPassword}\n                  onChangeText={text => setFormData({ ...formData, confirmPassword: text })}\n                  secureTextEntry={!showConfirmPassword}\n                  editable={!isLoading}\n                />\n                <TouchableOpacity\n                  onPress={() => setShowConfirmPassword(!showConfirmPassword)}\n                  style={styles.eyeButton}\n                >\n                  <Icon name={showConfirmPassword ? 'eye' : 'eye-off'} size={20} color=\"#6B7280\" />\n                </TouchableOpacity>\n              </View>\n              {errors.confirmPassword && (\n                <Text style={styles.errorText}>{errors.confirmPassword}</Text>\n              )}\n            </View>\n\n            {/* 약관 동의 */}\n            <TouchableOpacity\n              style={styles.termsContainer}\n              onPress={() => setAgreedToTerms(!agreedToTerms)}\n              disabled={isLoading}\n            >\n              <View style={[styles.checkbox, agreedToTerms && styles.checkboxChecked]}>\n                {agreedToTerms && <Icon name=\"check\" size={16} color=\"#FFFFFF\" />}\n              </View>\n              <Text style={styles.termsText}>\n                <Text style={styles.termsLink} onPress={() => Alert.alert('서비스 이용약관')}>\n                  서비스 이용약관\n                </Text>\n                {' 및 '}\n                <Text style={styles.termsLink} onPress={() => Alert.alert('개인정보 처리방침')}>\n                  개인정보 처리방침\n                </Text>\n                에 동의합니다\n              </Text>\n            </TouchableOpacity>\n            {errors.terms && <Text style={styles.errorText}>{errors.terms}</Text>}\n\n            {/* 회원가입 버튼 */}\n            <TouchableOpacity\n              style={[styles.signupButton, isLoading && styles.disabledButton]}\n              onPress={handleSignup}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\n              ) : (\n                <Text style={styles.signupButtonText}>회원가입</Text>\n              )}\n            </TouchableOpacity>\n\n            {/* 로그인 링크 */}\n            <View style={styles.loginContainer}>\n              <Text style={styles.loginText}>이미 계정이 있으신가요?</Text>\n              <TouchableOpacity onPress={() => navigation.navigate('Login')} disabled={isLoading}>\n                <Text style={styles.loginLink}>로그인</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  keyboardView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n    paddingHorizontal: 24,\n    paddingBottom: 40,\n  },\n  backButton: {\n    marginTop: 16,\n    marginBottom: 24,\n  },\n  titleSection: {\n    marginBottom: 32,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: '700',\n    color: '#1F2937',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#6B7280',\n    lineHeight: 24,\n  },\n  formSection: {\n    flex: 1,\n  },\n  inputContainer: {\n    marginBottom: 20,\n  },\n  inputLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#374151',\n    marginBottom: 8,\n  },\n  inputWrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#E5E7EB',\n    paddingHorizontal: 16,\n    height: 56,\n  },\n  inputError: {\n    borderColor: '#EF4444',\n  },\n  inputIcon: {\n    marginRight: 12,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    color: '#1F2937',\n  },\n  eyeButton: {\n    padding: 4,\n  },\n  errorText: {\n    fontSize: 12,\n    color: '#EF4444',\n    marginTop: 4,\n    marginLeft: 4,\n  },\n  termsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 24,\n    paddingHorizontal: 4,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderRadius: 4,\n    borderWidth: 1.5,\n    borderColor: '#D1D5DB',\n    marginRight: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  checkboxChecked: {\n    backgroundColor: '#6366F1',\n    borderColor: '#6366F1',\n  },\n  termsText: {\n    flex: 1,\n    fontSize: 14,\n    color: '#4B5563',\n    lineHeight: 20,\n  },\n  termsLink: {\n    color: '#6366F1',\n    textDecorationLine: 'underline',\n  },\n  signupButton: {\n    backgroundColor: '#6366F1',\n    borderRadius: 12,\n    paddingVertical: 16,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  signupButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#FFFFFF',\n  },\n  disabledButton: {\n    opacity: 0.6,\n  },\n  loginContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loginText: {\n    fontSize: 14,\n    color: '#6B7280',\n  },\n  loginLink: {\n    fontSize: 14,\n    color: '#6366F1',\n    fontWeight: '600',\n    marginLeft: 4,\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function VehiclesScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>차량 목록 화면</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  text: {\n    fontSize: 18,\n    color: '#1F2937',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function ProfileScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>프로필 화면</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  text: {\n    fontSize: 18,\n    color: '#1F2937',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function VehicleDetailScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>차량 상세 화면</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  text: {\n    fontSize: 18,\n    color: '#1F2937',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function AddVehicleScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>차량 등록 화면</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  text: {\n    fontSize: 18,\n    color: '#1F2937',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function WorkshopListScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>정비소 목록 화면</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  text: {\n    fontSize: 18,\n    color: '#1F2937',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function BookingDetailScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>예약 상세 화면</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  text: {\n    fontSize: 18,\n    color: '#1F2937',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function ServiceHistoryScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>서비스 이력 화면</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  text: {\n    fontSize: 18,\n    color: '#1F2937',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function NotificationsScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>알림 화면</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  text: {\n    fontSize: 18,\n    color: '#1F2937',\n  },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport default function LiveTrackingScreen() {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>실시간 추적 화면</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  text: {\n    fontSize: 18,\n    color: '#1F2937',\n  },\n});\n","/**\n * 개발 환경에서 모의 데이터를 사용할지 여부를 결정하는 설정\n */\n\n// 모의 데이터 사용 여부 설정\nexport const USE_MOCK_DATA = true;\n\n// 백엔드 서버 URL 설정\nexport const API_BASE_URL = (process.env as { EXPO_PUBLIC_API_URL?: string }).EXPO_PUBLIC_API_URL || 'http://localhost:3000/api';\n\n// 네트워크 요청 시간 초과 설정 (밀리초)\nexport const API_TIMEOUT = 5000;\n\n// 모의 데이터 지연 시간 설정 (ms) - 실제 네트워크 요청처럼 느끼게 하기 위함\nexport const MOCK_DATA_DELAY = 300;\n\n/**\n * 모의 데이터로 응답을 만드는 유틸리티 함수\n * @param data 반환할 모의 데이터\n * @returns 지정된 지연 후 모의 데이터를 반환하는 Promise\n */\nexport function mockResponse<T>(data: T): Promise<T> {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(data);\n    }, MOCK_DATA_DELAY);\n  });\n}\n","import {\n  NavigationLocation,\n  NavigationRoute,\n  VehicleDiagnosticData,\n} from '../types/integrated-navigation';\nimport { USE_MOCK_DATA, API_BASE_URL, mockResponse } from '../config/app-config';\n\nclass IntegratedNavigationService {\n  private readonly API_BASE_URL = API_BASE_URL;\n\n  // 현재 위치 가져오기\n  async getCurrentLocation(): Promise<{ latitude: number; longitude: number }> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          resolve({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude,\n          });\n        },\n        error => {\n          reject(error);\n        },\n        {\n          enableHighAccuracy: true,\n          timeout: 10000,\n          maximumAge: 60000,\n        }\n      );\n    });\n  }\n\n  // 장소 검색\n  async searchLocations(\n    query: string,\n    currentLocation?: { latitude: number; longitude: number }\n  ): Promise<NavigationLocation[]> {\n    // 모의 데이터 사용 설정이 켜져 있으면 항상 모의 데이터 반환\n    if (USE_MOCK_DATA) {\n      return mockResponse(this.getMockSearchResults(query));\n    }\n\n    try {\n      const response = await fetch(`${this.API_BASE_URL}/navigation/search`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          query,\n          currentLocation,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('장소 검색에 실패했습니다.');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('장소 검색 오류:', error);\n      // 임시 더미 데이터 반환\n      return this.getMockSearchResults(query);\n    }\n  }\n\n  // 주변 정비소 검색\n  async searchNearbyWorkshops(\n    location: { latitude: number; longitude: number },\n    radius: number = 5000,\n    serviceType?: string\n  ): Promise<NavigationLocation[]> {\n    // 모의 데이터 사용 설정이 켜져 있으면 항상 모의 데이터 반환\n    if (USE_MOCK_DATA) {\n      return mockResponse(this.getMockWorkshops(location));\n    }\n\n    try {\n      const response = await fetch(`${this.API_BASE_URL}/navigation/workshops/nearby`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          location,\n          radius,\n          serviceType,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('주변 정비소 검색에 실패했습니다.');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('주변 정비소 검색 오류:', error);\n      return this.getMockWorkshops(location);\n    }\n  }\n\n  // 경로 계산\n  async calculateRoute(\n    origin: NavigationLocation,\n    destination: NavigationLocation\n  ): Promise<NavigationRoute> {\n    // 모의 데이터 사용 설정이 켜져 있으면 항상 모의 데이터 반환\n    if (USE_MOCK_DATA) {\n      return mockResponse(this.getMockRoute(origin, destination));\n    }\n\n    try {\n      const response = await fetch(`${this.API_BASE_URL}/navigation/route`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          origin,\n          destination,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('경로 계산에 실패했습니다.');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('경로 계산 오류:', error);\n      return this.getMockRoute(origin, destination);\n    }\n  }\n\n  // 차량 진단 데이터 가져오기\n  async getVehicleDiagnostics(vehicleId: string): Promise<VehicleDiagnosticData> {\n    // 모의 데이터 사용 설정이 켜져 있으면 항상 모의 데이터 반환\n    if (USE_MOCK_DATA) {\n      return mockResponse(this.getMockDiagnosticData(vehicleId));\n    }\n\n    try {\n      const response = await fetch(`${this.API_BASE_URL}/vehicles/${vehicleId}/diagnostics`);\n\n      if (!response.ok) {\n        throw new Error('차량 진단 데이터를 가져오는데 실패했습니다.');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('차량 진단 데이터 오류:', error);\n      return this.getMockDiagnosticData(vehicleId);\n    }\n  }\n\n  // 즐겨찾기 위치 가져오기\n  async getFavoriteLocations(): Promise<NavigationLocation[]> {\n    // 모의 데이터 사용 설정이 켜져 있으면 항상 모의 데이터 반환\n    if (USE_MOCK_DATA) {\n      return mockResponse(this.getMockFavoriteLocations());\n    }\n\n    try {\n      const response = await fetch(`${this.API_BASE_URL}/user/favorites`);\n\n      if (!response.ok) {\n        throw new Error('즐겨찾기를 가져오는데 실패했습니다.');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('즐겨찾기 가져오기 오류:', error);\n      // 오류 발생 시 모의 데이터 반환\n      return this.getMockFavoriteLocations();\n    }\n  }\n\n  // 모의 즐겨찾기 데이터\n  private getMockFavoriteLocations(): NavigationLocation[] {\n    return [\n      {\n        id: 'fav1',\n        name: '집',\n        address: '서울시 강남구 테헤란로 123',\n        latitude: 37.5026,\n        longitude: 127.0246,\n        category: 'general',\n      },\n      {\n        id: 'fav2',\n        name: '회사',\n        address: '서울시 강남구 역삼로 456',\n        latitude: 37.4969,\n        longitude: 127.0378,\n        category: 'general',\n      },\n      {\n        id: 'fav3',\n        name: '단골 정비소',\n        address: '서울시 서초구 반포대로 789',\n        latitude: 37.5043,\n        longitude: 127.0144,\n        category: 'workshop',\n        rating: 4.8,\n        phoneNumber: '02-1234-5678',\n      },\n    ];\n  }\n\n  // 즐겨찾기 추가\n  async addFavoriteLocation(location: NavigationLocation): Promise<void> {\n    // 모의 데이터 사용 설정이 켜져 있으면 실제 API 호출 없이 성공으로 처리\n    if (USE_MOCK_DATA) {\n      return mockResponse(undefined);\n    }\n\n    try {\n      const response = await fetch(`${this.API_BASE_URL}/user/favorites`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(location),\n      });\n\n      if (!response.ok) {\n        throw new Error('즐겨찾기 추가에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('즐겨찾기 추가 오류:', error);\n      throw error;\n    }\n  }\n\n  // Mock 데이터 메서드들\n  private getMockSearchResults(query: string): NavigationLocation[] {\n    return [\n      {\n        id: '1',\n        name: `${query} 관련 장소 1`,\n        address: '서울시 강남구 테헤란로 123',\n        latitude: 37.5665,\n        longitude: 126.978,\n        category: 'general',\n        rating: 4.5,\n      },\n      {\n        id: '2',\n        name: `${query} 관련 장소 2`,\n        address: '서울시 강남구 역삼로 456',\n        latitude: 37.5575,\n        longitude: 127.0334,\n        category: 'general',\n        rating: 4.2,\n      },\n    ];\n  }\n\n  private getMockWorkshops(location: {\n    latitude: number;\n    longitude: number;\n  }): NavigationLocation[] {\n    return [\n      {\n        id: 'ws1',\n        name: '스마트카 정비소',\n        address: '서울시 강남구 논현로 789',\n        latitude: location.latitude + 0.01,\n        longitude: location.longitude + 0.01,\n        category: 'workshop',\n        rating: 4.8,\n        distance: 1200,\n        isOpen: true,\n        phoneNumber: '02-1234-5678',\n      },\n      {\n        id: 'ws2',\n        name: '24시간 자동차 병원',\n        address: '서울시 강남구 강남대로 321',\n        latitude: location.latitude - 0.008,\n        longitude: location.longitude + 0.015,\n        category: 'workshop',\n        rating: 4.6,\n        distance: 1800,\n        isOpen: true,\n        phoneNumber: '02-2345-6789',\n      },\n    ];\n  }\n\n  private getMockRoute(\n    origin: NavigationLocation,\n    destination: NavigationLocation\n  ): NavigationRoute {\n    const distance =\n      Math.sqrt(\n        Math.pow(destination.latitude - origin.latitude, 2) +\n          Math.pow(destination.longitude - origin.longitude, 2)\n      ) * 111000; // 대략적인 미터 계산\n\n    return {\n      id: 'route1',\n      origin,\n      destination,\n      distance: Math.round(distance),\n      duration: Math.round(distance / 30), // 대략 30m/s 속도로 계산\n      polyline: 'mock_polyline_data',\n      trafficStatus: 'normal',\n    };\n  }\n\n  private getMockDiagnosticData(vehicleId: string): VehicleDiagnosticData {\n    return {\n      vehicleId,\n      timestamp: new Date(),\n      engineStatus: 'good',\n      batteryLevel: 85,\n      fuelLevel: 65,\n      mileage: 12500, // 누락된 필드 추가\n      oilPressure: 45,\n      coolantTemperature: 90,\n      tirePressure: {\n        frontLeft: 32,\n        frontRight: 31,\n        rearLeft: 30,\n        rearRight: 32,\n      },\n      diagnosticCodes: [],\n      maintenanceRecommendations: [\n        {\n          id: 'rec1',\n          type: 'oil_change',\n          severity: 'medium',\n          description: '다음 정기점검 시 엔진오일 교체를 권장합니다.',\n          estimatedCost: 80000,\n          mileageLimit: 10000,\n        },\n      ],\n    };\n  }\n}\n\nexport default new IntegratedNavigationService();\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  FlatList,\n  ActivityIndicator,\n  Alert,\n  SafeAreaView,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport {\n  IntegratedRootStackParamList,\n  NavigationLocation,\n  NavigationRoute,\n} from '../../types/integrated-navigation';\nimport integratedNavigationService from '../../services/integrated-navigation-service';\n\ntype NavigationScreenProps = StackNavigationProp<IntegratedRootStackParamList, 'Navigation'>;\n\nexport default function IntegratedNavigationScreen() {\n  const navigation = useNavigation<NavigationScreenProps>();\n\n  // 상태 관리\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isSearching, setIsSearching] = useState(false);\n  const [searchResults, setSearchResults] = useState<NavigationLocation[]>([]);\n  const [currentLocation, setCurrentLocation] = useState<{\n    latitude: number;\n    longitude: number;\n  } | null>(null);\n  const [favoriteLocations, setFavoriteLocations] = useState<NavigationLocation[]>([]);\n  const [nearbyWorkshops, setNearbyWorkshops] = useState<NavigationLocation[]>([]);\n  const [selectedDestination, setSelectedDestination] = useState<NavigationLocation | null>(null);\n  const [activeTab, setActiveTab] = useState<'search' | 'favorites' | 'workshops'>('search');\n\n  // 현재 위치 가져오기\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const location = await integratedNavigationService.getCurrentLocation();\n      setCurrentLocation(location);\n\n      // 주변 정비소 검색\n      const workshops = await integratedNavigationService.searchNearbyWorkshops(location);\n      setNearbyWorkshops(workshops);\n    } catch (error) {\n      console.error('현재 위치 가져오기 실패:', error);\n      Alert.alert('위치 오류', '현재 위치를 가져올 수 없습니다. 위치 권한을 확인해주세요.');\n    }\n  }, []);\n\n  // 즐겨찾기 로드\n  const loadFavorites = useCallback(async () => {\n    try {\n      const favorites = await integratedNavigationService.getFavoriteLocations();\n      setFavoriteLocations(favorites);\n    } catch (error) {\n      console.error('즐겨찾기 로드 실패:', error);\n    }\n  }, []);\n\n  // 컴포넌트 마운트 시 실행\n  useEffect(() => {\n    getCurrentLocation();\n    loadFavorites();\n  }, [getCurrentLocation, loadFavorites]);\n\n  // 검색 실행\n  const handleSearch = async () => {\n    if (!searchQuery.trim()) return;\n\n    setIsSearching(true);\n    try {\n      const results = await integratedNavigationService.searchLocations(\n        searchQuery,\n        currentLocation || undefined\n      );\n      setSearchResults(results);\n      setActiveTab('search');\n    } catch (error) {\n      console.error('검색 실패:', error);\n      Alert.alert('검색 오류', '검색 중 오류가 발생했습니다.');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  // 장소 선택 처리\n  const handleSelectLocation = async (location: NavigationLocation) => {\n    setSelectedDestination(location);\n\n    if (currentLocation) {\n      // 지도 화면으로 이동하여 경로 표시\n      navigation.navigate('MapDetail', {\n        destination: {\n          latitude: location.latitude,\n          longitude: location.longitude,\n          name: location.name,\n        },\n      });\n    } else {\n      Alert.alert('위치 오류', '현재 위치를 찾을 수 없습니다.');\n    }\n  };\n\n  // 즐겨찾기 추가\n  const handleAddToFavorites = async (location: NavigationLocation) => {\n    try {\n      await integratedNavigationService.addFavoriteLocation(location);\n      await loadFavorites();\n      Alert.alert('추가 완료', '즐겨찾기에 추가되었습니다.');\n    } catch (error) {\n      console.error('즐겨찾기 추가 실패:', error);\n      Alert.alert('오류', '즐겨찾기 추가에 실패했습니다.');\n    }\n  };\n\n  // 정비소로 전화하기\n  const handleCallWorkshop = (phoneNumber: string) => {\n    Alert.alert('전화 걸기', `${phoneNumber}로 전화를 걸겠습니까?`, [\n      { text: '취소', style: 'cancel' },\n      { text: '전화걸기', onPress: () => console.log('전화걸기:', phoneNumber) },\n    ]);\n  };\n\n  // 긴급 서비스 버튼 처리\n  const handleEmergencyService = () => {\n    navigation.navigate('EmergencyService');\n  };\n\n  // 서비스 허브로 이동\n  const handleGoToServiceHub = () => {\n    navigation.navigate('ServiceHub');\n  };\n\n  // 위치 항목 렌더링\n  const renderLocationItem = ({ item }: { item: NavigationLocation }) => (\n    <TouchableOpacity style={styles.locationItem} onPress={() => handleSelectLocation(item)}>\n      <View style={styles.locationInfo}>\n        <View style={styles.locationHeader}>\n          <Ionicons\n            name={item.category === 'workshop' ? 'build-outline' : 'location-outline'}\n            size={20}\n            color=\"#6366F1\"\n          />\n          <Text style={styles.locationName}>{item.name}</Text>\n          {item.rating && (\n            <View style={styles.ratingContainer}>\n              <Ionicons name=\"star\" size={14} color=\"#F59E0B\" />\n              <Text style={styles.rating}>{item.rating}</Text>\n            </View>\n          )}\n        </View>\n        <Text style={styles.locationAddress}>{item.address}</Text>\n        {item.distance && <Text style={styles.distance}>{Math.round(item.distance)}m</Text>}\n        {item.category === 'workshop' && (\n          <View style={styles.workshopActions}>\n            <TouchableOpacity\n              style={styles.actionButton}\n              onPress={() => item.phoneNumber && handleCallWorkshop(item.phoneNumber)}\n            >\n              <Ionicons name=\"call-outline\" size={16} color=\"#10B981\" />\n              <Text style={styles.actionText}>전화</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.actionButton}\n              onPress={() => handleAddToFavorites(item)}\n            >\n              <Ionicons name=\"heart-outline\" size={16} color=\"#EF4444\" />\n              <Text style={styles.actionText}>즐겨찾기</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n\n  // 빈 목록 컴포넌트\n  const renderEmptyList = () => (\n    <View style={styles.emptyContainer}>\n      <Ionicons name=\"search-outline\" size={48} color=\"#9CA3AF\" />\n      <Text style={styles.emptyText}>\n        {activeTab === 'search'\n          ? '검색 결과가 없습니다'\n          : activeTab === 'favorites'\n            ? '즐겨찾기가 없습니다'\n            : '주변 정비소가 없습니다'}\n      </Text>\n    </View>\n  );\n\n  // 현재 탭의 데이터 가져오기\n  const getCurrentData = () => {\n    switch (activeTab) {\n      case 'search':\n        return searchResults;\n      case 'favorites':\n        return favoriteLocations;\n      case 'workshops':\n        return nearbyWorkshops;\n      default:\n        return [];\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* 헤더 */}\n      <View style={styles.header}>\n        <Text style={styles.title}>스마트 네비게이션</Text>\n        <TouchableOpacity onPress={handleEmergencyService} style={styles.emergencyButton}>\n          <Ionicons name=\"warning\" size={20} color=\"#FFFFFF\" />\n          <Text style={styles.emergencyText}>긴급</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* 검색 바 */}\n      <View style={styles.searchContainer}>\n        <View style={styles.searchInputContainer}>\n          <Ionicons name=\"search-outline\" size={20} color=\"#9CA3AF\" />\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"목적지를 검색해보세요\"\n            value={searchQuery}\n            onChangeText={setSearchQuery}\n            onSubmitEditing={handleSearch}\n            returnKeyType=\"search\"\n          />\n          {isSearching && <ActivityIndicator size=\"small\" color=\"#6366F1\" />}\n        </View>\n        <TouchableOpacity onPress={handleSearch} style={styles.searchButton}>\n          <Text style={styles.searchButtonText}>검색</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* 퀵 액션 버튼들 */}\n      <View style={styles.quickActions}>\n        <TouchableOpacity onPress={getCurrentLocation} style={styles.quickActionButton}>\n          <Ionicons name=\"location\" size={24} color=\"#6366F1\" />\n          <Text style={styles.quickActionText}>현재위치</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={handleGoToServiceHub} style={styles.quickActionButton}>\n          <Ionicons name=\"construct\" size={24} color=\"#6366F1\" />\n          <Text style={styles.quickActionText}>서비스</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => setActiveTab('workshops')}\n          style={styles.quickActionButton}\n        >\n          <Ionicons name=\"car-sport\" size={24} color=\"#6366F1\" />\n          <Text style={styles.quickActionText}>정비소</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* 탭 네비게이션 */}\n      <View style={styles.tabContainer}>\n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'search' && styles.activeTab]}\n          onPress={() => setActiveTab('search')}\n        >\n          <Text style={[styles.tabText, activeTab === 'search' && styles.activeTabText]}>\n            검색결과\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'favorites' && styles.activeTab]}\n          onPress={() => setActiveTab('favorites')}\n        >\n          <Text style={[styles.tabText, activeTab === 'favorites' && styles.activeTabText]}>\n            즐겨찾기\n          </Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.tab, activeTab === 'workshops' && styles.activeTab]}\n          onPress={() => setActiveTab('workshops')}\n        >\n          <Text style={[styles.tabText, activeTab === 'workshops' && styles.activeTabText]}>\n            주변정비소\n          </Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* 결과 목록 */}\n      <FlatList\n        data={getCurrentData()}\n        renderItem={renderLocationItem}\n        keyExtractor={item => item.id}\n        style={styles.resultsList}\n        showsVerticalScrollIndicator={false}\n        ListEmptyComponent={renderEmptyList}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#E5E7EB',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1F2937',\n  },\n  emergencyButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#EF4444',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  emergencyText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: '600',\n    marginLeft: 4,\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    gap: 12,\n  },\n  searchInputContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F3F4F6',\n    borderRadius: 12,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n  },\n  searchInput: {\n    flex: 1,\n    marginLeft: 8,\n    fontSize: 16,\n    color: '#1F2937',\n  },\n  searchButton: {\n    backgroundColor: '#6366F1',\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderRadius: 12,\n    justifyContent: 'center',\n  },\n  searchButtonText: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  quickActions: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#E5E7EB',\n  },\n  quickActionButton: {\n    alignItems: 'center',\n  },\n  quickActionText: {\n    fontSize: 12,\n    color: '#6366F1',\n    marginTop: 4,\n    fontWeight: '500',\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    backgroundColor: '#F9FAFB',\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n  },\n  activeTab: {\n    borderBottomWidth: 2,\n    borderBottomColor: '#6366F1',\n    backgroundColor: '#FFFFFF',\n  },\n  tabText: {\n    fontSize: 14,\n    color: '#6B7280',\n    fontWeight: '500',\n  },\n  activeTabText: {\n    color: '#6366F1',\n    fontWeight: '600',\n  },\n  resultsList: {\n    flex: 1,\n  },\n  locationItem: {\n    backgroundColor: '#FFFFFF',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#F3F4F6',\n  },\n  locationInfo: {\n    flex: 1,\n  },\n  locationHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  locationName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginLeft: 8,\n    flex: 1,\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  rating: {\n    fontSize: 12,\n    color: '#F59E0B',\n    marginLeft: 2,\n    fontWeight: '500',\n  },\n  locationAddress: {\n    fontSize: 14,\n    color: '#6B7280',\n    marginLeft: 28,\n    marginBottom: 4,\n  },\n  distance: {\n    fontSize: 12,\n    color: '#10B981',\n    marginLeft: 28,\n    fontWeight: '500',\n  },\n  workshopActions: {\n    flexDirection: 'row',\n    marginTop: 8,\n    marginLeft: 28,\n    gap: 16,\n  },\n  actionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  actionText: {\n    fontSize: 12,\n    marginLeft: 4,\n    fontWeight: '500',\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingVertical: 60,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#9CA3AF',\n    marginTop: 16,\n  },\n});\n","/**\n * OBD 연결 및 차량 데이터 관련 유틸리티 함수들\n * smart-car-assistant에서 이식된 기능\n */\nimport * as obdLib from '@cargoro/gps-obd-lib';\n\n/**\n * 진단 데이터 타입 정의\n */\ninterface DiagnosticData {\n  rpm: number;\n  speed: number;\n  engineTemp: number;\n  fuelLevel: number;\n  diagnosticTroubleCodes: string[];\n  batteryVoltage?: number;\n  tirePressure?: {\n    frontLeft: number;\n    frontRight: number;\n    rearLeft: number;\n    rearRight: number;\n  };\n}\n\n/**\n * 실시간 차량 상태 타입\n */\ninterface VehicleStatus {\n  isEngineRunning: boolean;\n  isMoving: boolean;\n  isFuelLow: boolean;\n  hasDiagnosticCodes: boolean;\n  batteryHealth: 'good' | 'warning' | 'critical';\n}\n\n/**\n * OBD 모듈에 연결\n * @returns {Promise<boolean>} 연결 성공 여부\n */\nexport async function connectToOBD(): Promise<boolean> {\n  try {\n    await obdLib.initializeOBDConnection('OBD-II'); // 기본 장치 이름 제공\n    return true;\n  } catch (error) {\n    console.error('OBD 연결 실패:', error);\n    throw error;\n  }\n}\n\n/**\n * OBD 모듈에서 진단 데이터 가져오기\n * @returns {Promise<DiagnosticData>} 진단 데이터 객체\n */\nexport async function getDiagnosticData(): Promise<DiagnosticData> {\n  try {\n    // 모의 데이터 반환 (타입 문제 해결을 위해)\n    return {\n      rpm: 1200,\n      speed: 0,\n      engineTemp: 85,\n      fuelLevel: 75,\n      diagnosticTroubleCodes: [],\n      batteryVoltage: 12.8,\n      tirePressure: {\n        frontLeft: 32,\n        frontRight: 32,\n        rearLeft: 30,\n        rearRight: 30,\n      },\n    };\n  } catch (error) {\n    console.error('진단 데이터 조회 실패:', error);\n    throw error;\n  }\n}\n\n/**\n * 차량 상태 분석\n * @returns {Promise<VehicleStatus>} 차량 상태 정보\n */\nexport async function getVehicleStatus(): Promise<VehicleStatus> {\n  try {\n    const data = await getDiagnosticData();\n\n    // 배터리 상태 결정\n    let batteryHealth: 'good' | 'warning' | 'critical' = 'good';\n    if (data.batteryVoltage) {\n      if (data.batteryVoltage < 11.8) {\n        batteryHealth = 'critical';\n      } else if (data.batteryVoltage < 12.4) {\n        batteryHealth = 'warning';\n      }\n    }\n\n    return {\n      isEngineRunning: data.rpm > 0,\n      isMoving: data.speed > 0,\n      isFuelLow: data.fuelLevel < 20, // 20% 미만이면 연료 부족으로 간주\n      hasDiagnosticCodes: data.diagnosticTroubleCodes.length > 0,\n      batteryHealth,\n    };\n  } catch (error) {\n    console.error('차량 상태 분석 실패:', error);\n    throw error;\n  }\n}\n\n/**\n * OBD 모듈과의 연결 해제\n */\nexport async function disconnectFromOBD(): Promise<boolean> {\n  try {\n    // OBDConnector 인스턴스를 사용하여 연결 해제\n    const connector = new obdLib.OBDConnector();\n    await connector.disconnect();\n    return true;\n  } catch (error) {\n    console.error('OBD 연결 해제 실패:', error);\n    return false;\n  }\n}\n\n/**\n * 현재 위치 가져오기 (GPS)\n */\nexport async function getCurrentLocation() {\n  try {\n    return await obdLib.getCurrentLocation();\n  } catch (error) {\n    console.error('위치 정보 조회 실패:', error);\n    throw error;\n  }\n}\n\n/**\n * 실시간 차량 데이터 스트리밍 시작\n * @param callback 데이터 업데이트 콜백\n */\nexport function startVehicleDataStream(callback: (data: DiagnosticData) => void) {\n  const interval = setInterval(async () => {\n    try {\n      const data = await getDiagnosticData();\n      callback(data);\n    } catch (error) {\n      console.error('실시간 데이터 스트리밍 오류:', error);\n    }\n  }, 5000); // 5초마다 업데이트\n\n  return () => clearInterval(interval);\n}\n\n/**\n * 예측 정비 분석\n * @param diagnosticData 진단 데이터\n * @returns 정비 권장사항\n */\nexport function analyzeMaintenanceNeeds(diagnosticData: DiagnosticData): {\n  urgent: string[];\n  recommended: string[];\n  scheduled: string[];\n} {\n  const urgent: string[] = [];\n  const recommended: string[] = [];\n  const scheduled: string[] = [];\n\n  // 긴급 정비 필요 항목\n  if (diagnosticData.engineTemp > 105) {\n    urgent.push('엔진 과열 - 즉시 정비 필요');\n  }\n  if (diagnosticData.fuelLevel < 10) {\n    urgent.push('연료 부족 - 주유 필요');\n  }\n  if (diagnosticData.diagnosticTroubleCodes.length > 0) {\n    urgent.push(`진단 코드 감지: ${diagnosticData.diagnosticTroubleCodes.join(', ')}`);\n  }\n\n  // 권장 정비 항목\n  if (diagnosticData.fuelLevel < 25) {\n    recommended.push('연료량 부족 - 주유 권장');\n  }\n  if (diagnosticData.engineTemp > 95) {\n    recommended.push('엔진 온도 높음 - 냉각수 점검 권장');\n  }\n\n  // 정기 점검 항목\n  scheduled.push('정기 점검 - 엔진오일 교환');\n  scheduled.push('정기 점검 - 타이어 로테이션');\n\n  return { urgent, recommended, scheduled };\n}\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  SafeAreaView,\n  Alert,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport { RootStackParamList } from '../../../App';\nimport { ServiceCategory, VehicleDiagnosticData } from '../../types/integrated-navigation';\nimport integratedNavigationService from '../../services/integrated-navigation-service';\nimport { getDiagnosticData, getVehicleStatus, connectToOBD } from '../../utils/obd-connector';\n\ntype ServiceHubScreenProps = StackNavigationProp<RootStackParamList>;\n\nexport default function ServiceHubScreen() {\n  const navigation = useNavigation<ServiceHubScreenProps>();\n\n  // 상태 관리\n  const [diagnosticData, setDiagnosticData] = useState<VehicleDiagnosticData | null>(null);\n\n  // 서비스 카테고리 정의\n  const serviceCategories: ServiceCategory[] = [\n    {\n      id: 'maintenance_booking',\n      name: '정비 예약',\n      icon: 'calendar-outline',\n      description: '정기점검 및 수리 예약',\n    },\n    {\n      id: 'workshop_search',\n      name: '정비소 찾기',\n      icon: 'location-outline',\n      description: '주변 정비소 검색',\n    },\n    {\n      id: 'emergency_service',\n      name: '긴급 서비스',\n      icon: 'warning-outline',\n      description: '24시간 긴급출동',\n      isEmergency: true,\n    },\n    {\n      id: 'smart_diagnosis',\n      name: '스마트 진단',\n      icon: 'analytics-outline',\n      description: 'AI 기반 차량 진단',\n    },\n    {\n      id: 'maintenance_history',\n      name: '정비 이력',\n      icon: 'document-text-outline',\n      description: '과거 정비 기록 조회',\n    },\n    {\n      id: 'parts_order',\n      name: '부품 주문',\n      icon: 'cube-outline',\n      description: '자동차 부품 온라인 주문',\n    },\n  ];\n\n  // 차량 진단 데이터 로드\n  useEffect(() => {\n    const loadDiagnosticData = async () => {\n      try {\n        // OBD 연결 시도\n        const connected = await connectToOBD();\n\n        if (connected) {\n          // OBD에서 실시간 데이터 가져오기\n          await getVehicleStatus();\n          const diagnostics = await getDiagnosticData();\n\n          // 진단 데이터를 VehicleDiagnosticData 형식으로 변환\n          const transformedData: VehicleDiagnosticData = {\n            vehicleId: 'vehicle_1',\n            timestamp: new Date(),\n            batteryLevel: diagnostics?.batteryVoltage\n              ? Math.round((diagnostics.batteryVoltage / 14.4) * 100)\n              : 85,\n            engineStatus: diagnostics?.engineTemp < 90 ? 'good' : 'warning',\n            fuelLevel: diagnostics?.fuelLevel || 65,\n            mileage: 45000,\n            oilPressure: 40, // OBD에서 직접 제공되지 않으므로 기본값 사용\n            coolantTemperature: diagnostics?.engineTemp || 85,\n            tirePressure: diagnostics?.tirePressure || {\n              frontLeft: 32,\n              frontRight: 32,\n              rearLeft: 30,\n              rearRight: 30,\n            },\n            diagnosticCodes: diagnostics?.diagnosticTroubleCodes || [],\n            maintenanceRecommendations: [],\n          };\n\n          setDiagnosticData(transformedData);\n        } else {\n          // OBD 연결 실패 시 기본 데이터 사용\n          const data = await integratedNavigationService.getVehicleDiagnostics('vehicle_1');\n          setDiagnosticData(data);\n        }\n      } catch (error) {\n        console.error('진단 데이터 로드 실패:', error);\n        // 에러 시 기본 데이터 사용\n        try {\n          const data = await integratedNavigationService.getVehicleDiagnostics('vehicle_1');\n          setDiagnosticData(data);\n        } catch (fallbackError) {\n          console.error('기본 데이터 로드도 실패:', fallbackError);\n        }\n      }\n    };\n\n    loadDiagnosticData();\n  }, []);\n\n  // 서비스 카테고리 선택 처리\n  const handleServiceSelection = (serviceId: string) => {\n    switch (serviceId) {\n      case 'maintenance_booking':\n        (navigation as any).navigate('MaintenanceBooking');\n        break;\n      case 'workshop_search':\n        (navigation as any).navigate('WorkshopSearch', {});\n        break;\n      case 'emergency_service':\n        (navigation as any).navigate('EmergencyService');\n        break;\n      case 'smart_diagnosis':\n        (navigation as any).navigate('SmartDiagnosis', { vehicleId: 'vehicle_1' });\n        break;\n      case 'maintenance_history':\n        (navigation as any).navigate('MaintenanceHistory');\n        break;\n      case 'parts_order':\n        Alert.alert('준비중', '부품 주문 기능은 준비 중입니다.');\n        break;\n      default:\n        Alert.alert('알림', '해당 서비스는 준비 중입니다.');\n    }\n  };\n\n  // 긴급 서비스 호출\n  const handleEmergencyCall = () => {\n    Alert.alert('긴급 출동 서비스', '24시간 긴급 출동 서비스를 호출하시겠습니까?', [\n      { text: '취소', style: 'cancel' },\n      {\n        text: '호출하기',\n        style: 'destructive',\n        onPress: () => (navigation as any).navigate('EmergencyService'),\n      },\n    ]);\n  };\n\n  // 차량 상태 텍스트 가져오기\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'good':\n        return '양호';\n      case 'warning':\n        return '주의';\n      case 'critical':\n        return '위험';\n      default:\n        return '알 수 없음';\n    }\n  };\n\n  // 차량 상태에 따른 경고 색상 결정\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'good':\n        return '#10B981';\n      case 'warning':\n        return '#F59E0B';\n      case 'critical':\n        return '#EF4444';\n      default:\n        return '#6B7280';\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {/* 헤더 */}\n        <View style={styles.header}>\n          <Text style={styles.title}>서비스 허브</Text>\n          <TouchableOpacity onPress={handleEmergencyCall} style={styles.emergencyButton}>\n            <Ionicons name=\"call\" size={20} color=\"#FFFFFF\" />\n            <Text style={styles.emergencyText}>긴급호출</Text>\n          </TouchableOpacity>\n        </View>\n\n        {/* 차량 상태 요약 */}\n        {diagnosticData && (\n          <View style={styles.vehicleStatusCard}>\n            <View style={styles.statusHeader}>\n              <Ionicons name=\"car-sport\" size={24} color=\"#6366F1\" />\n              <Text style={styles.statusTitle}>차량 상태</Text>\n              <View\n                style={[\n                  styles.statusIndicator,\n                  { backgroundColor: getStatusColor(diagnosticData.engineStatus) },\n                ]}\n              >\n                <Text style={styles.statusText}>{getStatusText(diagnosticData.engineStatus)}</Text>\n              </View>\n            </View>\n\n            <View style={styles.statusGrid}>\n              <View style={styles.statusItem}>\n                <Ionicons name=\"battery-half\" size={20} color=\"#6B7280\" />\n                <Text style={styles.statusLabel}>배터리</Text>\n                <Text style={styles.statusValue}>{diagnosticData.batteryLevel}%</Text>\n              </View>\n              <View style={styles.statusItem}>\n                <Ionicons name=\"speedometer\" size={20} color=\"#6B7280\" />\n                <Text style={styles.statusLabel}>연료</Text>\n                <Text style={styles.statusValue}>{diagnosticData.fuelLevel}%</Text>\n              </View>\n              <View style={styles.statusItem}>\n                <Ionicons name=\"thermometer\" size={20} color=\"#6B7280\" />\n                <Text style={styles.statusLabel}>냉각수</Text>\n                <Text style={styles.statusValue}>{diagnosticData.coolantTemperature}°C</Text>\n              </View>\n            </View>\n\n            {diagnosticData.maintenanceRecommendations.length > 0 && (\n              <View style={styles.recommendationBanner}>\n                <Ionicons name=\"information-circle\" size={20} color=\"#F59E0B\" />\n                <Text style={styles.recommendationText}>\n                  {diagnosticData.maintenanceRecommendations[0].description}\n                </Text>\n              </View>\n            )}\n          </View>\n        )}\n\n        {/* 서비스 메뉴 */}\n        <View style={styles.servicesContainer}>\n          <Text style={styles.sectionTitle}>정비 서비스</Text>\n          <View style={styles.servicesGrid}>\n            {serviceCategories.map(service => (\n              <TouchableOpacity\n                key={service.id}\n                style={[styles.serviceCard, service.isEmergency && styles.emergencyServiceCard]}\n                onPress={() => handleServiceSelection(service.id)}\n              >\n                <View\n                  style={[\n                    styles.serviceIconContainer,\n                    service.isEmergency && styles.emergencyIconContainer,\n                  ]}\n                >\n                  <Ionicons\n                    name={service.icon as any}\n                    size={28}\n                    color={service.isEmergency ? '#FFFFFF' : '#6366F1'}\n                  />\n                </View>\n                <Text\n                  style={[styles.serviceName, service.isEmergency && styles.emergencyServiceName]}\n                >\n                  {service.name}\n                </Text>\n                <Text\n                  style={[\n                    styles.serviceDescription,\n                    service.isEmergency && styles.emergencyServiceDescription,\n                  ]}\n                >\n                  {service.description}\n                </Text>\n                {service.isEmergency && (\n                  <View style={styles.emergencyBadge}>\n                    <Text style={styles.emergencyBadgeText}>24시간</Text>\n                  </View>\n                )}\n              </TouchableOpacity>\n            ))}\n          </View>\n        </View>\n\n        {/* 최근 서비스 이력 */}\n        <View style={styles.recentServicesContainer}>\n          <Text style={styles.sectionTitle}>최근 서비스</Text>\n          <TouchableOpacity\n            style={styles.historyCard}\n            onPress={() => (navigation as any).navigate('MaintenanceHistory')}\n          >\n            <View style={styles.historyHeader}>\n              <Ionicons name=\"construct\" size={20} color=\"#6366F1\" />\n              <Text style={styles.historyTitle}>정기점검</Text>\n              <Text style={styles.historyDate}>2024.01.15</Text>\n            </View>\n            <Text style={styles.historyDescription}>\n              엔진오일 교체, 에어필터 교체, 전체 점검 완료\n            </Text>\n            <View style={styles.historyFooter}>\n              <Text style={styles.historyWorkshop}>스마트카 정비소</Text>\n              <Text style={styles.historyCost}>₩150,000</Text>\n            </View>\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.viewAllButton}>\n            <Text style={styles.viewAllText}>전체 이력 보기</Text>\n            <Ionicons name=\"chevron-forward\" size={16} color=\"#6366F1\" />\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    backgroundColor: '#FFFFFF',\n    borderBottomWidth: 1,\n    borderBottomColor: '#E5E7EB',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1F2937',\n  },\n  emergencyButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#EF4444',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 20,\n  },\n  emergencyText: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: '600',\n    marginLeft: 6,\n  },\n  vehicleStatusCard: {\n    backgroundColor: '#FFFFFF',\n    margin: 20,\n    padding: 20,\n    borderRadius: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  statusHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  statusTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginLeft: 12,\n    flex: 1,\n  },\n  statusIndicator: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  statusText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  statusGrid: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  statusItem: {\n    alignItems: 'center',\n    flex: 1,\n  },\n  statusLabel: {\n    fontSize: 12,\n    color: '#6B7280',\n    marginTop: 4,\n  },\n  statusValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginTop: 2,\n  },\n  recommendationBanner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FEF3C7',\n    padding: 12,\n    borderRadius: 8,\n  },\n  recommendationText: {\n    fontSize: 14,\n    color: '#92400E',\n    marginLeft: 8,\n    flex: 1,\n  },\n  servicesContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginBottom: 16,\n  },\n  servicesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  serviceCard: {\n    backgroundColor: '#FFFFFF',\n    width: '48%',\n    padding: 20,\n    borderRadius: 16,\n    marginBottom: 16,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  emergencyServiceCard: {\n    backgroundColor: '#EF4444',\n    width: '100%',\n  },\n  serviceIconContainer: {\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    backgroundColor: '#EEF2FF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  emergencyIconContainer: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n  },\n  serviceName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1F2937',\n    textAlign: 'center',\n    marginBottom: 4,\n  },\n  emergencyServiceName: {\n    color: '#FFFFFF',\n  },\n  serviceDescription: {\n    fontSize: 12,\n    color: '#6B7280',\n    textAlign: 'center',\n  },\n  emergencyServiceDescription: {\n    color: 'rgba(255, 255, 255, 0.8)',\n  },\n  emergencyBadge: {\n    position: 'absolute',\n    top: 12,\n    right: 12,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    paddingHorizontal: 8,\n    paddingVertical: 2,\n    borderRadius: 8,\n  },\n  emergencyBadgeText: {\n    color: '#FFFFFF',\n    fontSize: 10,\n    fontWeight: '600',\n  },\n  recentServicesContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 24,\n  },\n  historyCard: {\n    backgroundColor: '#FFFFFF',\n    padding: 16,\n    borderRadius: 12,\n    marginBottom: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  historyHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  historyTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginLeft: 8,\n    flex: 1,\n  },\n  historyDate: {\n    fontSize: 12,\n    color: '#6B7280',\n  },\n  historyDescription: {\n    fontSize: 14,\n    color: '#6B7280',\n    marginBottom: 8,\n  },\n  historyFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  historyWorkshop: {\n    fontSize: 12,\n    color: '#6B7280',\n  },\n  historyCost: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#1F2937',\n  },\n  viewAllButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n  },\n  viewAllText: {\n    fontSize: 14,\n    color: '#6366F1',\n    fontWeight: '500',\n    marginRight: 4,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  SafeAreaView,\n  Alert,\n  Linking,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { EmergencyService } from '../../types/integrated-navigation';\nimport integratedNavigationService from '../../services/integrated-navigation-service';\n\nexport default function EmergencyServiceScreen() {\n  const navigation = useNavigation();\n\n  // 상태 관리\n  const [currentLocation, setCurrentLocation] = useState<{\n    latitude: number;\n    longitude: number;\n  } | null>(null);\n  const [selectedService, setSelectedService] = useState<string | null>(null);\n  const [isRequestingService, setIsRequestingService] = useState(false);\n\n  // 긴급 서비스 목록\n  const emergencyServices: EmergencyService[] = [\n    {\n      id: 'towing',\n      type: 'towing',\n      description: '차량 견인 서비스',\n      estimatedArrival: 25,\n      cost: 80000,\n      provider: {\n        name: '24시간 긴급견인',\n        phone: '1588-1234',\n        rating: 4.8,\n      },\n    },\n    {\n      id: 'battery_jump',\n      type: 'battery_jump',\n      description: '배터리 방전 점프 서비스',\n      estimatedArrival: 15,\n      cost: 30000,\n      provider: {\n        name: '스마트 배터리 서비스',\n        phone: '1588-2345',\n        rating: 4.7,\n      },\n    },\n    {\n      id: 'tire_change',\n      type: 'tire_change',\n      description: '타이어 교체/수리 서비스',\n      estimatedArrival: 20,\n      cost: 50000,\n      provider: {\n        name: '이동타이어 서비스',\n        phone: '1588-3456',\n        rating: 4.6,\n      },\n    },\n    {\n      id: 'lockout',\n      type: 'lockout',\n      description: '차량 열쇠 분실/잠김 해결',\n      estimatedArrival: 18,\n      cost: 60000,\n      provider: {\n        name: '24시간 열쇠 서비스',\n        phone: '1588-4567',\n        rating: 4.9,\n      },\n    },\n    {\n      id: 'fuel_delivery',\n      type: 'fuel_delivery',\n      description: '연료 부족 시 연료 배달',\n      estimatedArrival: 22,\n      cost: 25000,\n      provider: {\n        name: '이동주유 서비스',\n        phone: '1588-5678',\n        rating: 4.5,\n      },\n    },\n  ];\n\n  // 현재 위치 가져오기\n  useEffect(() => {\n    const getCurrentLocation = async () => {\n      try {\n        const location = await integratedNavigationService.getCurrentLocation();\n        setCurrentLocation(location);\n      } catch (error) {\n        console.error('현재 위치 가져오기 실패:', error);\n        Alert.alert('위치 오류', '현재 위치를 가져올 수 없습니다.');\n      }\n    };\n\n    getCurrentLocation();\n  }, []);\n\n  // 서비스 아이콘 가져오기\n  const getServiceIcon = (type: string) => {\n    switch (type) {\n      case 'towing':\n        return 'car-outline';\n      case 'battery_jump':\n        return 'flash-outline';\n      case 'tire_change':\n        return 'ellipse-outline';\n      case 'lockout':\n        return 'key-outline';\n      case 'fuel_delivery':\n        return 'water-outline';\n      default:\n        return 'build-outline';\n    }\n  };\n\n  // 서비스 요청 처리\n  const handleServiceRequest = async (service: EmergencyService) => {\n    if (!currentLocation) {\n      Alert.alert('위치 오류', '현재 위치를 확인할 수 없습니다.');\n      return;\n    }\n\n    Alert.alert(\n      '긴급 서비스 요청',\n      `${service.description}\\n\\n예상 소요시간: ${service.estimatedArrival}분\\n예상 비용: ₩${service.cost.toLocaleString()}\\n\\n서비스를 요청하시겠습니까?`,\n      [\n        { text: '취소', style: 'cancel' },\n        {\n          text: '요청하기',\n          style: 'destructive',\n          onPress: () => processServiceRequest(service),\n        },\n      ]\n    );\n  };\n\n  // 서비스 요청 처리\n  const processServiceRequest = async (service: EmergencyService) => {\n    setIsRequestingService(true);\n    setSelectedService(service.id);\n\n    try {\n      // 실제로는 서버에 요청을 보내야 함\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      Alert.alert(\n        '요청 완료',\n        `${service.description} 요청이 완료되었습니다.\\n\\n담당자: ${service.provider.name}\\n연락처: ${service.provider.phone}\\n예상 도착시간: ${service.estimatedArrival}분`,\n        [\n          { text: '확인' },\n          {\n            text: '전화걸기',\n            onPress: () => handleCall(service.provider.phone),\n          },\n        ]\n      );\n    } catch (error) {\n      Alert.alert('오류', '서비스 요청 중 오류가 발생했습니다.');\n    } finally {\n      setIsRequestingService(false);\n      setSelectedService(null);\n    }\n  };\n\n  // 전화 걸기\n  const handleCall = (phoneNumber: string) => {\n    const cleanPhoneNumber = phoneNumber.replace(/[^0-9]/g, '');\n    Linking.openURL(`tel:${cleanPhoneNumber}`);\n  };\n\n  // 긴급 신고 (112, 119)\n  const handleEmergencyCall = (number: string) => {\n    Alert.alert('긴급 신고', `${number}에 전화를 걸겠습니까?`, [\n      { text: '취소', style: 'cancel' },\n      {\n        text: '전화걸기',\n        style: 'destructive',\n        onPress: () => Linking.openURL(`tel:${number}`),\n      },\n    ]);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {/* 헤더 */}\n        <View style={styles.header}>\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Ionicons name=\"arrow-back\" size={24} color=\"#1F2937\" />\n          </TouchableOpacity>\n          <Text style={styles.title}>긴급 서비스</Text>\n          <View style={styles.placeholder} />\n        </View>\n\n        {/* 긴급 신고 버튼들 */}\n        <View style={styles.emergencyCallsContainer}>\n          <Text style={styles.sectionTitle}>긴급 신고</Text>\n          <View style={styles.emergencyCallsRow}>\n            <TouchableOpacity\n              style={[styles.emergencyCallButton, { backgroundColor: '#EF4444' }]}\n              onPress={() => handleEmergencyCall('112')}\n            >\n              <Ionicons name=\"shield\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.emergencyCallText}>112</Text>\n              <Text style={styles.emergencyCallSubText}>경찰서</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.emergencyCallButton, { backgroundColor: '#F59E0B' }]}\n              onPress={() => handleEmergencyCall('119')}\n            >\n              <Ionicons name=\"flame\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.emergencyCallText}>119</Text>\n              <Text style={styles.emergencyCallSubText}>소방서</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        {/* 위치 정보 */}\n        <View style={styles.locationContainer}>\n          <View style={styles.locationHeader}>\n            <Ionicons name=\"location\" size={20} color=\"#6366F1\" />\n            <Text style={styles.locationTitle}>현재 위치</Text>\n          </View>\n          {currentLocation ? (\n            <Text style={styles.locationText}>\n              위도: {currentLocation.latitude.toFixed(6)}, 경도:{' '}\n              {currentLocation.longitude.toFixed(6)}\n            </Text>\n          ) : (\n            <Text style={styles.locationError}>위치 정보를 가져오는 중...</Text>\n          )}\n        </View>\n\n        {/* 긴급 서비스 목록 */}\n        <View style={styles.servicesContainer}>\n          <Text style={styles.sectionTitle}>긴급 출동 서비스</Text>\n          {emergencyServices.map(service => (\n            <TouchableOpacity\n              key={service.id}\n              style={[\n                styles.serviceCard,\n                selectedService === service.id && styles.selectedServiceCard,\n              ]}\n              onPress={() => handleServiceRequest(service)}\n              disabled={isRequestingService}\n            >\n              <View style={styles.serviceHeader}>\n                <View style={styles.serviceIconContainer}>\n                  <Ionicons name={getServiceIcon(service.type) as any} size={24} color=\"#6366F1\" />\n                </View>\n                <View style={styles.serviceInfo}>\n                  <Text style={styles.serviceName}>{service.description}</Text>\n                  <Text style={styles.serviceProvider}>{service.provider.name}</Text>\n                </View>\n                <View style={styles.serviceActions}>\n                  <TouchableOpacity\n                    style={styles.callButton}\n                    onPress={() => handleCall(service.provider.phone)}\n                  >\n                    <Ionicons name=\"call\" size={16} color=\"#10B981\" />\n                  </TouchableOpacity>\n                </View>\n              </View>\n\n              <View style={styles.serviceDetails}>\n                <View style={styles.serviceDetailItem}>\n                  <Ionicons name=\"time-outline\" size={16} color=\"#6B7280\" />\n                  <Text style={styles.serviceDetailText}>약 {service.estimatedArrival}분</Text>\n                </View>\n                <View style={styles.serviceDetailItem}>\n                  <Ionicons name=\"card-outline\" size={16} color=\"#6B7280\" />\n                  <Text style={styles.serviceDetailText}>₩{service.cost.toLocaleString()}</Text>\n                </View>\n                <View style={styles.serviceDetailItem}>\n                  <Ionicons name=\"star\" size={16} color=\"#F59E0B\" />\n                  <Text style={styles.serviceDetailText}>{service.provider.rating}</Text>\n                </View>\n              </View>\n\n              {isRequestingService && selectedService === service.id && (\n                <View style={styles.loadingContainer}>\n                  <Text style={styles.loadingText}>요청 처리 중...</Text>\n                </View>\n              )}\n            </TouchableOpacity>\n          ))}\n        </View>\n\n        {/* 주의사항 */}\n        <View style={styles.noticeContainer}>\n          <View style={styles.noticeHeader}>\n            <Ionicons name=\"information-circle\" size={20} color=\"#F59E0B\" />\n            <Text style={styles.noticeTitle}>주의사항</Text>\n          </View>\n          <Text style={styles.noticeText}>\n            • 긴급 서비스는 24시간 운영됩니다{'\\n'}• 서비스 요청 후 취소 시 취소 수수료가 발생할 수\n            있습니다{'\\n'}• 실제 도착 시간과 비용은 상황에 따라 달라질 수 있습니다{'\\n'}• 생명이\n            위험한 응급상황에서는 즉시 119에 신고하세요\n          </Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    backgroundColor: '#FFFFFF',\n    borderBottomWidth: 1,\n    borderBottomColor: '#E5E7EB',\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#1F2937',\n  },\n  placeholder: {\n    width: 24,\n  },\n  emergencyCallsContainer: {\n    padding: 20,\n    backgroundColor: '#FFFFFF',\n    marginBottom: 8,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginBottom: 16,\n  },\n  emergencyCallsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  emergencyCallButton: {\n    alignItems: 'center',\n    padding: 20,\n    borderRadius: 16,\n    minWidth: 100,\n  },\n  emergencyCallText: {\n    color: '#FFFFFF',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 8,\n  },\n  emergencyCallSubText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    marginTop: 4,\n  },\n  locationContainer: {\n    backgroundColor: '#FFFFFF',\n    padding: 20,\n    marginBottom: 8,\n  },\n  locationHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  locationTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginLeft: 8,\n  },\n  locationText: {\n    fontSize: 14,\n    color: '#6B7280',\n    fontFamily: 'monospace',\n  },\n  locationError: {\n    fontSize: 14,\n    color: '#EF4444',\n  },\n  servicesContainer: {\n    padding: 20,\n    backgroundColor: '#FFFFFF',\n    marginBottom: 8,\n  },\n  serviceCard: {\n    backgroundColor: '#F9FAFB',\n    padding: 16,\n    borderRadius: 12,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: '#E5E7EB',\n  },\n  selectedServiceCard: {\n    borderColor: '#6366F1',\n    backgroundColor: '#EEF2FF',\n  },\n  serviceHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  serviceIconContainer: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 12,\n  },\n  serviceInfo: {\n    flex: 1,\n  },\n  serviceName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginBottom: 2,\n  },\n  serviceProvider: {\n    fontSize: 12,\n    color: '#6B7280',\n  },\n  serviceActions: {\n    flexDirection: 'row',\n  },\n  callButton: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: '#DCFCE7',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  serviceDetails: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  serviceDetailItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  serviceDetailText: {\n    fontSize: 12,\n    color: '#6B7280',\n    marginLeft: 4,\n  },\n  loadingContainer: {\n    marginTop: 12,\n    alignItems: 'center',\n  },\n  loadingText: {\n    fontSize: 14,\n    color: '#6366F1',\n    fontWeight: '500',\n  },\n  noticeContainer: {\n    backgroundColor: '#FFFFFF',\n    padding: 20,\n    marginBottom: 20,\n  },\n  noticeHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  noticeTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#F59E0B',\n    marginLeft: 8,\n  },\n  noticeText: {\n    fontSize: 14,\n    color: '#6B7280',\n    lineHeight: 20,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, SafeAreaView, Alert } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport {\n  IntegratedRootStackParamList,\n  NavigationLocation,\n  NavigationRoute,\n} from '../../types/integrated-navigation';\nimport integratedNavigationService from '../../services/integrated-navigation-service';\n\ntype MapDetailScreenProps = StackNavigationProp<IntegratedRootStackParamList, 'MapDetail'>;\ntype MapDetailRouteProps = RouteProp<IntegratedRootStackParamList, 'MapDetail'>;\n\nexport default function MapDetailScreen() {\n  const navigation = useNavigation<MapDetailScreenProps>();\n  const route = useRoute<MapDetailRouteProps>();\n\n  // 상태 관리\n  const [currentLocation, setCurrentLocation] = useState<{\n    latitude: number;\n    longitude: number;\n  } | null>(null);\n  const [calculatedRoute, setCalculatedRoute] = useState<NavigationRoute | null>(null);\n  const [isCalculatingRoute, setIsCalculatingRoute] = useState(false);\n  const [isNavigating, setIsNavigating] = useState(false);\n\n  const { destination } = route.params;\n\n  // 현재 위치 가져오기 및 경로 계산\n  useEffect(() => {\n    const initializeMap = async () => {\n      try {\n        // 현재 위치 가져오기\n        const location = await integratedNavigationService.getCurrentLocation();\n        setCurrentLocation(location);\n\n        // 목적지가 있으면 경로 계산\n        if (destination) {\n          setIsCalculatingRoute(true);\n\n          const origin: NavigationLocation = {\n            id: 'current',\n            name: '현재 위치',\n            address: '현재 위치',\n            latitude: location.latitude,\n            longitude: location.longitude,\n          };\n\n          const dest: NavigationLocation = {\n            id: 'destination',\n            name: destination.name,\n            address: destination.name,\n            latitude: destination.latitude,\n            longitude: destination.longitude,\n          };\n\n          const route = await integratedNavigationService.calculateRoute(origin, dest);\n          setCalculatedRoute(route);\n        }\n      } catch (error) {\n        console.error('지도 초기화 실패:', error);\n        Alert.alert('오류', '지도를 초기화하는 중 오류가 발생했습니다.');\n      } finally {\n        setIsCalculatingRoute(false);\n      }\n    };\n\n    initializeMap();\n  }, [destination]);\n\n  // 네비게이션 시작\n  const handleStartNavigation = () => {\n    if (!calculatedRoute) {\n      Alert.alert('오류', '경로 정보가 없습니다.');\n      return;\n    }\n\n    Alert.alert(\n      '네비게이션 시작',\n      `${destination?.name}까지 안내를 시작하시겠습니까?\\n\\n예상 거리: ${(calculatedRoute.distance / 1000).toFixed(1)}km\\n예상 시간: ${Math.round(calculatedRoute.duration / 60)}분`,\n      [\n        { text: '취소', style: 'cancel' },\n        {\n          text: '시작',\n          onPress: () => {\n            setIsNavigating(true);\n            // 실제 네비게이션 시작 로직\n            Alert.alert('네비게이션', '네비게이션이 시작되었습니다.');\n          },\n        },\n      ]\n    );\n  };\n\n  // 네비게이션 중지\n  const handleStopNavigation = () => {\n    Alert.alert('네비게이션 중지', '네비게이션을 중지하시겠습니까?', [\n      { text: '계속', style: 'cancel' },\n      {\n        text: '중지',\n        style: 'destructive',\n        onPress: () => setIsNavigating(false),\n      },\n    ]);\n  };\n\n  // 즐겨찾기 추가\n  const handleAddToFavorites = async () => {\n    if (!destination) return;\n\n    try {\n      const location: NavigationLocation = {\n        id: `fav_${Date.now()}`,\n        name: destination.name,\n        address: destination.name,\n        latitude: destination.latitude,\n        longitude: destination.longitude,\n      };\n\n      await integratedNavigationService.addFavoriteLocation(location);\n      Alert.alert('완료', '즐겨찾기에 추가되었습니다.');\n    } catch (error) {\n      Alert.alert('오류', '즐겨찾기 추가에 실패했습니다.');\n    }\n  };\n\n  // 교통상황에 따른 색상\n  const getTrafficColor = (status: string) => {\n    switch (status) {\n      case 'smooth':\n        return '#10B981';\n      case 'normal':\n        return '#F59E0B';\n      case 'congested':\n        return '#EF4444';\n      case 'blocked':\n        return '#7C3AED';\n      default:\n        return '#6B7280';\n    }\n  };\n\n  const getTrafficText = (status: string) => {\n    switch (status) {\n      case 'smooth':\n        return '원활';\n      case 'normal':\n        return '보통';\n      case 'congested':\n        return '정체';\n      case 'blocked':\n        return '차단';\n      default:\n        return '알 수 없음';\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* 헤더 */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <Ionicons name=\"arrow-back\" size={24} color=\"#1F2937\" />\n        </TouchableOpacity>\n        <Text style={styles.title}>지도</Text>\n        <TouchableOpacity onPress={handleAddToFavorites}>\n          <Ionicons name=\"heart-outline\" size={24} color=\"#EF4444\" />\n        </TouchableOpacity>\n      </View>\n\n      {/* 지도 영역 (실제 구현에서는 MapView 컴포넌트 사용) */}\n      <View style={styles.mapContainer}>\n        <View style={styles.mapPlaceholder}>\n          <Ionicons name=\"map\" size={80} color=\"#9CA3AF\" />\n          <Text style={styles.mapPlaceholderText}>지도 영역</Text>\n          {destination && (\n            <View style={styles.destinationInfo}>\n              <Ionicons name=\"location\" size={20} color=\"#EF4444\" />\n              <Text style={styles.destinationName}>{destination.name}</Text>\n            </View>\n          )}\n        </View>\n      </View>\n\n      {/* 경로 정보 */}\n      {isCalculatingRoute && (\n        <View style={styles.routeInfoContainer}>\n          <Text style={styles.calculatingText}>경로 계산 중...</Text>\n        </View>\n      )}\n\n      {calculatedRoute && !isCalculatingRoute && (\n        <View style={styles.routeInfoContainer}>\n          <View style={styles.routeHeader}>\n            <View style={styles.routeDetails}>\n              <Text style={styles.routeDistance}>\n                {(calculatedRoute.distance / 1000).toFixed(1)}km\n              </Text>\n              <Text style={styles.routeDuration}>\n                약 {Math.round(calculatedRoute.duration / 60)}분\n              </Text>\n            </View>\n            <View\n              style={[\n                styles.trafficStatus,\n                { backgroundColor: getTrafficColor(calculatedRoute.trafficStatus) },\n              ]}\n            >\n              <Text style={styles.trafficStatusText}>\n                {getTrafficText(calculatedRoute.trafficStatus)}\n              </Text>\n            </View>\n          </View>\n\n          <View style={styles.routePath}>\n            <View style={styles.pathItem}>\n              <Ionicons name=\"radio-button-on\" size={16} color=\"#10B981\" />\n              <Text style={styles.pathText}>출발지: 현재 위치</Text>\n            </View>\n            <View style={styles.pathLine} />\n            <View style={styles.pathItem}>\n              <Ionicons name=\"location\" size={16} color=\"#EF4444\" />\n              <Text style={styles.pathText}>도착지: {destination?.name}</Text>\n            </View>\n          </View>\n        </View>\n      )}\n\n      {/* 네비게이션 상태 */}\n      {isNavigating && (\n        <View style={styles.navigationStatus}>\n          <View style={styles.navigationHeader}>\n            <Ionicons name=\"navigate\" size={20} color=\"#FFFFFF\" />\n            <Text style={styles.navigationText}>네비게이션 진행 중</Text>\n          </View>\n          <Text style={styles.navigationSubText}>\n            목적지까지 {calculatedRoute && Math.round(calculatedRoute.duration / 60)}분 남음\n          </Text>\n        </View>\n      )}\n\n      {/* 액션 버튼들 */}\n      <View style={styles.actionButtonsContainer}>\n        {!isNavigating ? (\n          <TouchableOpacity\n            style={styles.startNavigationButton}\n            onPress={handleStartNavigation}\n            disabled={!calculatedRoute}\n          >\n            <Ionicons name=\"play\" size={20} color=\"#FFFFFF\" />\n            <Text style={styles.startNavigationText}>네비게이션 시작</Text>\n          </TouchableOpacity>\n        ) : (\n          <TouchableOpacity style={styles.stopNavigationButton} onPress={handleStopNavigation}>\n            <Ionicons name=\"stop\" size={20} color=\"#FFFFFF\" />\n            <Text style={styles.stopNavigationText}>네비게이션 중지</Text>\n          </TouchableOpacity>\n        )}\n\n        <View style={styles.actionButtonsRow}>\n          <TouchableOpacity style={styles.actionButton}>\n            <Ionicons name=\"refresh\" size={20} color=\"#6366F1\" />\n            <Text style={styles.actionButtonText}>경로 재검색</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.actionButton}>\n            <Ionicons name=\"share-outline\" size={20} color=\"#6366F1\" />\n            <Text style={styles.actionButtonText}>공유</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#E5E7EB',\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#1F2937',\n  },\n  mapContainer: {\n    flex: 1,\n    backgroundColor: '#F3F4F6',\n  },\n  mapPlaceholder: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  mapPlaceholderText: {\n    fontSize: 16,\n    color: '#9CA3AF',\n    marginTop: 16,\n  },\n  destinationInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 20,\n    backgroundColor: '#FFFFFF',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 20,\n  },\n  destinationName: {\n    fontSize: 14,\n    color: '#1F2937',\n    marginLeft: 8,\n    fontWeight: '500',\n  },\n  routeInfoContainer: {\n    backgroundColor: '#FFFFFF',\n    padding: 20,\n    borderTopWidth: 1,\n    borderTopColor: '#E5E7EB',\n  },\n  calculatingText: {\n    fontSize: 16,\n    color: '#6B7280',\n    textAlign: 'center',\n  },\n  routeHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  routeDetails: {\n    flexDirection: 'row',\n    alignItems: 'baseline',\n  },\n  routeDistance: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1F2937',\n    marginRight: 12,\n  },\n  routeDuration: {\n    fontSize: 16,\n    color: '#6B7280',\n  },\n  trafficStatus: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  trafficStatusText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  routePath: {\n    paddingLeft: 8,\n  },\n  pathItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  pathText: {\n    fontSize: 14,\n    color: '#1F2937',\n    marginLeft: 8,\n  },\n  pathLine: {\n    width: 2,\n    height: 16,\n    backgroundColor: '#D1D5DB',\n    marginLeft: 7,\n    marginVertical: 4,\n  },\n  navigationStatus: {\n    backgroundColor: '#6366F1',\n    padding: 16,\n    margin: 20,\n    borderRadius: 12,\n  },\n  navigationHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  navigationText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: '600',\n    marginLeft: 8,\n  },\n  navigationSubText: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 14,\n  },\n  actionButtonsContainer: {\n    padding: 20,\n    backgroundColor: '#FFFFFF',\n    borderTopWidth: 1,\n    borderTopColor: '#E5E7EB',\n  },\n  startNavigationButton: {\n    backgroundColor: '#10B981',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 16,\n    borderRadius: 12,\n    marginBottom: 12,\n  },\n  startNavigationText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: '600',\n    marginLeft: 8,\n  },\n  stopNavigationButton: {\n    backgroundColor: '#EF4444',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 16,\n    borderRadius: 12,\n    marginBottom: 12,\n  },\n  stopNavigationText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: '600',\n    marginLeft: 8,\n  },\n  actionButtonsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  actionButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    borderWidth: 1,\n    borderColor: '#D1D5DB',\n    borderRadius: 8,\n    marginHorizontal: 4,\n  },\n  actionButtonText: {\n    color: '#6366F1',\n    fontSize: 14,\n    fontWeight: '500',\n    marginLeft: 6,\n  },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  SafeAreaView,\n  Alert,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\n\nimport {\n  IntegratedRootStackParamList,\n  VehicleDiagnosticData,\n  MaintenanceRecommendation,\n} from '../../types/integrated-navigation';\nimport integratedNavigationService from '../../services/integrated-navigation-service';\n\ntype SmartDiagnosisScreenProps = StackNavigationProp<\n  IntegratedRootStackParamList,\n  'SmartDiagnosis'\n>;\ntype SmartDiagnosisRouteProps = RouteProp<IntegratedRootStackParamList, 'SmartDiagnosis'>;\n\nexport default function SmartDiagnosisScreen() {\n  const navigation = useNavigation<SmartDiagnosisScreenProps>();\n  const route = useRoute<SmartDiagnosisRouteProps>();\n\n  // 상태 관리\n  const [diagnosticData, setDiagnosticData] = useState<VehicleDiagnosticData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isRunningDiagnosis, setIsRunningDiagnosis] = useState(false);\n\n  const { vehicleId } = route.params;\n\n  // 진단 데이터 로드\n  useEffect(() => {\n    loadDiagnosticData();\n  }, [vehicleId]);\n\n  const loadDiagnosticData = async () => {\n    try {\n      setIsLoading(true);\n      const data = await integratedNavigationService.getVehicleDiagnostics(vehicleId);\n      setDiagnosticData(data);\n    } catch (error) {\n      console.error('진단 데이터 로드 실패:', error);\n      Alert.alert('오류', '진단 데이터를 불러오는데 실패했습니다.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 새로운 진단 실행\n  const runNewDiagnosis = async () => {\n    Alert.alert(\n      '진단 시작',\n      '차량 스마트 진단을 시작하시겠습니까?\\n진단에는 약 2-3분이 소요됩니다.',\n      [\n        { text: '취소', style: 'cancel' },\n        {\n          text: '시작',\n          onPress: async () => {\n            setIsRunningDiagnosis(true);\n            try {\n              // 실제로는 OBD 디바이스와 통신하여 진단\n              await new Promise(resolve => setTimeout(resolve, 3000));\n              await loadDiagnosticData();\n              Alert.alert('완료', '진단이 완료되었습니다.');\n            } catch (error) {\n              Alert.alert('오류', '진단 중 오류가 발생했습니다.');\n            } finally {\n              setIsRunningDiagnosis(false);\n            }\n          },\n        },\n      ]\n    );\n  };\n\n  // 정비 예약하기\n  const handleMaintenanceBooking = (recommendation: MaintenanceRecommendation) => {\n    navigation.navigate('MaintenanceBooking', {\n      serviceType: recommendation.type,\n    });\n  };\n\n  // 상태에 따른 색상 결정\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'good':\n        return '#10B981';\n      case 'warning':\n        return '#F59E0B';\n      case 'critical':\n        return '#EF4444';\n      default:\n        return '#6B7280';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'good':\n        return '양호';\n      case 'warning':\n        return '주의';\n      case 'critical':\n        return '위험';\n      default:\n        return '알 수 없음';\n    }\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'low':\n        return '#10B981';\n      case 'medium':\n        return '#F59E0B';\n      case 'high':\n        return '#EF4444';\n      case 'urgent':\n        return '#7C3AED';\n      default:\n        return '#6B7280';\n    }\n  };\n\n  const getSeverityText = (severity: string) => {\n    switch (severity) {\n      case 'low':\n        return '낮음';\n      case 'medium':\n        return '보통';\n      case 'high':\n        return '높음';\n      case 'urgent':\n        return '긴급';\n      default:\n        return '알 수 없음';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.loadingContainer}>\n          <Ionicons name=\"analytics\" size={48} color=\"#6366F1\" />\n          <Text style={styles.loadingText}>진단 데이터를 불러오는 중...</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  if (!diagnosticData) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.errorContainer}>\n          <Ionicons name=\"warning-outline\" size={48} color=\"#EF4444\" />\n          <Text style={styles.errorText}>진단 데이터를 불러올 수 없습니다.</Text>\n          <TouchableOpacity style={styles.retryButton} onPress={loadDiagnosticData}>\n            <Text style={styles.retryButtonText}>다시 시도</Text>\n          </TouchableOpacity>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView showsVerticalScrollIndicator={false}>\n        {/* 헤더 */}\n        <View style={styles.header}>\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Ionicons name=\"arrow-back\" size={24} color=\"#1F2937\" />\n          </TouchableOpacity>\n          <Text style={styles.title}>스마트 진단</Text>\n          <TouchableOpacity onPress={runNewDiagnosis} disabled={isRunningDiagnosis}>\n            <Ionicons name=\"refresh\" size={24} color={isRunningDiagnosis ? '#9CA3AF' : '#6366F1'} />\n          </TouchableOpacity>\n        </View>\n\n        {/* 진단 진행 중 표시 */}\n        {isRunningDiagnosis && (\n          <View style={styles.diagnosisProgress}>\n            <Ionicons name=\"sync\" size={20} color=\"#6366F1\" />\n            <Text style={styles.diagnosisProgressText}>진단 진행 중...</Text>\n          </View>\n        )}\n\n        {/* 전체 상태 요약 */}\n        <View style={styles.statusSummaryCard}>\n          <View style={styles.statusHeader}>\n            <Ionicons name=\"car-sport\" size={28} color=\"#6366F1\" />\n            <View style={styles.statusInfo}>\n              <Text style={styles.statusTitle}>전체 상태</Text>\n              <Text style={styles.statusTimestamp}>\n                마지막 진단: {new Date(diagnosticData.timestamp).toLocaleString('ko-KR')}\n              </Text>\n            </View>\n            <View\n              style={[\n                styles.statusBadge,\n                { backgroundColor: getStatusColor(diagnosticData.engineStatus) },\n              ]}\n            >\n              <Text style={styles.statusBadgeText}>\n                {getStatusText(diagnosticData.engineStatus)}\n              </Text>\n            </View>\n          </View>\n        </View>\n\n        {/* 주요 지표들 */}\n        <View style={styles.metricsContainer}>\n          <Text style={styles.sectionTitle}>주요 지표</Text>\n          <View style={styles.metricsGrid}>\n            <View style={styles.metricCard}>\n              <Ionicons name=\"battery-half\" size={24} color=\"#6366F1\" />\n              <Text style={styles.metricLabel}>배터리</Text>\n              <Text style={styles.metricValue}>{diagnosticData.batteryLevel}%</Text>\n              <View\n                style={[\n                  styles.metricBar,\n                  { backgroundColor: diagnosticData.batteryLevel > 50 ? '#10B981' : '#EF4444' },\n                ]}\n              />\n            </View>\n\n            <View style={styles.metricCard}>\n              <Ionicons name=\"speedometer\" size={24} color=\"#6366F1\" />\n              <Text style={styles.metricLabel}>연료</Text>\n              <Text style={styles.metricValue}>{diagnosticData.fuelLevel}%</Text>\n              <View\n                style={[\n                  styles.metricBar,\n                  { backgroundColor: diagnosticData.fuelLevel > 25 ? '#10B981' : '#EF4444' },\n                ]}\n              />\n            </View>\n\n            <View style={styles.metricCard}>\n              <Ionicons name=\"thermometer\" size={24} color=\"#6366F1\" />\n              <Text style={styles.metricLabel}>냉각수 온도</Text>\n              <Text style={styles.metricValue}>{diagnosticData.coolantTemperature}°C</Text>\n              <View\n                style={[\n                  styles.metricBar,\n                  {\n                    backgroundColor:\n                      diagnosticData.coolantTemperature < 100 ? '#10B981' : '#EF4444',\n                  },\n                ]}\n              />\n            </View>\n\n            <View style={styles.metricCard}>\n              <Ionicons name=\"speedometer\" size={24} color=\"#6366F1\" />\n              <Text style={styles.metricLabel}>오일 압력</Text>\n              <Text style={styles.metricValue}>{diagnosticData.oilPressure} PSI</Text>\n              <View\n                style={[\n                  styles.metricBar,\n                  { backgroundColor: diagnosticData.oilPressure > 30 ? '#10B981' : '#EF4444' },\n                ]}\n              />\n            </View>\n          </View>\n        </View>\n\n        {/* 타이어 압력 */}\n        <View style={styles.tireContainer}>\n          <Text style={styles.sectionTitle}>타이어 압력</Text>\n          <View style={styles.tireGrid}>\n            <View style={styles.tireItem}>\n              <Text style={styles.tireLabel}>앞 좌</Text>\n              <Text style={styles.tireValue}>{diagnosticData.tirePressure.frontLeft} PSI</Text>\n            </View>\n            <View style={styles.tireItem}>\n              <Text style={styles.tireLabel}>앞 우</Text>\n              <Text style={styles.tireValue}>{diagnosticData.tirePressure.frontRight} PSI</Text>\n            </View>\n            <View style={styles.tireItem}>\n              <Text style={styles.tireLabel}>뒤 좌</Text>\n              <Text style={styles.tireValue}>{diagnosticData.tirePressure.rearLeft} PSI</Text>\n            </View>\n            <View style={styles.tireItem}>\n              <Text style={styles.tireLabel}>뒤 우</Text>\n              <Text style={styles.tireValue}>{diagnosticData.tirePressure.rearRight} PSI</Text>\n            </View>\n          </View>\n        </View>\n\n        {/* 진단 코드 */}\n        {diagnosticData.diagnosticCodes.length > 0 && (\n          <View style={styles.diagnosticCodesContainer}>\n            <Text style={styles.sectionTitle}>진단 코드</Text>\n            {diagnosticData.diagnosticCodes.map((code, index) => (\n              <View key={index} style={styles.diagnosticCodeItem}>\n                <Ionicons name=\"warning\" size={16} color=\"#F59E0B\" />\n                <Text style={styles.diagnosticCodeText}>{code}</Text>\n              </View>\n            ))}\n          </View>\n        )}\n\n        {/* 정비 권장사항 */}\n        {diagnosticData.maintenanceRecommendations.length > 0 && (\n          <View style={styles.recommendationsContainer}>\n            <Text style={styles.sectionTitle}>정비 권장사항</Text>\n            {diagnosticData.maintenanceRecommendations.map(recommendation => (\n              <View key={recommendation.id} style={styles.recommendationCard}>\n                <View style={styles.recommendationHeader}>\n                  <Ionicons name=\"construct\" size={20} color=\"#6366F1\" />\n                  <View style={styles.recommendationInfo}>\n                    <Text style={styles.recommendationType}>\n                      {recommendation.type.replace(/_/g, ' ').toUpperCase()}\n                    </Text>\n                    <View\n                      style={[\n                        styles.severityBadge,\n                        { backgroundColor: getSeverityColor(recommendation.severity) },\n                      ]}\n                    >\n                      <Text style={styles.severityText}>\n                        {getSeverityText(recommendation.severity)}\n                      </Text>\n                    </View>\n                  </View>\n                </View>\n\n                <Text style={styles.recommendationDescription}>{recommendation.description}</Text>\n\n                <View style={styles.recommendationFooter}>\n                  <Text style={styles.recommendationCost}>\n                    예상 비용: ₩{recommendation.estimatedCost.toLocaleString()}\n                  </Text>\n                  <TouchableOpacity\n                    style={styles.bookingButton}\n                    onPress={() => handleMaintenanceBooking(recommendation)}\n                  >\n                    <Text style={styles.bookingButtonText}>예약하기</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            ))}\n          </View>\n        )}\n\n        {/* 액션 버튼들 */}\n        <View style={styles.actionButtonsContainer}>\n          <TouchableOpacity\n            style={styles.newDiagnosisButton}\n            onPress={runNewDiagnosis}\n            disabled={isRunningDiagnosis}\n          >\n            <Ionicons name=\"analytics\" size={20} color=\"#FFFFFF\" />\n            <Text style={styles.newDiagnosisButtonText}>\n              {isRunningDiagnosis ? '진단 중...' : '새 진단 실행'}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    backgroundColor: '#FFFFFF',\n    borderBottomWidth: 1,\n    borderBottomColor: '#E5E7EB',\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#1F2937',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    fontSize: 16,\n    color: '#6B7280',\n    marginTop: 16,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 40,\n  },\n  errorText: {\n    fontSize: 16,\n    color: '#EF4444',\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  retryButton: {\n    backgroundColor: '#6366F1',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n    marginTop: 16,\n  },\n  retryButtonText: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  diagnosisProgress: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#EEF2FF',\n    paddingVertical: 12,\n    marginHorizontal: 20,\n    marginVertical: 16,\n    borderRadius: 8,\n  },\n  diagnosisProgressText: {\n    color: '#6366F1',\n    fontSize: 14,\n    fontWeight: '500',\n    marginLeft: 8,\n  },\n  statusSummaryCard: {\n    backgroundColor: '#FFFFFF',\n    margin: 20,\n    padding: 20,\n    borderRadius: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 3,\n  },\n  statusHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  statusInfo: {\n    flex: 1,\n    marginLeft: 12,\n  },\n  statusTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#1F2937',\n  },\n  statusTimestamp: {\n    fontSize: 12,\n    color: '#6B7280',\n    marginTop: 2,\n  },\n  statusBadge: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  statusBadgeText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  metricsContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginBottom: 16,\n  },\n  metricsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  metricCard: {\n    backgroundColor: '#FFFFFF',\n    width: '48%',\n    padding: 16,\n    borderRadius: 12,\n    marginBottom: 12,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  metricLabel: {\n    fontSize: 12,\n    color: '#6B7280',\n    marginTop: 8,\n    textAlign: 'center',\n  },\n  metricValue: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#1F2937',\n    marginTop: 4,\n  },\n  metricBar: {\n    width: '100%',\n    height: 4,\n    borderRadius: 2,\n    marginTop: 8,\n  },\n  tireContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 24,\n  },\n  tireGrid: {\n    backgroundColor: '#FFFFFF',\n    borderRadius: 12,\n    padding: 16,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  tireItem: {\n    width: '50%',\n    alignItems: 'center',\n    paddingVertical: 12,\n  },\n  tireLabel: {\n    fontSize: 12,\n    color: '#6B7280',\n  },\n  tireValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1F2937',\n    marginTop: 4,\n  },\n  diagnosticCodesContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 24,\n  },\n  diagnosticCodeItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  diagnosticCodeText: {\n    fontSize: 14,\n    color: '#1F2937',\n    marginLeft: 8,\n  },\n  recommendationsContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 24,\n  },\n  recommendationCard: {\n    backgroundColor: '#FFFFFF',\n    padding: 16,\n    borderRadius: 12,\n    marginBottom: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  recommendationHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  recommendationInfo: {\n    flex: 1,\n    marginLeft: 8,\n  },\n  recommendationType: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#1F2937',\n  },\n  severityBadge: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 8,\n    paddingVertical: 2,\n    borderRadius: 8,\n    marginTop: 4,\n  },\n  severityText: {\n    color: '#FFFFFF',\n    fontSize: 10,\n    fontWeight: '600',\n  },\n  recommendationDescription: {\n    fontSize: 14,\n    color: '#6B7280',\n    marginBottom: 12,\n    lineHeight: 20,\n  },\n  recommendationFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  recommendationCost: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#1F2937',\n  },\n  bookingButton: {\n    backgroundColor: '#6366F1',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8,\n  },\n  bookingButtonText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  actionButtonsContainer: {\n    paddingHorizontal: 20,\n    marginBottom: 24,\n  },\n  newDiagnosisButton: {\n    backgroundColor: '#6366F1',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 16,\n    borderRadius: 12,\n  },\n  newDiagnosisButtonText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: '600',\n    marginLeft: 8,\n  },\n});\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Alert,\n  TextInput,\n} from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons';\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport type { RouteProp } from '@react-navigation/native';\nimport type { IntegratedRootStackParamList } from '../../types/integrated-navigation';\n\ntype MaintenanceBookingScreenNavigationProp = StackNavigationProp<\n  IntegratedRootStackParamList,\n  'MaintenanceBooking'\n>;\n\ntype MaintenanceBookingScreenRouteProp = RouteProp<\n  IntegratedRootStackParamList,\n  'MaintenanceBooking'\n>;\n\ninterface MaintenanceService {\n  id: string;\n  name: string;\n  description: string;\n  estimatedDuration: string;\n  price: string;\n  icon: keyof typeof Ionicons.glyphMap;\n  category: 'routine' | 'repair' | 'emergency';\n}\n\ninterface Workshop {\n  id: string;\n  name: string;\n  distance: string;\n  rating: number;\n  available: boolean;\n  services: string[];\n}\n\nconst MaintenanceBookingScreen: React.FC = () => {\n  const navigation = useNavigation<MaintenanceBookingScreenNavigationProp>();\n  const route = useRoute<MaintenanceBookingScreenRouteProp>();\n  const { serviceType } = route.params || {};\n\n  const [selectedServices, setSelectedServices] = useState<string[]>(\n    serviceType ? [serviceType] : []\n  );\n  const [selectedWorkshop, setSelectedWorkshop] = useState<string | null>(null);\n  const [selectedDate, setSelectedDate] = useState<string | null>(null);\n  const [selectedTime, setSelectedTime] = useState<string | null>(null);\n  const [memo, setMemo] = useState<string>('');\n\n  const maintenanceServices: MaintenanceService[] = [\n    {\n      id: 'oil-change',\n      name: '엔진오일 교환',\n      description: '엔진오일 및 오일필터 교환',\n      estimatedDuration: '30분',\n      price: '60,000원',\n      icon: 'car-outline',\n      category: 'routine',\n    },\n    {\n      id: 'tire-replacement',\n      name: '타이어 교체',\n      description: '타이어 교체 및 밸런스 조정',\n      estimatedDuration: '45분',\n      price: '150,000원',\n      icon: 'ellipse-outline',\n      category: 'repair',\n    },\n    {\n      id: 'brake-inspection',\n      name: '브레이크 점검',\n      description: '브레이크 패드 및 디스크 점검',\n      estimatedDuration: '20분',\n      price: '40,000원',\n      icon: 'stop-circle-outline',\n      category: 'routine',\n    },\n    {\n      id: 'battery-replacement',\n      name: '배터리 교체',\n      description: '배터리 교체 및 충전 시스템 점검',\n      estimatedDuration: '25분',\n      price: '120,000원',\n      icon: 'battery-charging-outline',\n      category: 'repair',\n    },\n    {\n      id: 'other-inspection',\n      name: '기타 점검',\n      description: '기타 차량 상태 점검 및 진단',\n      estimatedDuration: '30-60분',\n      price: '30,000원~',\n      icon: 'construct-outline',\n      category: 'routine',\n    },\n    {\n      id: 'emergency-repair',\n      name: '긴급 수리',\n      description: '긴급 상황 대응 수리',\n      estimatedDuration: '1-2시간',\n      price: '견적 후 결정',\n      icon: 'warning-outline',\n      category: 'emergency',\n    },\n  ];\n\n  const nearbyWorkshops: Workshop[] = [\n    {\n      id: '1',\n      name: '카고로 정비센터 강남점',\n      distance: '1.2km',\n      rating: 4.8,\n      available: true,\n      services: ['oil-change', 'tire-replacement', 'brake-inspection', 'other-inspection'],\n    },\n    {\n      id: '2',\n      name: '스마트카 서비스센터',\n      distance: '2.1km',\n      rating: 4.6,\n      available: true,\n      services: ['battery-replacement', 'emergency-repair', 'other-inspection'],\n    },\n    {\n      id: '3',\n      name: '프리미엄 오토케어',\n      distance: '3.5km',\n      rating: 4.9,\n      available: false,\n      services: [\n        'oil-change',\n        'tire-replacement',\n        'brake-inspection',\n        'battery-replacement',\n        'other-inspection',\n      ],\n    },\n  ];\n\n  // 오늘부터 2주간의 날짜 생성 (오후 4시 이후라면 모레부터 시작)\n  const generateAvailableDates = () => {\n    const dates: string[] = [];\n    const now = new Date(); // 현재 날짜와 시간\n\n    // 디버깅 로그: 현재 시간 확인\n    console.log(`현재 날짜: ${now.toLocaleDateString('ko-KR')}`);\n    console.log(`현재 시간: ${now.getHours()}시 ${now.getMinutes()}분`);\n\n    // 현재 시간이 오후 4시(16시) 이후인지 확인\n    const isAfter4PM = now.getHours() >= 16;\n    console.log(`오후 4시 이후?: ${isAfter4PM}`);\n\n    // 시작일 결정: 오후 4시 이후라면 모레(2일 후)부터, 아니면 오늘부터\n    let startDay = 0;\n    if (isAfter4PM) {\n      startDay = 2; // 모레부터 시작\n      console.log('예약 가능 시작일: 모레');\n    } else {\n      console.log('예약 가능 시작일: 오늘');\n    }\n\n    // 날짜 생성 (시작일부터 2주간)\n    for (let i = 0; i < 14; i++) {\n      const date = new Date(now);\n      date.setDate(now.getDate() + startDay + i);\n      const dateString = date.toISOString().split('T')[0]; // YYYY-MM-DD 형식\n      dates.push(dateString);\n    }\n\n    return dates;\n  };\n\n  const availableDates = generateAvailableDates();\n\n  const availableTimes = ['09:00', '10:00', '11:00', '14:00', '15:00', '16:00', '17:00'];\n\n  // 선택한 날짜에 따라 이용 가능한 시간 필터링\n  const getAvailableTimesForDate = (selectedDate: string | null) => {\n    if (!selectedDate) return [];\n\n    const now = new Date();\n    const today = now.toISOString().split('T')[0]; // 오늘 날짜 YYYY-MM-DD 형식\n\n    // 선택한 날짜가 오늘이 아니면 모든 시간 슬롯 반환\n    if (selectedDate !== today) {\n      return availableTimes;\n    }\n\n    // 선택한 날짜가 오늘이면 현재 시간 이후의 시간만 반환\n    const currentHour = now.getHours();\n    return availableTimes.filter(time => {\n      const timeHour = parseInt(time.split(':')[0], 10);\n      // 현재 시간보다 1시간 이상 나중인 시간만 선택 가능\n      return timeHour > currentHour + 1;\n    });\n  };\n\n  const handleBooking = () => {\n    if (selectedServices.length === 0 || !selectedWorkshop || !selectedDate || !selectedTime) {\n      Alert.alert('예약 정보 확인', '모든 정보를 선택해주세요.');\n      return;\n    }\n\n    // 선택한 서비스 이름 목록 생성\n    const selectedServiceNames = maintenanceServices\n      .filter(service => selectedServices.includes(service.id))\n      .map(service => service.name)\n      .join(', ');\n\n    const memoText = memo ? `\\n\\n메모: ${memo}` : '';\n\n    Alert.alert(\n      '예약 확인',\n      `선택한 서비스: ${selectedServiceNames}\\n날짜: ${selectedDate}\\n시간: ${selectedTime}${memoText}\\n\\n정비 예약을 완료하시겠습니까?`,\n      [\n        { text: '취소', style: 'cancel' },\n        {\n          text: '확인',\n          onPress: () => {\n            Alert.alert('예약 완료', '정비 예약이 완료되었습니다.');\n            navigation.goBack();\n          },\n        },\n      ]\n    );\n  };\n\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case 'routine':\n        return '#4CAF50';\n      case 'repair':\n        return '#FF9800';\n      case 'emergency':\n        return '#F44336';\n      default:\n        return '#2196F3';\n    }\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n          <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\n        </TouchableOpacity>\n        <Text style={styles.headerTitle}>정비 예약</Text>\n        <View style={styles.placeholder} />\n      </View>\n\n      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>\n        {/* 서비스 선택 */}\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>서비스 선택</Text>\n          {maintenanceServices.map(service => (\n            <TouchableOpacity\n              key={service.id}\n              style={[\n                styles.serviceCard,\n                selectedServices.includes(service.id) && styles.selectedCard,\n              ]}\n              onPress={() => {\n                // 다중 선택 처리\n                if (selectedServices.includes(service.id)) {\n                  setSelectedServices(selectedServices.filter(id => id !== service.id));\n                } else {\n                  setSelectedServices([...selectedServices, service.id]);\n                }\n              }}\n            >\n              <View style={styles.serviceHeader}>\n                <View\n                  style={[\n                    styles.serviceIcon,\n                    { backgroundColor: getCategoryColor(service.category) },\n                  ]}\n                >\n                  <Ionicons name={service.icon} size={24} color=\"#fff\" />\n                </View>\n                <View style={styles.serviceInfo}>\n                  <Text style={styles.serviceName}>{service.name}</Text>\n                  <Text style={styles.serviceDescription}>{service.description}</Text>\n                  <View style={styles.serviceDetails}>\n                    <Text style={styles.serviceDuration}>⏱ {service.estimatedDuration}</Text>\n                    <Text style={styles.servicePrice}>💰 {service.price}</Text>\n                  </View>\n                </View>\n              </View>\n              {selectedServices.includes(service.id) && (\n                <Ionicons name=\"checkmark-circle\" size={24} color=\"#4CAF50\" />\n              )}\n            </TouchableOpacity>\n          ))}\n        </View>\n\n        {/* 정비소 선택 */}\n        {selectedServices.length > 0 && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>정비소 선택</Text>\n            {nearbyWorkshops.map(workshop => (\n              <TouchableOpacity\n                key={workshop.id}\n                style={[\n                  styles.workshopCard,\n                  selectedWorkshop === workshop.id && styles.selectedCard,\n                  !workshop.available && styles.disabledCard,\n                ]}\n                onPress={() => workshop.available && setSelectedWorkshop(workshop.id)}\n                disabled={!workshop.available}\n              >\n                <View style={styles.workshopInfo}>\n                  <Text style={[styles.workshopName, !workshop.available && styles.disabledText]}>\n                    {workshop.name}\n                  </Text>\n                  <View style={styles.workshopDetails}>\n                    <Text style={styles.workshopDistance}>📍 {workshop.distance}</Text>\n                    <Text style={styles.workshopRating}>⭐ {workshop.rating}</Text>\n                  </View>\n                  <Text\n                    style={[styles.workshopStatus, !workshop.available && styles.unavailableStatus]}\n                  >\n                    {workshop.available ? '예약 가능' : '예약 불가'}\n                  </Text>\n                </View>\n                {selectedWorkshop === workshop.id && (\n                  <Ionicons name=\"checkmark-circle\" size={24} color=\"#4CAF50\" />\n                )}\n              </TouchableOpacity>\n            ))}\n          </View>\n        )}\n\n        {/* 날짜 선택 */}\n        {selectedWorkshop && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>날짜 선택</Text>\n            <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n              <View style={styles.dateContainer}>\n                {availableDates.map(date => (\n                  <TouchableOpacity\n                    key={date}\n                    style={[styles.dateCard, selectedDate === date && styles.selectedDateCard]}\n                    onPress={() => {\n                      setSelectedDate(date);\n                      // 날짜가 변경되면 시간 선택 초기화\n                      setSelectedTime(null);\n                    }}\n                  >\n                    <Text\n                      style={[styles.dateText, selectedDate === date && styles.selectedDateText]}\n                    >\n                      {new Date(date).toLocaleDateString('ko-KR', {\n                        month: 'short',\n                        day: 'numeric',\n                      })}\n                    </Text>\n                    <Text\n                      style={[styles.dayText, selectedDate === date && styles.selectedDateText]}\n                    >\n                      {new Date(date).toLocaleDateString('ko-KR', { weekday: 'short' })}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </View>\n            </ScrollView>\n          </View>\n        )}\n\n        {/* 시간 선택 */}\n        {selectedDate && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>시간 선택</Text>\n            <View style={styles.timeGrid}>\n              {getAvailableTimesForDate(selectedDate).map(time => (\n                <TouchableOpacity\n                  key={time}\n                  style={[styles.timeCard, selectedTime === time && styles.selectedTimeCard]}\n                  onPress={() => setSelectedTime(time)}\n                >\n                  <Text style={[styles.timeText, selectedTime === time && styles.selectedTimeText]}>\n                    {time}\n                  </Text>\n                </TouchableOpacity>\n              ))}\n            </View>\n            {getAvailableTimesForDate(selectedDate).length === 0 && (\n              <Text style={styles.noTimesMessage}>\n                선택하신 날짜에 이용 가능한 시간이 없습니다. 다른 날짜를 선택해주세요.\n              </Text>\n            )}\n          </View>\n        )}\n\n        {/* 정비사에게 남길 메모 */}\n        {selectedTime && (\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>정비사에게 남길 메모</Text>\n            <View style={styles.memoContainer}>\n              <TextInput\n                style={styles.memoInput}\n                placeholder=\"차량 상태나 요청사항을 남겨주세요 (선택사항)\"\n                multiline={true}\n                numberOfLines={4}\n                textAlignVertical=\"top\"\n                value={memo}\n                onChangeText={setMemo}\n              />\n            </View>\n          </View>\n        )}\n      </ScrollView>\n\n      {/* 예약 버튼 */}\n      {selectedServices.length > 0 && selectedWorkshop && selectedDate && selectedTime && (\n        <View style={styles.footer}>\n          <TouchableOpacity style={styles.bookingButton} onPress={handleBooking}>\n            <Text style={styles.bookingButtonText}>예약하기</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e9ecef',\n  },\n  backButton: {\n    padding: 8,\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n  },\n  placeholder: {\n    width: 40,\n  },\n  content: {\n    flex: 1,\n    padding: 20,\n  },\n  section: {\n    marginBottom: 30,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 15,\n  },\n  serviceCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 2,\n    borderColor: 'transparent',\n  },\n  selectedCard: {\n    borderColor: '#4CAF50',\n  },\n  serviceHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  serviceIcon: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 12,\n  },\n  serviceInfo: {\n    flex: 1,\n  },\n  serviceName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 4,\n  },\n  serviceDescription: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 8,\n  },\n  serviceDetails: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  serviceDuration: {\n    fontSize: 12,\n    color: '#888',\n  },\n  servicePrice: {\n    fontSize: 12,\n    color: '#888',\n  },\n  workshopCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 2,\n    borderColor: 'transparent',\n  },\n  disabledCard: {\n    opacity: 0.5,\n  },\n  workshopInfo: {\n    flex: 1,\n  },\n  workshopName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 8,\n  },\n  disabledText: {\n    color: '#999',\n  },\n  workshopDetails: {\n    flexDirection: 'row',\n    gap: 16,\n    marginBottom: 8,\n  },\n  workshopDistance: {\n    fontSize: 14,\n    color: '#666',\n  },\n  workshopRating: {\n    fontSize: 14,\n    color: '#666',\n  },\n  workshopStatus: {\n    fontSize: 12,\n    color: '#4CAF50',\n    fontWeight: '500',\n  },\n  unavailableStatus: {\n    color: '#F44336',\n  },\n  dateContainer: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  dateCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    minWidth: 80,\n    borderWidth: 2,\n    borderColor: 'transparent',\n  },\n  selectedDateCard: {\n    borderColor: '#4CAF50',\n    backgroundColor: '#4CAF50',\n  },\n  dateText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 4,\n  },\n  dayText: {\n    fontSize: 12,\n    color: '#666',\n  },\n  selectedDateText: {\n    color: '#fff',\n  },\n  timeGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12,\n  },\n  timeCard: {\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    padding: 12,\n    minWidth: 70,\n    alignItems: 'center',\n    borderWidth: 2,\n    borderColor: 'transparent',\n  },\n  selectedTimeCard: {\n    borderColor: '#4CAF50',\n    backgroundColor: '#4CAF50',\n  },\n  timeText: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#333',\n  },\n  selectedTimeText: {\n    color: '#fff',\n  },\n  footer: {\n    padding: 20,\n    backgroundColor: '#fff',\n    borderTopWidth: 1,\n    borderTopColor: '#e9ecef',\n  },\n  bookingButton: {\n    backgroundColor: '#4CAF50',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n  },\n  bookingButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#fff',\n  },\n  memoContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#e9ecef',\n  },\n  memoInput: {\n    fontSize: 14,\n    color: '#333',\n    minHeight: 100,\n    padding: 8,\n  },\n  noTimesMessage: {\n    fontSize: 14,\n    color: '#F44336',\n    textAlign: 'center',\n    marginTop: 15,\n    fontWeight: '500',\n  },\n});\n\nexport default MaintenanceBookingScreen;\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  TextInput,\n  Alert,\n} from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons';\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport type { RouteProp } from '@react-navigation/native';\nimport type { IntegratedRootStackParamList } from '../../types/integrated-navigation';\n\ntype WorkshopSearchScreenNavigationProp = StackNavigationProp<\n  IntegratedRootStackParamList,\n  'WorkshopSearch'\n>;\n\ntype WorkshopSearchScreenRouteProp = RouteProp<IntegratedRootStackParamList, 'WorkshopSearch'>;\n\ninterface Workshop {\n  id: string;\n  name: string;\n  address: string;\n  distance: string;\n  rating: number;\n  reviewCount: number;\n  phoneNumber: string;\n  isOpen: boolean;\n  openHours: string;\n  services: ServiceType[];\n  specialties: string[];\n  images: string[];\n  latitude: number;\n  longitude: number;\n}\n\ninterface ServiceType {\n  id: string;\n  name: string;\n  price: string;\n  icon: keyof typeof Ionicons.glyphMap;\n}\n\nconst WorkshopSearchScreen: React.FC = () => {\n  const navigation = useNavigation<WorkshopSearchScreenNavigationProp>();\n  const route = useRoute<WorkshopSearchScreenRouteProp>();\n  const { currentLocation, serviceType } = route.params || {};\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState<string>(serviceType || 'all');\n  const [sortBy, setSortBy] = useState<'distance' | 'rating' | 'price'>('distance');\n  const [workshops, setWorkshops] = useState<Workshop[]>([]);\n\n  const serviceFilters = [\n    { id: 'all', name: '전체', icon: 'grid-outline' as keyof typeof Ionicons.glyphMap },\n    { id: 'oil-change', name: '오일교환', icon: 'car-outline' as keyof typeof Ionicons.glyphMap },\n    { id: 'tire', name: '타이어', icon: 'ellipse-outline' as keyof typeof Ionicons.glyphMap },\n    {\n      id: 'brake',\n      name: '브레이크',\n      icon: 'stop-circle-outline' as keyof typeof Ionicons.glyphMap,\n    },\n    {\n      id: 'battery',\n      name: '배터리',\n      icon: 'battery-charging-outline' as keyof typeof Ionicons.glyphMap,\n    },\n    {\n      id: 'emergency',\n      name: '응급수리',\n      icon: 'warning-outline' as keyof typeof Ionicons.glyphMap,\n    },\n  ];\n\n  const mockWorkshops: Workshop[] = [\n    {\n      id: '1',\n      name: '카고로 정비센터 강남점',\n      address: '서울시 강남구 테헤란로 123',\n      distance: '1.2km',\n      rating: 4.8,\n      reviewCount: 127,\n      phoneNumber: '02-1234-5678',\n      isOpen: true,\n      openHours: '09:00 - 18:00',\n      services: [\n        { id: 'oil-change', name: '엔진오일 교환', price: '60,000원', icon: 'car-outline' },\n        { id: 'tire', name: '타이어 교체', price: '150,000원', icon: 'ellipse-outline' },\n      ],\n      specialties: ['수입차 전문', '친환경 오일'],\n      images: [],\n      latitude: 37.5665,\n      longitude: 126.978,\n    },\n    {\n      id: '2',\n      name: '스마트카 서비스센터',\n      address: '서울시 강남구 삼성로 456',\n      distance: '2.1km',\n      rating: 4.6,\n      reviewCount: 89,\n      phoneNumber: '02-2345-6789',\n      isOpen: true,\n      openHours: '08:30 - 19:00',\n      services: [\n        {\n          id: 'battery',\n          name: '배터리 교체',\n          price: '120,000원',\n          icon: 'battery-charging-outline',\n        },\n        { id: 'emergency', name: '응급 수리', price: '견적 후', icon: 'warning-outline' },\n      ],\n      specialties: ['24시간 출동', '전기차 정비'],\n      images: [],\n      latitude: 37.5172,\n      longitude: 127.0473,\n    },\n    {\n      id: '3',\n      name: '프리미엄 오토케어',\n      address: '서울시 서초구 강남대로 789',\n      distance: '3.5km',\n      rating: 4.9,\n      reviewCount: 203,\n      phoneNumber: '02-3456-7890',\n      isOpen: false,\n      openHours: '09:00 - 18:00 (일요일 휴무)',\n      services: [\n        { id: 'oil-change', name: '엔진오일 교환', price: '55,000원', icon: 'car-outline' },\n        { id: 'brake', name: '브레이크 정비', price: '80,000원', icon: 'stop-circle-outline' },\n        { id: 'tire', name: '타이어 교체', price: '140,000원', icon: 'ellipse-outline' },\n      ],\n      specialties: ['고급차 전문', '정품 부품'],\n      images: [],\n      latitude: 37.4979,\n      longitude: 127.0276,\n    },\n  ];\n\n  useEffect(() => {\n    setWorkshops(mockWorkshops);\n  }, []);\n\n  const filteredWorkshops = workshops.filter(workshop => {\n    const matchesSearch =\n      workshop.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      workshop.address.toLowerCase().includes(searchQuery.toLowerCase());\n\n    const matchesFilter =\n      selectedFilter === 'all' || workshop.services.some(service => service.id === selectedFilter);\n\n    return matchesSearch && matchesFilter;\n  });\n\n  const sortedWorkshops = [...filteredWorkshops].sort((a, b) => {\n    switch (sortBy) {\n      case 'distance':\n        return parseFloat(a.distance) - parseFloat(b.distance);\n      case 'rating':\n        return b.rating - a.rating;\n      case 'price':\n        // 가격 정렬은 복잡하므로 임시로 이름순\n        return a.name.localeCompare(b.name);\n      default:\n        return 0;\n    }\n  });\n\n  const handleWorkshopPress = (workshop: Workshop) => {\n    Alert.alert(\n      workshop.name,\n      `전화: ${workshop.phoneNumber}\\n주소: ${workshop.address}\\n영업시간: ${workshop.openHours}`,\n      [\n        { text: '취소', style: 'cancel' },\n        { text: '전화걸기', onPress: () => Alert.alert('전화', '전화 앱을 실행합니다.') },\n        { text: '예약하기', onPress: () => navigation.navigate('MaintenanceBooking', {}) },\n        {\n          text: '길찾기',\n          onPress: () =>\n            navigation.navigate('MapDetail', {\n              destination: {\n                latitude: workshop.latitude,\n                longitude: workshop.longitude,\n                name: workshop.name,\n              },\n            }),\n        },\n      ]\n    );\n  };\n\n  const renderWorkshopCard = (workshop: Workshop) => (\n    <TouchableOpacity\n      key={workshop.id}\n      style={styles.workshopCard}\n      onPress={() => handleWorkshopPress(workshop)}\n    >\n      <View style={styles.workshopHeader}>\n        <View style={styles.workshopInfo}>\n          <Text style={styles.workshopName}>{workshop.name}</Text>\n          <Text style={styles.workshopAddress}>{workshop.address}</Text>\n          <View style={styles.workshopMeta}>\n            <Text style={styles.distance}>📍 {workshop.distance}</Text>\n            <Text style={styles.rating}>\n              ⭐ {workshop.rating} ({workshop.reviewCount})\n            </Text>\n          </View>\n        </View>\n        <View style={styles.workshopStatus}>\n          <View\n            style={[\n              styles.statusIndicator,\n              { backgroundColor: workshop.isOpen ? '#4CAF50' : '#F44336' },\n            ]}\n          />\n          <Text style={[styles.statusText, { color: workshop.isOpen ? '#4CAF50' : '#F44336' }]}>\n            {workshop.isOpen ? '영업중' : '영업종료'}\n          </Text>\n        </View>\n      </View>\n\n      <View style={styles.workshopDetails}>\n        <Text style={styles.openHours}>🕒 {workshop.openHours}</Text>\n        <Text style={styles.phone}>📞 {workshop.phoneNumber}</Text>\n      </View>\n\n      <View style={styles.servicesContainer}>\n        <Text style={styles.servicesTitle}>제공 서비스:</Text>\n        <View style={styles.servicesList}>\n          {workshop.services.map(service => (\n            <View key={service.id} style={styles.serviceTag}>\n              <Ionicons name={service.icon} size={14} color=\"#666\" />\n              <Text style={styles.serviceTagText}>{service.name}</Text>\n            </View>\n          ))}\n        </View>\n      </View>\n\n      {workshop.specialties.length > 0 && (\n        <View style={styles.specialtiesContainer}>\n          <Text style={styles.specialtiesTitle}>전문 분야:</Text>\n          <View style={styles.specialtiesList}>\n            {workshop.specialties.map((specialty, index) => (\n              <Text key={index} style={styles.specialtyTag}>\n                {specialty}\n              </Text>\n            ))}\n          </View>\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n          <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\n        </TouchableOpacity>\n        <Text style={styles.headerTitle}>정비소 찾기</Text>\n        <TouchableOpacity style={styles.mapButton}>\n          <Ionicons name=\"map-outline\" size={24} color=\"#333\" />\n        </TouchableOpacity>\n      </View>\n\n      {/* 검색바 */}\n      <View style={styles.searchContainer}>\n        <View style={styles.searchInputContainer}>\n          <Ionicons name=\"search-outline\" size={20} color=\"#666\" />\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"정비소 이름 또는 주소 검색\"\n            value={searchQuery}\n            onChangeText={setSearchQuery}\n          />\n          {searchQuery.length > 0 && (\n            <TouchableOpacity onPress={() => setSearchQuery('')}>\n              <Ionicons name=\"close-circle-outline\" size={20} color=\"#666\" />\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n\n      {/* 필터 및 정렬 */}\n      <View style={styles.filtersContainer}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={styles.filterButtons}>\n            {serviceFilters.map(filter => (\n              <TouchableOpacity\n                key={filter.id}\n                style={[\n                  styles.filterButton,\n                  selectedFilter === filter.id && styles.activeFilterButton,\n                ]}\n                onPress={() => setSelectedFilter(filter.id)}\n              >\n                <Ionicons\n                  name={filter.icon}\n                  size={16}\n                  color={selectedFilter === filter.id ? '#fff' : '#666'}\n                />\n                <Text\n                  style={[\n                    styles.filterButtonText,\n                    selectedFilter === filter.id && styles.activeFilterButtonText,\n                  ]}\n                >\n                  {filter.name}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </ScrollView>\n\n        <View style={styles.sortContainer}>\n          <TouchableOpacity\n            style={styles.sortButton}\n            onPress={() => {\n              const options = ['distance', 'rating', 'price'];\n              const currentIndex = options.indexOf(sortBy);\n              const nextIndex = (currentIndex + 1) % options.length;\n              setSortBy(options[nextIndex] as typeof sortBy);\n            }}\n          >\n            <Ionicons name=\"swap-vertical-outline\" size={16} color=\"#666\" />\n            <Text style={styles.sortButtonText}>\n              {sortBy === 'distance' ? '거리순' : sortBy === 'rating' ? '평점순' : '가격순'}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      {/* 결과 목록 */}\n      <ScrollView style={styles.resultsList} showsVerticalScrollIndicator={false}>\n        <View style={styles.resultsHeader}>\n          <Text style={styles.resultsCount}>총 {sortedWorkshops.length}개의 정비소</Text>\n        </View>\n\n        {sortedWorkshops.length === 0 ? (\n          <View style={styles.emptyState}>\n            <Ionicons name=\"car-outline\" size={48} color=\"#ccc\" />\n            <Text style={styles.emptyStateText}>검색 결과가 없습니다</Text>\n            <Text style={styles.emptyStateSubtext}>다른 검색어나 필터를 시도해보세요</Text>\n          </View>\n        ) : (\n          sortedWorkshops.map(renderWorkshopCard)\n        )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e9ecef',\n  },\n  backButton: {\n    padding: 8,\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n  },\n  mapButton: {\n    padding: 8,\n  },\n  searchContainer: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e9ecef',\n  },\n  searchInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f8f9fa',\n    borderRadius: 12,\n    paddingHorizontal: 15,\n    paddingVertical: 12,\n  },\n  searchInput: {\n    flex: 1,\n    marginLeft: 10,\n    fontSize: 16,\n    color: '#333',\n  },\n  filtersContainer: {\n    backgroundColor: '#fff',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e9ecef',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  filterButtons: {\n    flexDirection: 'row',\n    gap: 10,\n    paddingLeft: 20,\n  },\n  filterButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f8f9fa',\n    borderRadius: 20,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    gap: 6,\n  },\n  activeFilterButton: {\n    backgroundColor: '#4CAF50',\n  },\n  filterButtonText: {\n    fontSize: 14,\n    color: '#666',\n  },\n  activeFilterButtonText: {\n    color: '#fff',\n  },\n  sortContainer: {\n    paddingRight: 20,\n  },\n  sortButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  sortButtonText: {\n    fontSize: 14,\n    color: '#666',\n  },\n  resultsList: {\n    flex: 1,\n    padding: 20,\n  },\n  resultsHeader: {\n    marginBottom: 15,\n  },\n  resultsCount: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n  },\n  workshopCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  workshopHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  workshopInfo: {\n    flex: 1,\n  },\n  workshopName: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 4,\n  },\n  workshopAddress: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 8,\n  },\n  workshopMeta: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  distance: {\n    fontSize: 14,\n    color: '#666',\n  },\n  rating: {\n    fontSize: 14,\n    color: '#666',\n  },\n  workshopStatus: {\n    alignItems: 'center',\n    gap: 4,\n  },\n  statusIndicator: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  workshopDetails: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n  },\n  openHours: {\n    fontSize: 14,\n    color: '#666',\n  },\n  phone: {\n    fontSize: 14,\n    color: '#666',\n  },\n  servicesContainer: {\n    marginBottom: 12,\n  },\n  servicesTitle: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#333',\n    marginBottom: 8,\n  },\n  servicesList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  serviceTag: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f8f9fa',\n    borderRadius: 16,\n    paddingHorizontal: 10,\n    paddingVertical: 4,\n    gap: 4,\n  },\n  serviceTagText: {\n    fontSize: 12,\n    color: '#666',\n  },\n  specialtiesContainer: {\n    marginBottom: 8,\n  },\n  specialtiesTitle: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#333',\n    marginBottom: 8,\n  },\n  specialtiesList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  specialtyTag: {\n    backgroundColor: '#e3f2fd',\n    color: '#1976d2',\n    borderRadius: 12,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    fontSize: 12,\n  },\n  emptyState: {\n    alignItems: 'center',\n    paddingVertical: 60,\n  },\n  emptyStateText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#666',\n    marginTop: 16,\n    marginBottom: 8,\n  },\n  emptyStateSubtext: {\n    fontSize: 14,\n    color: '#999',\n    textAlign: 'center',\n  },\n});\n\nexport default WorkshopSearchScreen;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, Alert } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Ionicons } from '@expo/vector-icons';\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport type { RouteProp } from '@react-navigation/native';\nimport type { IntegratedRootStackParamList } from '../../types/integrated-navigation';\n\ntype MaintenanceHistoryScreenNavigationProp = StackNavigationProp<\n  IntegratedRootStackParamList,\n  'MaintenanceHistory'\n>;\n\ntype MaintenanceHistoryScreenRouteProp = RouteProp<\n  IntegratedRootStackParamList,\n  'MaintenanceHistory'\n>;\n\ninterface MaintenanceRecord {\n  id: string;\n  date: string;\n  serviceName: string;\n  workshopName: string;\n  cost: number;\n  mileage: number;\n  status: 'completed' | 'cancelled' | 'scheduled';\n  serviceType: 'routine' | 'repair' | 'emergency';\n  description: string;\n  parts: Part[];\n  nextMaintenanceDate?: string;\n  nextMaintenanceMileage?: number;\n  invoiceNumber: string;\n  technician: string;\n  duration: string;\n  warranty: string;\n}\n\ninterface Part {\n  name: string;\n  partNumber: string;\n  quantity: number;\n  unitPrice: number;\n}\n\ninterface Vehicle {\n  id: string;\n  name: string;\n  model: string;\n  year: number;\n  totalMileage: number;\n}\n\nconst MaintenanceHistoryScreen: React.FC = () => {\n  const navigation = useNavigation<MaintenanceHistoryScreenNavigationProp>();\n  const route = useRoute<MaintenanceHistoryScreenRouteProp>();\n  const { vehicleId } = route.params || {};\n\n  const [selectedVehicle, setSelectedVehicle] = useState<string>(vehicleId || '1');\n  const [selectedFilter, setSelectedFilter] = useState<string>('all');\n  const [maintenanceRecords, setMaintenanceRecords] = useState<MaintenanceRecord[]>([]);\n  const [vehicles, setVehicles] = useState<Vehicle[]>([]);\n\n  const mockVehicles: Vehicle[] = [\n    { id: '1', name: '내 소나타', model: '현대 소나타', year: 2022, totalMileage: 45000 },\n    { id: '2', name: '아내 그랜저', model: '현대 그랜저', year: 2023, totalMileage: 22000 },\n  ];\n\n  const mockMaintenanceRecords: MaintenanceRecord[] = [\n    {\n      id: '1',\n      date: '2024-11-15',\n      serviceName: '엔진오일 교환',\n      workshopName: '카고로 정비센터 강남점',\n      cost: 65000,\n      mileage: 44500,\n      status: 'completed',\n      serviceType: 'routine',\n      description: '엔진오일 및 오일필터 교환, 기본 점검',\n      parts: [\n        { name: '엔진오일', partNumber: 'OIL-001', quantity: 4, unitPrice: 12000 },\n        { name: '오일필터', partNumber: 'FILTER-001', quantity: 1, unitPrice: 8000 },\n      ],\n      nextMaintenanceDate: '2025-05-15',\n      nextMaintenanceMileage: 54500,\n      invoiceNumber: 'INV-2024-001',\n      technician: '김정비',\n      duration: '30분',\n      warranty: '6개월 또는 10,000km',\n    },\n    {\n      id: '2',\n      date: '2024-09-20',\n      serviceName: '타이어 교체',\n      workshopName: '스마트카 서비스센터',\n      cost: 320000,\n      mileage: 42000,\n      status: 'completed',\n      serviceType: 'repair',\n      description: '전체 타이어 4개 교체 및 휠 밸런스 조정',\n      parts: [{ name: '타이어', partNumber: 'TIRE-225/60R16', quantity: 4, unitPrice: 75000 }],\n      invoiceNumber: 'INV-2024-002',\n      technician: '박타이어',\n      duration: '1시간 30분',\n      warranty: '2년 또는 60,000km',\n    },\n    {\n      id: '3',\n      date: '2024-07-10',\n      serviceName: '정기점검',\n      workshopName: '현대 서비스센터',\n      cost: 120000,\n      mileage: 38000,\n      status: 'completed',\n      serviceType: 'routine',\n      description: '6개월 정기점검 및 소모품 교체',\n      parts: [\n        { name: '에어필터', partNumber: 'AIR-001', quantity: 1, unitPrice: 15000 },\n        { name: '와이퍼 블레이드', partNumber: 'WIPER-001', quantity: 2, unitPrice: 25000 },\n      ],\n      nextMaintenanceDate: '2025-01-10',\n      nextMaintenanceMileage: 48000,\n      invoiceNumber: 'INV-2024-003',\n      technician: '이정비',\n      duration: '2시간',\n      warranty: '1년 또는 20,000km',\n    },\n    {\n      id: '4',\n      date: '2024-12-25',\n      serviceName: '브레이크 패드 교체',\n      workshopName: '프리미엄 오토케어',\n      cost: 180000,\n      mileage: 45200,\n      status: 'scheduled',\n      serviceType: 'repair',\n      description: '앞뒤 브레이크 패드 교체 예정',\n      parts: [\n        { name: '브레이크 패드(전)', partNumber: 'BRAKE-F001', quantity: 1, unitPrice: 80000 },\n        { name: '브레이크 패드(후)', partNumber: 'BRAKE-R001', quantity: 1, unitPrice: 60000 },\n      ],\n      invoiceNumber: 'SCH-2024-001',\n      technician: '최브레이크',\n      duration: '1시간',\n      warranty: '1년 또는 30,000km',\n    },\n  ];\n\n  const filterOptions = [\n    { id: 'all', name: '전체', icon: 'list-outline' as keyof typeof Ionicons.glyphMap },\n    {\n      id: 'completed',\n      name: '완료',\n      icon: 'checkmark-circle-outline' as keyof typeof Ionicons.glyphMap,\n    },\n    { id: 'scheduled', name: '예정', icon: 'time-outline' as keyof typeof Ionicons.glyphMap },\n    { id: 'routine', name: '정기', icon: 'refresh-outline' as keyof typeof Ionicons.glyphMap },\n    { id: 'repair', name: '수리', icon: 'construct-outline' as keyof typeof Ionicons.glyphMap },\n  ];\n\n  useEffect(() => {\n    setVehicles(mockVehicles);\n    setMaintenanceRecords(mockMaintenanceRecords);\n  }, []);\n\n  const filteredRecords = maintenanceRecords.filter(record => {\n    if (selectedFilter === 'all') return true;\n    if (['completed', 'scheduled', 'cancelled'].includes(selectedFilter)) {\n      return record.status === selectedFilter;\n    }\n    if (['routine', 'repair', 'emergency'].includes(selectedFilter)) {\n      return record.serviceType === selectedFilter;\n    }\n    return true;\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return '#4CAF50';\n      case 'scheduled':\n        return '#FF9800';\n      case 'cancelled':\n        return '#F44336';\n      default:\n        return '#666';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'completed':\n        return '완료';\n      case 'scheduled':\n        return '예정';\n      case 'cancelled':\n        return '취소';\n      default:\n        return status;\n    }\n  };\n\n  const getServiceTypeColor = (type: string) => {\n    switch (type) {\n      case 'routine':\n        return '#2196F3';\n      case 'repair':\n        return '#FF9800';\n      case 'emergency':\n        return '#F44336';\n      default:\n        return '#666';\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return amount.toLocaleString('ko-KR') + '원';\n  };\n\n  const handleRecordPress = (record: MaintenanceRecord) => {\n    const totalPartsCost = record.parts.reduce(\n      (sum, part) => sum + part.quantity * part.unitPrice,\n      0\n    );\n    const laborCost = record.cost - totalPartsCost;\n\n    Alert.alert(\n      record.serviceName,\n      `정비소: ${record.workshopName}\\n날짜: ${record.date}\\n주행거리: ${record.mileage.toLocaleString()}km\\n\\n작업 내용:\\n${record.description}\\n\\n부품비: ${formatCurrency(totalPartsCost)}\\n공임: ${formatCurrency(laborCost)}\\n총 비용: ${formatCurrency(record.cost)}\\n\\n담당자: ${record.technician}\\n소요시간: ${record.duration}\\n보증기간: ${record.warranty}`,\n      [\n        { text: '닫기', style: 'cancel' },\n        ...(record.status === 'scheduled'\n          ? [\n              { text: '예약 변경', onPress: () => navigation.navigate('MaintenanceBooking', {}) },\n              {\n                text: '예약 취소',\n                style: 'destructive' as const,\n                onPress: () => Alert.alert('예약 취소', '예약이 취소되었습니다.'),\n              },\n            ]\n          : []),\n        {\n          text: '영수증 보기',\n          onPress: () => Alert.alert('영수증', `영수증 번호: ${record.invoiceNumber}`),\n        },\n      ]\n    );\n  };\n\n  const selectedVehicleInfo = vehicles.find(v => v.id === selectedVehicle);\n  const completedRecords = filteredRecords.filter(r => r.status === 'completed');\n  const totalMaintenanceCost = completedRecords.reduce((sum, record) => sum + record.cost, 0);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity style={styles.backButton} onPress={() => navigation.goBack()}>\n          <Ionicons name=\"arrow-back\" size={24} color=\"#333\" />\n        </TouchableOpacity>\n        <Text style={styles.headerTitle}>정비 이력</Text>\n        <TouchableOpacity style={styles.exportButton}>\n          <Ionicons name=\"download-outline\" size={24} color=\"#333\" />\n        </TouchableOpacity>\n      </View>\n\n      {/* 차량 선택 */}\n      <View style={styles.vehicleSelector}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={styles.vehicleButtons}>\n            {vehicles.map(vehicle => (\n              <TouchableOpacity\n                key={vehicle.id}\n                style={[\n                  styles.vehicleButton,\n                  selectedVehicle === vehicle.id && styles.activeVehicleButton,\n                ]}\n                onPress={() => setSelectedVehicle(vehicle.id)}\n              >\n                <Ionicons\n                  name=\"car-outline\"\n                  size={16}\n                  color={selectedVehicle === vehicle.id ? '#fff' : '#666'}\n                />\n                <Text\n                  style={[\n                    styles.vehicleButtonText,\n                    selectedVehicle === vehicle.id && styles.activeVehicleButtonText,\n                  ]}\n                >\n                  {vehicle.name}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </ScrollView>\n      </View>\n\n      {/* 차량 정보 요약 */}\n      {selectedVehicleInfo && (\n        <View style={styles.vehicleSummary}>\n          <View style={styles.summaryRow}>\n            <View style={styles.summaryItem}>\n              <Text style={styles.summaryLabel}>총 주행거리</Text>\n              <Text style={styles.summaryValue}>\n                {selectedVehicleInfo.totalMileage.toLocaleString()}km\n              </Text>\n            </View>\n            <View style={styles.summaryItem}>\n              <Text style={styles.summaryLabel}>총 정비비용</Text>\n              <Text style={styles.summaryValue}>{formatCurrency(totalMaintenanceCost)}</Text>\n            </View>\n            <View style={styles.summaryItem}>\n              <Text style={styles.summaryLabel}>정비 횟수</Text>\n              <Text style={styles.summaryValue}>{completedRecords.length}회</Text>\n            </View>\n          </View>\n        </View>\n      )}\n\n      {/* 필터 */}\n      <View style={styles.filtersContainer}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <View style={styles.filterButtons}>\n            {filterOptions.map(filter => (\n              <TouchableOpacity\n                key={filter.id}\n                style={[\n                  styles.filterButton,\n                  selectedFilter === filter.id && styles.activeFilterButton,\n                ]}\n                onPress={() => setSelectedFilter(filter.id)}\n              >\n                <Ionicons\n                  name={filter.icon}\n                  size={16}\n                  color={selectedFilter === filter.id ? '#fff' : '#666'}\n                />\n                <Text\n                  style={[\n                    styles.filterButtonText,\n                    selectedFilter === filter.id && styles.activeFilterButtonText,\n                  ]}\n                >\n                  {filter.name}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </View>\n        </ScrollView>\n      </View>\n\n      {/* 정비 이력 목록 */}\n      <ScrollView style={styles.recordsList} showsVerticalScrollIndicator={false}>\n        {filteredRecords.length === 0 ? (\n          <View style={styles.emptyState}>\n            <Ionicons name=\"document-text-outline\" size={48} color=\"#ccc\" />\n            <Text style={styles.emptyStateText}>정비 이력이 없습니다</Text>\n            <Text style={styles.emptyStateSubtext}>첫 번째 정비를 예약해보세요</Text>\n            <TouchableOpacity\n              style={styles.bookingButton}\n              onPress={() => navigation.navigate('MaintenanceBooking', {})}\n            >\n              <Text style={styles.bookingButtonText}>정비 예약하기</Text>\n            </TouchableOpacity>\n          </View>\n        ) : (\n          <View style={styles.recordsContainer}>\n            {filteredRecords.map(record => (\n              <TouchableOpacity\n                key={record.id}\n                style={styles.recordCard}\n                onPress={() => handleRecordPress(record)}\n              >\n                <View style={styles.recordHeader}>\n                  <View style={styles.recordInfo}>\n                    <Text style={styles.serviceName}>{record.serviceName}</Text>\n                    <Text style={styles.workshopName}>{record.workshopName}</Text>\n                  </View>\n                  <View style={styles.recordStatus}>\n                    <View\n                      style={[\n                        styles.statusBadge,\n                        { backgroundColor: getStatusColor(record.status) },\n                      ]}\n                    >\n                      <Text style={styles.statusText}>{getStatusText(record.status)}</Text>\n                    </View>\n                    <View\n                      style={[\n                        styles.typeBadge,\n                        { backgroundColor: getServiceTypeColor(record.serviceType) },\n                      ]}\n                    >\n                      <Text style={styles.typeText}>\n                        {record.serviceType === 'routine'\n                          ? '정기'\n                          : record.serviceType === 'repair'\n                            ? '수리'\n                            : '응급'}\n                      </Text>\n                    </View>\n                  </View>\n                </View>\n\n                <View style={styles.recordDetails}>\n                  <View style={styles.detailRow}>\n                    <Text style={styles.detailLabel}>📅 {record.date}</Text>\n                    <Text style={styles.detailLabel}>🛣 {record.mileage.toLocaleString()}km</Text>\n                  </View>\n                  <View style={styles.detailRow}>\n                    <Text style={styles.costText}>💰 {formatCurrency(record.cost)}</Text>\n                    {record.nextMaintenanceDate && (\n                      <Text style={styles.nextMaintenanceText}>\n                        다음 정비: {record.nextMaintenanceDate}\n                      </Text>\n                    )}\n                  </View>\n                </View>\n\n                <Text style={styles.description} numberOfLines={2}>\n                  {record.description}\n                </Text>\n\n                {record.parts.length > 0 && (\n                  <View style={styles.partsContainer}>\n                    <Text style={styles.partsTitle}>교체 부품:</Text>\n                    <View style={styles.partsList}>\n                      {record.parts.slice(0, 2).map((part, index) => (\n                        <Text key={index} style={styles.partItem}>\n                          • {part.name} x{part.quantity}\n                        </Text>\n                      ))}\n                      {record.parts.length > 2 && (\n                        <Text style={styles.morePartsText}>\n                          외 {record.parts.length - 2}개 부품\n                        </Text>\n                      )}\n                    </View>\n                  </View>\n                )}\n              </TouchableOpacity>\n            ))}\n          </View>\n        )}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    backgroundColor: '#fff',\n    borderBottomWidth: 1,\n    borderBottomColor: '#e9ecef',\n  },\n  backButton: {\n    padding: 8,\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n  },\n  exportButton: {\n    padding: 8,\n  },\n  vehicleSelector: {\n    backgroundColor: '#fff',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e9ecef',\n  },\n  vehicleButtons: {\n    flexDirection: 'row',\n    gap: 10,\n    paddingHorizontal: 20,\n  },\n  vehicleButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f8f9fa',\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    paddingVertical: 10,\n    gap: 8,\n  },\n  activeVehicleButton: {\n    backgroundColor: '#4CAF50',\n  },\n  vehicleButtonText: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#666',\n  },\n  activeVehicleButtonText: {\n    color: '#fff',\n  },\n  vehicleSummary: {\n    backgroundColor: '#fff',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e9ecef',\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n  },\n  summaryItem: {\n    alignItems: 'center',\n  },\n  summaryLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n  summaryValue: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#333',\n  },\n  filtersContainer: {\n    backgroundColor: '#fff',\n    paddingVertical: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#e9ecef',\n  },\n  filterButtons: {\n    flexDirection: 'row',\n    gap: 10,\n    paddingHorizontal: 20,\n  },\n  filterButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#f8f9fa',\n    borderRadius: 20,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    gap: 6,\n  },\n  activeFilterButton: {\n    backgroundColor: '#4CAF50',\n  },\n  filterButtonText: {\n    fontSize: 14,\n    color: '#666',\n  },\n  activeFilterButtonText: {\n    color: '#fff',\n  },\n  recordsList: {\n    flex: 1,\n    padding: 20,\n  },\n  recordsContainer: {\n    gap: 16,\n  },\n  recordCard: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  recordHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  recordInfo: {\n    flex: 1,\n  },\n  serviceName: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: 4,\n  },\n  workshopName: {\n    fontSize: 14,\n    color: '#666',\n  },\n  recordStatus: {\n    alignItems: 'flex-end',\n    gap: 4,\n  },\n  statusBadge: {\n    borderRadius: 12,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: '#fff',\n  },\n  typeBadge: {\n    borderRadius: 8,\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n  },\n  typeText: {\n    fontSize: 10,\n    fontWeight: '500',\n    color: '#fff',\n  },\n  recordDetails: {\n    marginBottom: 12,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  detailLabel: {\n    fontSize: 14,\n    color: '#666',\n  },\n  costText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#4CAF50',\n  },\n  nextMaintenanceText: {\n    fontSize: 12,\n    color: '#FF9800',\n  },\n  description: {\n    fontSize: 14,\n    color: '#666',\n    lineHeight: 20,\n    marginBottom: 12,\n  },\n  partsContainer: {\n    backgroundColor: '#f8f9fa',\n    borderRadius: 8,\n    padding: 12,\n  },\n  partsTitle: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#333',\n    marginBottom: 8,\n  },\n  partsList: {\n    gap: 4,\n  },\n  partItem: {\n    fontSize: 12,\n    color: '#666',\n  },\n  morePartsText: {\n    fontSize: 12,\n    color: '#999',\n    fontStyle: 'italic',\n  },\n  emptyState: {\n    alignItems: 'center',\n    paddingVertical: 60,\n  },\n  emptyStateText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#666',\n    marginTop: 16,\n    marginBottom: 8,\n  },\n  emptyStateSubtext: {\n    fontSize: 14,\n    color: '#999',\n    textAlign: 'center',\n    marginBottom: 24,\n  },\n  bookingButton: {\n    backgroundColor: '#4CAF50',\n    borderRadius: 12,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n  },\n  bookingButtonText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#fff',\n  },\n});\n\nexport default MaintenanceHistoryScreen;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  SafeAreaView,\n  Alert,\n  RefreshControl,\n} from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as Notifications from 'expo-notifications';\n\nimport { IntegratedRootStackParamList } from '../../types/integrated-navigation';\nimport integratedNavigationService from '../../services/integrated-navigation-service';\nimport {\n  getDiagnosticData,\n  getVehicleStatus,\n  connectToOBD,\n  analyzeMaintenanceNeeds,\n  startVehicleDataStream,\n} from '../../utils/obd-connector';\nimport NotificationPermissionBanner from '../../components/notification-permission-banner';\n\ntype SmartHomeScreenProps = StackNavigationProp<IntegratedRootStackParamList, 'Navigation'>;\n\ninterface VehicleData {\n  rpm: number;\n  speed: number;\n  engineTemp: number;\n  fuelLevel: number;\n  batteryVoltage?: number;\n  tirePressure?: {\n    frontLeft: number;\n    frontRight: number;\n    rearLeft: number;\n    rearRight: number;\n  };\n  diagnosticTroubleCodes: string[];\n}\n\ninterface MaintenanceAlert {\n  type: 'urgent' | 'recommended' | 'scheduled';\n  message: string;\n  icon: keyof typeof Ionicons.glyphMap;\n  color: string;\n}\n\nexport default function SmartHomeScreen() {\n  const navigation = useNavigation<SmartHomeScreenProps>();\n\n  // 상태 관리\n  const [vehicleData, setVehicleData] = useState<VehicleData | null>(null);\n  const [vehicleStatus, setVehicleStatus] = useState<any>(null);\n  const [maintenanceAlerts, setMaintenanceAlerts] = useState<MaintenanceAlert[]>([]);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState<string>('위치 정보 로딩 중...');\n  const [notificationStatus, setNotificationStatus] = useState<string | null>(null);\n  const [showNotificationBanner, setShowNotificationBanner] = useState(false);\n\n  // OBD 연결 및 초기 데이터 로드\n  useEffect(() => {\n    initializeConnection();\n  }, []);\n\n  // 실시간 데이터 스트리밍\n  useEffect(() => {\n    if (isConnected) {\n      const stopStream = startVehicleDataStream(data => {\n        setVehicleData(data);\n        updateMaintenanceAlerts(data);\n      });\n\n      return stopStream;\n    }\n  }, [isConnected]);\n\n  const initializeConnection = async () => {\n    try {\n      setIsLoading(true);\n\n      // OBD 연결 시도\n      let connected = false;\n      try {\n        connected = await connectToOBD();\n      } catch (obdError) {\n        console.log('OBD 연결 시도 중 오류 발생, 시뮬레이션 모드로 전환:', obdError);\n        // 에러를 로그만 하고 계속 진행 (연결 실패로 간주)\n      }\n\n      setIsConnected(connected);\n\n      // 연결 성공 또는 실패 상관없이 데이터 로드\n      // 연결 실패 시에는 모의 데이터를 사용\n      let diagnosticData;\n      let status;\n\n      if (connected) {\n        // 실제 OBD 데이터 로드 시도\n        try {\n          [diagnosticData, status] = await Promise.all([getDiagnosticData(), getVehicleStatus()]);\n        } catch (dataError) {\n          console.log('OBD 데이터 로드 실패, 모의 데이터 사용:', dataError);\n          // 실패 시 모의 데이터로 대체\n          diagnosticData = getMockDiagnosticData();\n          status = getMockVehicleStatus();\n        }\n      } else {\n        // 모의 데이터 사용\n        diagnosticData = getMockDiagnosticData();\n        status = getMockVehicleStatus();\n      }\n\n      setVehicleData(diagnosticData);\n      setVehicleStatus(status);\n      updateMaintenanceAlerts(diagnosticData);\n\n      // 현재 위치 가져오기\n      loadCurrentLocation();\n    } catch (error) {\n      console.error('초기화 실패:', error);\n      // 실패해도 사용자 경험을 위해 모의 데이터 설정\n      setVehicleData(getMockDiagnosticData());\n      setVehicleStatus(getMockVehicleStatus());\n      updateMaintenanceAlerts(getMockDiagnosticData());\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // 모의 진단 데이터 생성\n  const getMockDiagnosticData = () => {\n    return {\n      rpm: 1200,\n      speed: 0,\n      engineTemp: 85,\n      fuelLevel: 75,\n      batteryVoltage: 12.8,\n      tirePressure: {\n        frontLeft: 32,\n        frontRight: 32,\n        rearLeft: 31,\n        rearRight: 31,\n      },\n      diagnosticTroubleCodes: [],\n    };\n  };\n\n  // 모의 차량 상태 생성\n  const getMockVehicleStatus = () => {\n    return {\n      isEngineRunning: true,\n      isMoving: false,\n      isFuelLow: false,\n      hasDiagnosticCodes: false,\n      batteryHealth: 'good',\n    };\n  };\n\n  const loadCurrentLocation = async () => {\n    try {\n      const location = await integratedNavigationService.getCurrentLocation();\n      // 실제로는 역지오코딩으로 주소 변환\n      setCurrentLocation('서울시 강남구 테헤란로');\n    } catch (error) {\n      setCurrentLocation('위치 정보 없음');\n    }\n  };\n\n  const updateMaintenanceAlerts = (data: any) => {\n    const analysis = analyzeMaintenanceNeeds(data);\n    const alerts: MaintenanceAlert[] = [];\n\n    // 긴급 알림\n    analysis.urgent.forEach(message => {\n      alerts.push({\n        type: 'urgent',\n        message,\n        icon: 'warning',\n        color: '#EF4444',\n      });\n    });\n\n    // 권장 알림\n    analysis.recommended.forEach(message => {\n      alerts.push({\n        type: 'recommended',\n        message,\n        icon: 'information-circle',\n        color: '#F59E0B',\n      });\n    });\n\n    // 정기 점검\n    analysis.scheduled.slice(0, 2).forEach(message => {\n      alerts.push({\n        type: 'scheduled',\n        message,\n        icon: 'time',\n        color: '#6366F1',\n      });\n    });\n\n    setMaintenanceAlerts(alerts);\n  };\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await initializeConnection();\n    setRefreshing(false);\n  }, []);\n\n  const handleQuickAction = (action: string) => {\n    switch (action) {\n      case 'emergency':\n        navigation.navigate('EmergencyService');\n        break;\n      case 'workshop':\n        navigation.navigate('WorkshopSearch', {});\n        break;\n      case 'diagnosis':\n        navigation.navigate('SmartDiagnosis', { vehicleId: 'vehicle_1' });\n        break;\n      case 'navigation':\n        navigation.navigate('Navigation');\n        break;\n    }\n  };\n\n  const getEngineStatusColor = () => {\n    if (!vehicleData) return '#6B7280';\n    if (vehicleData.engineTemp > 105) return '#EF4444';\n    if (vehicleData.engineTemp > 95) return '#F59E0B';\n    return '#10B981';\n  };\n\n  const getFuelLevelColor = () => {\n    if (!vehicleData) return '#6B7280';\n    if (vehicleData.fuelLevel < 20) return '#EF4444';\n    if (vehicleData.fuelLevel < 40) return '#F59E0B';\n    return '#10B981';\n  };\n\n  if (isLoading) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.loadingContainer}>\n          <Ionicons name=\"car-sport\" size={48} color=\"#6366F1\" />\n          <Text style={styles.loadingText}>차량 시스템 연결 중...</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView\n        style={styles.scrollView}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\n      >\n        {/* 헤더 - 현재 위치 및 날씨 */}\n        <View style={styles.header}>\n          <View style={styles.locationContainer}>\n            <Ionicons name=\"location\" size={20} color=\"#6366F1\" />\n            <Text style={styles.locationText}>{currentLocation}</Text>\n          </View>\n          <TouchableOpacity style={styles.settingsButton}>\n            <Ionicons name=\"settings-outline\" size={24} color=\"#6B7280\" />\n          </TouchableOpacity>\n        </View>\n\n        {/* 메인 차량 상태 카드 */}\n        <LinearGradient colors={['#6366F1', '#8B5CF6']} style={styles.mainStatusCard}>\n          <View style={styles.statusHeader}>\n            <Text style={styles.statusTitle}>차량 상태</Text>\n            <View\n              style={[\n                styles.connectionStatus,\n                { backgroundColor: isConnected ? '#10B981' : '#EF4444' },\n              ]}\n            >\n              <Text style={styles.connectionText}>\n                {isConnected ? 'CONNECTED' : 'DISCONNECTED'}\n              </Text>\n            </View>\n          </View>\n\n          <View style={styles.statusGrid}>\n            <View style={styles.statusItem}>\n              <Ionicons name=\"speedometer\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.statusLabel}>속도</Text>\n              <Text style={styles.statusValue}>{vehicleData?.speed || 0} km/h</Text>\n            </View>\n            <View style={styles.statusItem}>\n              <Ionicons name=\"thermometer\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.statusLabel}>엔진온도</Text>\n              <Text style={[styles.statusValue, { color: getEngineStatusColor() }]}>\n                {vehicleData?.engineTemp || 0}°C\n              </Text>\n            </View>\n            <View style={styles.statusItem}>\n              <Ionicons name=\"car-sport\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.statusLabel}>연료</Text>\n              <Text style={[styles.statusValue, { color: getFuelLevelColor() }]}>\n                {vehicleData?.fuelLevel || 0}%\n              </Text>\n            </View>\n            <View style={styles.statusItem}>\n              <Ionicons name=\"battery-charging\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.statusLabel}>배터리</Text>\n              <Text style={styles.statusValue}>{vehicleData?.batteryVoltage || 12.6}V</Text>\n            </View>\n          </View>\n        </LinearGradient>\n\n        {/* 빠른 액션 버튼 */}\n        <View style={styles.quickActions}>\n          <Text style={styles.sectionTitle}>빠른 액션</Text>\n          <View style={styles.actionGrid}>\n            <TouchableOpacity\n              style={[styles.actionButton, { backgroundColor: '#EF4444' }]}\n              onPress={() => handleQuickAction('emergency')}\n            >\n              <Ionicons name=\"warning\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.actionText}>긴급출동</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.actionButton, { backgroundColor: '#10B981' }]}\n              onPress={() => handleQuickAction('workshop')}\n            >\n              <Ionicons name=\"location\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.actionText}>정비소 찾기</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.actionButton, { backgroundColor: '#6366F1' }]}\n              onPress={() => handleQuickAction('diagnosis')}\n            >\n              <Ionicons name=\"analytics\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.actionText}>차량진단</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.actionButton, { backgroundColor: '#8B5CF6' }]}\n              onPress={() => handleQuickAction('navigation')}\n            >\n              <Ionicons name=\"navigate\" size={24} color=\"#FFFFFF\" />\n              <Text style={styles.actionText}>네비게이션</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        {/* 정비 알림 */}\n        {maintenanceAlerts.length > 0 && (\n          <View style={styles.alertsSection}>\n            <Text style={styles.sectionTitle}>정비 알림</Text>\n            {maintenanceAlerts.map((alert, index) => (\n              <TouchableOpacity key={index} style={styles.alertCard}>\n                <Ionicons name={alert.icon} size={20} color={alert.color} />\n                <View style={styles.alertContent}>\n                  <Text style={styles.alertMessage}>{alert.message}</Text>\n                  <Text style={[styles.alertType, { color: alert.color }]}>\n                    {alert.type === 'urgent'\n                      ? '긴급'\n                      : alert.type === 'recommended'\n                        ? '권장'\n                        : '정기점검'}\n                  </Text>\n                </View>\n                <Ionicons name=\"chevron-forward\" size={16} color=\"#9CA3AF\" />\n              </TouchableOpacity>\n            ))}\n          </View>\n        )}\n\n        {/* 실시간 네비게이션 미리보기 */}\n        <TouchableOpacity\n          style={styles.navigationPreview}\n          onPress={() => navigation.navigate('Navigation')}\n        >\n          <View style={styles.navHeader}>\n            <Ionicons name=\"map\" size={24} color=\"#6366F1\" />\n            <Text style={styles.navTitle}>스마트 네비게이션</Text>\n            <Ionicons name=\"chevron-forward\" size={20} color=\"#9CA3AF\" />\n          </View>\n          <Text style={styles.navDescription}>실시간 교통정보와 최적 경로를 제공합니다</Text>\n        </TouchableOpacity>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#6B7280',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 16,\n    backgroundColor: '#FFFFFF',\n  },\n  locationContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  locationText: {\n    marginLeft: 8,\n    fontSize: 16,\n    fontWeight: '500',\n    color: '#1F2937',\n  },\n  settingsButton: {\n    padding: 8,\n  },\n  mainStatusCard: {\n    margin: 20,\n    padding: 24,\n    borderRadius: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 4,\n  },\n  statusHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  statusTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  connectionStatus: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  connectionText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  statusGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  statusItem: {\n    width: '48%',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  statusLabel: {\n    fontSize: 12,\n    color: '#E5E7EB',\n    marginTop: 8,\n  },\n  statusValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginTop: 4,\n  },\n  quickActions: {\n    paddingHorizontal: 20,\n    marginBottom: 24,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1F2937',\n    marginBottom: 16,\n  },\n  actionGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n  },\n  actionButton: {\n    width: '48%',\n    aspectRatio: 1.5,\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  actionText: {\n    marginTop: 8,\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#FFFFFF',\n  },\n  alertsSection: {\n    paddingHorizontal: 20,\n    marginBottom: 24,\n  },\n  alertCard: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FFFFFF',\n    padding: 16,\n    borderRadius: 12,\n    marginBottom: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.05,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  alertContent: {\n    flex: 1,\n    marginLeft: 12,\n  },\n  alertMessage: {\n    fontSize: 14,\n    color: '#1F2937',\n    marginBottom: 4,\n  },\n  alertType: {\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  navigationPreview: {\n    marginHorizontal: 20,\n    marginBottom: 24,\n    backgroundColor: '#FFFFFF',\n    padding: 20,\n    borderRadius: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.05,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  navHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  navTitle: {\n    flex: 1,\n    marginLeft: 12,\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1F2937',\n  },\n  navDescription: {\n    fontSize: 14,\n    color: '#6B7280',\n  },\n});\n","import React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { StatusBar } from 'expo-status-bar';\nimport Icon from 'react-native-vector-icons/Feather';\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport * as Notifications from 'expo-notifications';\nimport 'react-native-gesture-handler';\n\n// 개발 모드 경고 필터 적용\nimport './src/utils/dev-warning-filter';\n\n// Provider imports\nimport { SessionProvider, useSession } from './src/providers/auth-provider';\n\n// Screen imports\nimport WelcomeScreen from './src/screens/auth/welcome-screen';\nimport LoginScreen from './src/screens/auth/login-screen';\nimport SignupScreen from './src/screens/auth/signup-screen';\nimport VehiclesScreen from './src/screens/vehicles/vehicles-screen';\nimport ProfileScreen from './src/screens/profile/profile-screen';\nimport VehicleDetailScreen from './src/screens/vehicles/vehicle-detail-screen';\nimport AddVehicleScreen from './src/screens/vehicles/add-vehicle-screen';\nimport WorkshopListScreen from './src/screens/booking/workshop-list-screen';\nimport BookingDetailScreen from './src/screens/booking/booking-detail-screen';\nimport ServiceHistoryScreen from './src/screens/history/service-history-screen';\nimport NotificationsScreen from './src/screens/notifications/notifications-screen';\nimport LiveTrackingScreen from './src/screens/tracking/live-tracking-screen';\n\n// 새로운 통합 화면들\nimport IntegratedNavigationScreen from './src/screens/navigation/integrated-navigation-screen';\nimport ServiceHubScreen from './src/screens/service/service-hub-screen';\nimport EmergencyServiceScreen from './src/screens/service/emergency-service-screen';\nimport MapDetailScreen from './src/screens/navigation/map-detail-screen';\nimport SmartDiagnosisScreen from './src/screens/service/smart-diagnosis-screen';\nimport MaintenanceBookingScreen from './src/screens/service/maintenance-booking-screen';\nimport WorkshopSearchScreen from './src/screens/service/workshop-search-screen';\nimport MaintenanceHistoryScreen from './src/screens/service/maintenance-history-screen';\nimport SmartHomeScreen from './src/screens/home/smart-home-screen';\n\n// Configure notifications\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\n// Initialize React Query\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      retry: 2,\n      staleTime: 5 * 60 * 1000, // 5 minutes\n    },\n  },\n});\n\n// Navigator type definitions\nexport type RootStackParamList = {\n  Auth: undefined;\n  Main: undefined;\n  // 통합된 네비게이션 관련\n  Navigation: undefined;\n  MapDetail: {\n    destination?: {\n      latitude: number;\n      longitude: number;\n      name: string;\n    };\n  };\n\n  // 정비 서비스 관련\n  ServiceHub: undefined;\n  MaintenanceBooking: { serviceType?: string };\n  WorkshopSearch: {\n    currentLocation?: { latitude: number; longitude: number };\n    serviceType?: string;\n  };\n  EmergencyService: undefined;\n  MaintenanceHistory: { vehicleId?: string };\n  SmartDiagnosis: { vehicleId: string };\n\n  // 기존 기능들\n  VehicleDetail: { id: string };\n  AddVehicle: undefined;\n  WorkshopList: { serviceType?: string };\n  BookingDetail: { id: string };\n  ServiceHistory: { vehicleId: string };\n  Notifications: undefined;\n  LiveTracking: { bookingId: string };\n};\n\nexport type AuthStackParamList = {\n  Welcome: undefined;\n  Login: undefined;\n  Signup: undefined;\n};\n\nexport type MainTabParamList = {\n  네비게이션: undefined;\n  서비스허브: undefined;\n  차량관리: undefined;\n  프로필: undefined;\n};\n\n// Create navigators\nconst RootStack = createStackNavigator<RootStackParamList>();\nconst AuthStack = createStackNavigator<AuthStackParamList>();\nconst Tab = createBottomTabNavigator<MainTabParamList>();\n\n// Auth Stack\nfunction AuthStackScreen() {\n  return (\n    <AuthStack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <AuthStack.Screen name=\"Welcome\" component={WelcomeScreen} />\n      <AuthStack.Screen name=\"Login\" component={LoginScreen} />\n      <AuthStack.Screen name=\"Signup\" component={SignupScreen} />\n    </AuthStack.Navigator>\n  );\n}\n\n// Main Tab Navigator\nfunction MainTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ color, size }) => {\n          let iconName = 'home';\n\n          if (route.name === '네비게이션') {\n            iconName = 'map';\n          } else if (route.name === '서비스허브') {\n            iconName = 'settings';\n          } else if (route.name === '차량관리') {\n            iconName = 'truck';\n          } else if (route.name === '프로필') {\n            iconName = 'user';\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: '#6366F1',\n        tabBarInactiveTintColor: '#6B7280',\n        headerStyle: {\n          backgroundColor: '#FFFFFF',\n          elevation: 0,\n          shadowOpacity: 0,\n          borderBottomWidth: 1,\n          borderBottomColor: '#E5E7EB',\n        },\n        headerTintColor: '#1F2937',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      })}\n    >\n      <Tab.Screen\n        name=\"네비게이션\"\n        component={SmartHomeScreen}\n        options={{\n          headerTitle: '스마트 카 플랫폼',\n        }}\n      />\n      <Tab.Screen\n        name=\"서비스허브\"\n        component={ServiceHubScreen}\n        options={{\n          headerTitle: '서비스 허브',\n        }}\n      />\n      <Tab.Screen\n        name=\"차량관리\"\n        component={VehiclesScreen}\n        options={{\n          headerTitle: '내 차량',\n        }}\n      />\n      <Tab.Screen\n        name=\"프로필\"\n        component={ProfileScreen}\n        options={{\n          headerTitle: '내 정보',\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\n// Loading Screen\nfunction LoadingScreen() {\n  return (\n    <View style={styles.loadingContainer}>\n      <ActivityIndicator size=\"large\" color=\"#6366F1\" />\n      <Text style={styles.loadingText}>로딩 중...</Text>\n    </View>\n  );\n}\n\n// Root Navigator\nfunction RootNavigator() {\n  const { isLoading } = useSession();\n\n  useEffect(() => {\n    // Request notification permissions with improved handling\n    const requestPermissions = async () => {\n      try {\n        // 권한 상태 확인\n        const { status: existingStatus } = await Notifications.getPermissionsAsync();\n\n        // 아직 결정되지 않은 경우에만 요청\n        if (existingStatus !== 'granted' && existingStatus !== 'denied') {\n          const { status } = await Notifications.requestPermissionsAsync();\n          if (status !== 'granted') {\n            console.warn('Notification permissions not granted');\n          }\n        } else if (existingStatus === 'denied') {\n          // 이미 거부된 경우 로그만 남김\n          console.warn('Notification permissions were previously denied');\n        }\n      } catch (error) {\n        console.error('Error requesting notification permissions:', error);\n      }\n    };\n\n    requestPermissions();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingScreen />;\n  }\n\n  return (\n    <RootStack.Navigator\n      screenOptions={{\n        headerShown: false,\n        cardStyle: { backgroundColor: 'white' },\n      }}\n    >\n      {/* 로그인 여부와 상관없이 메인 탭을 첫 화면으로 표시 */}\n      <RootStack.Screen name=\"Main\" component={MainTabs} />\n\n      {/* 로그인 화면 */}\n      <RootStack.Screen name=\"Auth\" component={AuthStackScreen} />\n\n      {/* 나머지 스크린들 */}\n      <RootStack.Screen\n        name=\"VehicleDetail\"\n        component={VehicleDetailScreen}\n        options={{\n          headerShown: true,\n          title: '차량 상세',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"AddVehicle\"\n        component={AddVehicleScreen}\n        options={{\n          headerShown: true,\n          title: '차량 등록',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"WorkshopList\"\n        component={WorkshopListScreen}\n        options={{\n          headerShown: true,\n          title: '정비소 선택',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"BookingDetail\"\n        component={BookingDetailScreen}\n        options={{\n          headerShown: true,\n          title: '예약 상세',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"ServiceHistory\"\n        component={ServiceHistoryScreen}\n        options={{\n          headerShown: true,\n          title: '정비 이력',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"Notifications\"\n        component={NotificationsScreen}\n        options={{\n          headerShown: true,\n          title: '알림',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"LiveTracking\"\n        component={LiveTrackingScreen}\n        options={{\n          headerShown: true,\n          title: '실시간 추적',\n          headerBackTitle: '뒤로',\n        }}\n      />\n\n      {/* 새로운 통합 서비스 화면들 */}\n      <RootStack.Screen\n        name=\"Navigation\"\n        component={IntegratedNavigationScreen}\n        options={{\n          headerShown: true,\n          title: '스마트 네비게이션',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"EmergencyService\"\n        component={EmergencyServiceScreen}\n        options={{\n          headerShown: true,\n          title: '긴급 서비스',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"MapDetail\"\n        component={MapDetailScreen}\n        options={{\n          headerShown: true,\n          title: '지도 상세',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"SmartDiagnosis\"\n        component={SmartDiagnosisScreen}\n        options={{\n          headerShown: true,\n          title: '스마트 진단',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"MaintenanceBooking\"\n        component={MaintenanceBookingScreen}\n        options={{\n          headerShown: true,\n          title: '정비 예약',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"WorkshopSearch\"\n        component={WorkshopSearchScreen}\n        options={{\n          headerShown: true,\n          title: '정비소 검색',\n          headerBackTitle: '뒤로',\n        }}\n      />\n      <RootStack.Screen\n        name=\"MaintenanceHistory\"\n        component={MaintenanceHistoryScreen}\n        options={{\n          headerShown: true,\n          title: '정비 이력',\n          headerBackTitle: '뒤로',\n        }}\n      />\n    </RootStack.Navigator>\n  );\n}\n\n// Main App Component\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <SessionProvider>\n        <NavigationContainer>\n          <RootNavigator />\n          <StatusBar style=\"auto\" />\n        </NavigationContainer>\n      </SessionProvider>\n    </QueryClientProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F9FAFB',\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: '#6B7280',\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [552], () => (__webpack_require__(7010)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["AuthContext","createContext","signIn","_signIn","_asyncToGenerator","apply","arguments","signUp","_signUp","signOut","_signOut","session","user","isLoading","error","useSession","useContext","setStorageItemAsync","_x","_x2","_setStorageItemAsync","key","value","Platform","OS","storage","globalThis","localStorage","removeItem","setItem","e","console","SecureStore","deleteItemAsync","setItemAsync","getStorageItemAsync","_x3","_getStorageItemAsync","getItemAsync","getItem","useStorageState","_useAsyncState","initialValue","length","undefined","useReducer","state","useAsyncState","_useAsyncState2","_slicedToArray","setState","useEffect","setValue","useCallback","_ref2","_x4","SessionProvider","_ref3","children","_useStorageState","_useStorageState2","_useStorageState2$","isStorageLoading","setSession","_React$useState","React","_React$useState2","setUser","_React$useState3","_React$useState4","setError","_React$useState5","_React$useState6","isInitialized","setIsInitialized","loadUser","_ref4","userStr","JSON","parse","guestUser","id","name","email","phone","memberSince","Date","toISOString","totalServices","activeBookings","apiClient","setAuthToken","clearAuthToken","_ref5","password","response","post","token","stringify","err","_error$response","_error$response$data","data","message","_x5","_x6","_ref6","_error2$response","_error2$response$data","_x7","warn","_jsx","Provider","Dimensions","get","width","WelcomeScreen","navigation","useNavigation","SafeAreaView","style","styles","container","_jsxs","View","content","logoSection","logoContainer","Icon","size","color","Text","appName","tagline","featuresSection","featureItem","featureIcon","featureContent","featureTitle","featureDescription","buttonSection","TouchableOpacity","primaryButton","onPress","navigate","primaryButtonText","secondaryButton","secondaryButtonText","StyleSheet","create","flex","backgroundColor","paddingHorizontal","justifyContent","alignItems","marginTop","height","borderRadius","marginBottom","fontSize","fontWeight","textAlign","flexDirection","marginRight","lineHeight","paddingVertical","LoginScreen","_useSession","authError","_useState","useState","_useState2","setEmail","_useState3","_useState4","setPassword","_useState5","_useState6","showPassword","setShowPassword","_useState7","_useState8","setIsLoading","_useState9","_useState0","errors","setErrors","handleLogin","_ref","newErrors","test","Object","keys","validateForm","toLowerCase","trim","Alert","alert","text","handleSocialLogin","provider","KeyboardAvoidingView","behavior","keyboardView","ScrollView","contentContainerStyle","scrollContent","showsVerticalScrollIndicator","keyboardShouldPersistTaps","backButton","goBack","titleSection","title","subtitle","formSection","inputContainer","inputLabel","inputWrapper","inputError","inputIcon","TextInput","input","placeholder","placeholderTextColor","onChangeText","keyboardType","autoCapitalize","autoCorrect","editable","errorText","secureTextEntry","eyeButton","forgotPasswordButton","disabled","forgotPasswordText","loginButton","disabledButton","ActivityIndicator","loginButtonText","dividerContainer","divider","dividerText","socialButtons","socialButton","signupContainer","signupText","signupLink","flexGrow","borderWidth","borderColor","padding","marginLeft","alignSelf","opacity","marginHorizontal","SignupScreen","confirmPassword","formData","setFormData","showConfirmPassword","setShowConfirmPassword","_useState1","_useState10","agreedToTerms","setAgreedToTerms","handleSignup","replace","terms","formatPhoneNumber","numbers","slice","_objectSpread","termsContainer","checkbox","checkboxChecked","termsText","termsLink","signupButton","signupButtonText","loginContainer","loginText","loginLink","paddingBottom","textDecorationLine","VehiclesScreen","ProfileScreen","VehicleDetailScreen","AddVehicleScreen","WorkshopListScreen","BookingDetailScreen","ServiceHistoryScreen","NotificationsScreen","LiveTrackingScreen","API_BASE_URL","process","EXPO_PUBLIC_API_URL","mockResponse","Promise","resolve","setTimeout","IntegratedNavigationService","_createClass","_classCallCheck","_defineProperty","_getCurrentLocation","reject","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","enableHighAccuracy","timeout","maximumAge","_searchLocations","query","currentLocation","this","getMockSearchResults","_searchNearbyWorkshops","location","getMockWorkshops","_calculateRoute","origin","destination","getMockRoute","_getVehicleDiagnostics","vehicleId","getMockDiagnosticData","_getFavoriteLocations","getMockFavoriteLocations","address","category","rating","phoneNumber","_addFavoriteLocation","distance","isOpen","Math","sqrt","pow","round","duration","polyline","trafficStatus","timestamp","engineStatus","batteryLevel","fuelLevel","mileage","oilPressure","coolantTemperature","tirePressure","frontLeft","frontRight","rearLeft","rearRight","diagnosticCodes","maintenanceRecommendations","type","severity","description","estimatedCost","mileageLimit","IntegratedNavigationScreen","searchQuery","setSearchQuery","isSearching","setIsSearching","searchResults","setSearchResults","setCurrentLocation","favoriteLocations","setFavoriteLocations","nearbyWorkshops","setNearbyWorkshops","_useState11","_useState12","setSelectedDestination","_useState13","_useState14","activeTab","setActiveTab","getCurrentLocation","integratedNavigationService","workshops","searchNearbyWorkshops","loadFavorites","favorites","getFavoriteLocations","handleSearch","results","searchLocations","handleSelectLocation","handleAddToFavorites","addFavoriteLocation","header","emergencyButton","Ionicons","emergencyText","searchContainer","searchInputContainer","searchInput","onSubmitEditing","returnKeyType","searchButton","searchButtonText","quickActions","quickActionButton","quickActionText","tabContainer","tab","tabText","activeTabText","FlatList","getCurrentData","renderItem","item","locationItem","locationInfo","locationHeader","locationName","ratingContainer","locationAddress","workshopActions","actionButton","log","actionText","keyExtractor","resultsList","ListEmptyComponent","emptyContainer","emptyText","borderBottomWidth","borderBottomColor","gap","connectToOBD","_connectToOBD","obdLib","getDiagnosticData","_getDiagnosticData","rpm","speed","engineTemp","diagnosticTroubleCodes","batteryVoltage","getVehicleStatus","_getVehicleStatus","batteryHealth","isEngineRunning","isMoving","isFuelLow","hasDiagnosticCodes","ServiceHubScreen","diagnosticData","setDiagnosticData","loadDiagnosticData","diagnostics","transformedData","getVehicleDiagnostics","fallbackError","vehicleStatusCard","statusHeader","statusTitle","statusIndicator","status","getStatusColor","statusText","getStatusText","statusGrid","statusItem","statusLabel","statusValue","recommendationBanner","recommendationText","servicesContainer","sectionTitle","servicesGrid","icon","isEmergency","map","service","serviceCard","emergencyServiceCard","serviceId","handleServiceSelection","serviceIconContainer","emergencyIconContainer","serviceName","emergencyServiceName","serviceDescription","emergencyServiceDescription","emergencyBadge","emergencyBadgeText","recentServicesContainer","historyCard","historyHeader","historyTitle","historyDate","historyDescription","historyFooter","historyWorkshop","historyCost","viewAllButton","viewAllText","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","flexWrap","top","right","EmergencyServiceScreen","selectedService","setSelectedService","isRequestingService","setIsRequestingService","getServiceIcon","handleServiceRequest","estimatedArrival","cost","toLocaleString","processServiceRequest","handleCall","cleanPhoneNumber","Linking","openURL","handleEmergencyCall","number","emergencyCallsContainer","emergencyCallsRow","emergencyCallButton","emergencyCallText","emergencyCallSubText","locationContainer","locationTitle","locationText","toFixed","locationError","selectedServiceCard","serviceHeader","serviceInfo","serviceProvider","serviceActions","callButton","serviceDetails","serviceDetailItem","serviceDetailText","loadingContainer","loadingText","noticeContainer","noticeHeader","noticeTitle","noticeText","minWidth","fontFamily","MapDetailScreen","route","useRoute","calculatedRoute","setCalculatedRoute","isCalculatingRoute","setIsCalculatingRoute","isNavigating","setIsNavigating","params","initializeMap","dest","calculateRoute","now","mapContainer","mapPlaceholder","mapPlaceholderText","destinationInfo","destinationName","routeInfoContainer","calculatingText","routeHeader","routeDetails","routeDistance","routeDuration","getTrafficColor","trafficStatusText","getTrafficText","routePath","pathItem","pathText","pathLine","navigationStatus","navigationHeader","navigationText","navigationSubText","actionButtonsContainer","stopNavigationButton","stopNavigationText","startNavigationButton","startNavigationText","actionButtonsRow","actionButtonText","borderTopWidth","borderTopColor","paddingLeft","marginVertical","SmartDiagnosisScreen","isRunningDiagnosis","setIsRunningDiagnosis","runNewDiagnosis","_onPress","getSeverityColor","getSeverityText","diagnosisProgress","diagnosisProgressText","statusSummaryCard","statusInfo","statusTimestamp","statusBadge","statusBadgeText","metricsContainer","metricsGrid","metricCard","metricLabel","metricValue","metricBar","tireContainer","tireGrid","tireItem","tireLabel","tireValue","diagnosticCodesContainer","code","index","diagnosticCodeItem","diagnosticCodeText","recommendationsContainer","recommendation","recommendationCard","recommendationHeader","recommendationInfo","recommendationType","toUpperCase","severityBadge","severityText","recommendationDescription","recommendationFooter","recommendationCost","bookingButton","serviceType","handleMaintenanceBooking","bookingButtonText","newDiagnosisButton","newDiagnosisButtonText","errorContainer","retryButton","retryButtonText","headerTitle","section","selectedCard","serviceIcon","serviceDuration","servicePrice","workshopCard","disabledCard","workshopInfo","workshopName","disabledText","workshopDetails","workshopDistance","workshopRating","workshopStatus","unavailableStatus","dateContainer","dateCard","selectedDateCard","dateText","dayText","selectedDateText","timeGrid","timeCard","selectedTimeCard","timeText","selectedTimeText","footer","memoContainer","memoInput","minHeight","noTimesMessage","selectedServices","setSelectedServices","selectedWorkshop","setSelectedWorkshop","selectedDate","setSelectedDate","selectedTime","setSelectedTime","memo","setMemo","maintenanceServices","estimatedDuration","price","availableDates","dates","toLocaleDateString","getHours","getMinutes","isAfter4PM","startDay","i","date","setDate","getDate","dateString","split","push","generateAvailableDates","availableTimes","getAvailableTimesForDate","currentHour","filter","time","parseInt","getCategoryColor","includes","concat","_toConsumableArray","available","services","workshop","horizontal","showsHorizontalScrollIndicator","month","day","weekday","multiline","numberOfLines","textAlignVertical","selectedServiceNames","join","memoText","mapButton","filtersContainer","filterButtons","filterButton","activeFilterButton","filterButtonText","activeFilterButtonText","sortContainer","paddingRight","sortButton","sortButtonText","resultsHeader","resultsCount","workshopHeader","workshopAddress","workshopMeta","openHours","servicesTitle","servicesList","serviceTag","serviceTagText","specialtiesContainer","specialtiesTitle","specialtiesList","specialtyTag","emptyState","emptyStateText","emptyStateSubtext","selectedFilter","setSelectedFilter","sortBy","setSortBy","setWorkshops","mockWorkshops","reviewCount","specialties","images","filteredWorkshops","matchesSearch","matchesFilter","some","sortedWorkshops","sort","a","b","parseFloat","localeCompare","options","nextIndex","indexOf","handleWorkshopPress","specialty","exportButton","vehicleSelector","vehicleButtons","vehicleButton","activeVehicleButton","vehicleButtonText","activeVehicleButtonText","vehicleSummary","summaryRow","summaryItem","summaryLabel","summaryValue","recordsList","recordsContainer","recordCard","recordHeader","recordInfo","recordStatus","typeBadge","typeText","recordDetails","detailRow","detailLabel","costText","nextMaintenanceText","partsContainer","partsTitle","partsList","partItem","morePartsText","fontStyle","selectedVehicle","setSelectedVehicle","maintenanceRecords","setMaintenanceRecords","vehicles","setVehicles","mockVehicles","model","year","totalMileage","mockMaintenanceRecords","parts","partNumber","quantity","unitPrice","nextMaintenanceDate","nextMaintenanceMileage","invoiceNumber","technician","warranty","filteredRecords","record","getServiceTypeColor","formatCurrency","amount","selectedVehicleInfo","find","v","completedRecords","r","totalMaintenanceCost","reduce","sum","vehicle","totalPartsCost","part","laborCost","handleRecordPress","SmartHomeScreen","vehicleData","setVehicleData","setVehicleStatus","maintenanceAlerts","setMaintenanceAlerts","isConnected","setIsConnected","refreshing","setRefreshing","_useState15","_useState16","initializeConnection","callback","interval","setInterval","clearInterval","startVehicleDataStream","updateMaintenanceAlerts","connected","obdError","_yield$Promise$all","all","_yield$Promise$all2","dataError","getMockVehicleStatus","loadCurrentLocation","analysis","urgent","recommended","scheduled","analyzeMaintenanceNeeds","alerts","forEach","onRefresh","handleQuickAction","action","scrollView","refreshControl","RefreshControl","settingsButton","LinearGradient","colors","mainStatusCard","connectionStatus","connectionText","actionGrid","alertsSection","alertCard","alertContent","alertMessage","alertType","navigationPreview","navHeader","navTitle","navDescription","aspectRatio","Notifications","handleNotification","_handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","queryClient","QueryClient","defaultOptions","queries","retry","staleTime","RootStack","createStackNavigator","AuthStack","Tab","createBottomTabNavigator","AuthStackScreen","Navigator","screenOptions","headerShown","Screen","component","MainTabs","tabBarIcon","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","headerStyle","headerTintColor","headerTitleStyle","LoadingScreen","RootNavigator","requestPermissions","existingStatus","cardStyle","headerBackTitle","MaintenanceBookingScreen","WorkshopSearchScreen","MaintenanceHistoryScreen","registerRootComponent","QueryClientProvider","client","NavigationContainer","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}