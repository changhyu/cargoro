apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.apiGateway.name }}
  labels:
    app: {{ .Values.apiGateway.name }}
    environment: {{ .Values.global.environment }}
spec:
  replicas: {{ .Values.apiGateway.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.apiGateway.name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Values.apiGateway.name }}
        environment: {{ .Values.global.environment }}
    spec:
      containers:
        - name: {{ .Values.apiGateway.name }}
          image: {{ .Values.apiGateway.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          # 환경 변수 설정
          env:
            {{- range $key, $value := .Values.apiGateway.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          # 리소스 제한 설정
          resources:
            {{- toYaml .Values.apiGateway.resources | nindent 12 }}
          # 상태 확인 설정
          livenessProbe:
            {{- toYaml .Values.apiGateway.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.apiGateway.readinessProbe | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
            - name: tmp-volume
              mountPath: /tmp
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.apiGateway.name }}-config
        - name: tmp-volume
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.apiGateway.name }}
  labels:
    app: {{ .Values.apiGateway.name }}
    environment: {{ .Values.global.environment }}
spec:
  type: {{ .Values.apiGateway.service.type }}
  ports:
    - port: {{ .Values.apiGateway.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: {{ .Values.apiGateway.name }}
---
{{- if .Values.apiGateway.ingress.enabled -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.apiGateway.name }}
  labels:
    app: {{ .Values.apiGateway.name }}
    environment: {{ .Values.global.environment }}
  {{- with .Values.apiGateway.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.apiGateway.ingress.tls }}
  tls:
    {{- range .Values.apiGateway.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.apiGateway.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType }}
            backend:
              service:
                name: {{ $.Values.apiGateway.name }}
                port:
                  number: {{ $.Values.apiGateway.service.port }}
          {{- end }}
    {{- end }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.apiGateway.name }}-config
  labels:
    app: {{ .Values.apiGateway.name }}
    environment: {{ .Values.global.environment }}
data:
  config.json: |
    {
      "env": "{{ .Values.global.environment }}",
      "logLevel": "info"
    }
---
{{- if .Values.networkPolicies.enabled -}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.apiGateway.name }}-network-policy
  labels:
    app: {{ .Values.apiGateway.name }}
    environment: {{ .Values.global.environment }}
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.apiGateway.name }}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 80
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: {{ .Values.postgres.name }}
    ports:
    - protocol: TCP
      port: {{ .Values.postgres.service.port }}
  - to:
    - podSelector:
        matchLabels:
          app: {{ .Values.redis.name }}
    ports:
    - protocol: TCP
      port: {{ .Values.redis.service.port }}
  - to:
    - podSelector:
        matchLabels:
          app: {{ .Values.rabbitmq.name }}
    ports:
    - protocol: TCP
      port: {{ .Values.rabbitmq.service.amqpPort }}
  - to:
    - namespaceSelector: {}
      podSelector: {}
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
{{- end }}