apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.redis.name }}
  labels:
    app: {{ .Values.redis.name }}
    environment: {{ .Values.global.environment }}
spec:
  serviceName: {{ .Values.redis.name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.redis.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.redis.name }}
        environment: {{ .Values.global.environment }}
    spec:
      containers:
        - name: {{ .Values.redis.name }}
          image: {{ .Values.redis.image }}
          imagePullPolicy: IfNotPresent
          command:
            - redis-server
            - --requirepass
            - $(REDIS_PASSWORD)
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: REDIS_PASSWORD
              value: {{ .Values.redis.password | quote }}
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.redis.livenessProbe | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      {{- if .Values.redis.persistence.enabled }}
      volumes: []
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: {{ .Values.redis.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.redis.persistence.size }}
      {{- else }}
      volumes:
        - name: data
          emptyDir: {}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.redis.name }}
  labels:
    app: {{ .Values.redis.name }}
    environment: {{ .Values.global.environment }}
spec:
  type: ClusterIP
  ports:
    - port: {{ .Values.redis.service.port }}
      targetPort: redis
      protocol: TCP
      name: redis
  selector:
    app: {{ .Values.redis.name }}
---
{{- if .Values.networkPolicies.enabled -}}
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Values.redis.name }}-network-policy
  labels:
    app: {{ .Values.redis.name }}
    environment: {{ .Values.global.environment }}
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.redis.name }}
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: {{ .Values.apiGateway.name }}
    ports:
    - protocol: TCP
      port: 6379
  - from:
    - podSelector:
        matchLabels:
          app: {{ .Values.worker.name }}
    ports:
    - protocol: TCP
      port: 6379
{{- end }}