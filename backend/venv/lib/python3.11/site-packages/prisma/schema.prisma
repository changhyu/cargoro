datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator py {
  provider = "prisma-client-py"
}

enum UserRole {
  ADMIN
  MANAGER
  DRIVER
  MECHANIC
  OPERATOR
  VIEWER
}

model User {
  id            String               @id @default(uuid())
  email         String               @unique
  passwordHash  String
  fullName      String
  role          UserRole
  phone         String?
  isActive      Boolean              @default(true)
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  permissions   UserPermission[]
  organizations OrganizationMember[]
}

model Permission {
  id              String           @id @default(uuid())
  code            String           @unique
  name            String
  description     String?
  isActive        Boolean          @default(true)
  userPermissions UserPermission[]
  rolePermissions RolePermission[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model UserPermission {
  id           String     @id @default(uuid())
  userId       String
  permissionId String
  granted      Boolean    @default(true)
  user         User       @relation(fields: [userId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([userId, permissionId])
}

model RolePermission {
  id           String     @id @default(uuid())
  role         UserRole
  permissionId String
  permission   Permission @relation(fields: [permissionId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@unique([role, permissionId])
}

model Organization {
  id             String               @id @default(uuid())
  name           String
  description    String?
  businessNumber String?              @unique
  address        String?
  phone          String?
  email          String?
  isActive       Boolean              @default(true)
  createdAt      DateTime             @default(now())
  updatedAt      DateTime             @updatedAt
  members        OrganizationMember[]
}

model OrganizationMember {
  id             String       @id @default(uuid())
  userId         String
  organizationId String
  role           UserRole
  isActive       Boolean      @default(true)
  joinedAt       DateTime     @default(now())
  user           User         @relation(fields: [userId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])

  @@unique([userId, organizationId])
}
